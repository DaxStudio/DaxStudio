<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:conv="clr-namespace:DaxStudio.UI.Converters"
                    xmlns:local="clr-namespace:DaxStudio.UI.Resources">

    <conv:MultiplyConverter x:Key="multiplyConverter" />

    <ControlTemplate x:Key="ExpanderButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border x:Name="ExpanderButtonBorder"
        		Background="{TemplateBinding Background}"
        		BorderBrush="{TemplateBinding BorderBrush}"
        		BorderThickness="{TemplateBinding BorderThickness}"
        		Padding="{TemplateBinding Padding}"
                    >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Rectangle Fill="Transparent"
        				Grid.ColumnSpan="2"/>
                <!-- Data="M 1,1.5 L 4.5,5 8,1.5" -->
                <Path x:Name="Arrow"
        				Grid.Column="0"
        				Data="M 1,1 L 4,4.5 1,8"
        				Stroke="#FF666666"
        				StrokeThickness="2"
        				HorizontalAlignment="Center"
        				VerticalAlignment="Center"
        				RenderTransformOrigin="0.5,0.5"
                      >
                    <Path.RenderTransform>
                        <RotateTransform Angle="0"/>
                    </Path.RenderTransform>
                </Path>
                <ContentPresenter x:Name="HeaderContent"
        				Grid.Column="1"
        				Margin="4,0,0,0"
        				ContentSource="Content" 
                                      />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!-- Animate arrow when toggled-->
            <Trigger Property="IsChecked"
                         Value="False">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                 To="0"
                                                 Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                 To="90"
                                                 Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <!-- MouseOver, Pressed behaviours-->
            <Trigger Property="IsMouseOver"
                                 Value="true">

                <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="Arrow"/>
            </Trigger>
            <Trigger Property="IsPressed"
                                 Value="true">

                <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="Arrow"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="AnimatedExpanderButtonTemp" TargetType="{x:Type ToggleButton}">
        <Border x:Name="ExpanderButtonBorder"
        		Background="{TemplateBinding Background}"
        		BorderBrush="{TemplateBinding BorderBrush}"
        		BorderThickness="{TemplateBinding BorderThickness}"
        		Padding="{TemplateBinding Padding}"
                    >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Rectangle Fill="Transparent"
        				Grid.ColumnSpan="2"/>
                <Ellipse x:Name="Circle"
        				Grid.Column="0"
        				Stroke="DarkGray"
        				Width="20"
        				Height="20"
        				HorizontalAlignment="Center"
        				VerticalAlignment="Center"
                         />
                <Path x:Name="Arrow"
        				Grid.Column="0"
        				Data="M 1,1.5 L 4.5,5 8,1.5"
        				Stroke="#FF666666"
        				StrokeThickness="2"
        				HorizontalAlignment="Center"
        				VerticalAlignment="Center"
        				RenderTransformOrigin="0.5,0.5"
                      >
                    <Path.RenderTransform>
                        <RotateTransform Angle="0"/>
                    </Path.RenderTransform>
                </Path>
                <ContentPresenter x:Name="HeaderContent"
        				Grid.Column="1"
        				Margin="4,0,0,0"
        				ContentSource="Content" 
                                      />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!-- Animate arrow when toggled-->
            <Trigger Property="IsChecked"
                         Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                 To="180"
                                                 Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <!-- MouseOver, Pressed behaviours-->
            <Trigger Property="IsMouseOver"
                                 Value="true">
                <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="Circle"/>
                <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="Arrow"/>
            </Trigger>
            <Trigger Property="IsPressed"
                                 Value="true">
                <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="Circle"/>
                <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="Circle"/>
                <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="Arrow"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    
    <ControlTemplate x:Key="RevealExpanderTemp" TargetType="{x:Type Expander}">
        <DockPanel>
            <ToggleButton x:Name="ExpanderButton" 
        			DockPanel.Dock="Top"
        			Template="{StaticResource AnimatedExpanderButtonTemp}"
        			Content="{TemplateBinding Header}"
        			IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
        			OverridesDefaultStyle="True"
        			Padding="1.5,0"/>
            <ScrollViewer x:Name="ExpanderContentScrollView" DockPanel.Dock="Bottom"
        			HorizontalScrollBarVisibility="Hidden"
        			VerticalScrollBarVisibility="Hidden"
        			HorizontalContentAlignment="Stretch"
        			VerticalContentAlignment="Bottom"
        			Opacity="0"
                    >
                <ScrollViewer.Tag>
                    <sys:Double>0.0</sys:Double>
                </ScrollViewer.Tag>
                <ScrollViewer.Height>
                    <MultiBinding Converter="{StaticResource multiplyConverter}">
                        <Binding Path="ActualHeight" ElementName="ExpanderContent"/>
                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </ScrollViewer.Height>
                <ContentPresenter x:Name="ExpanderContent" ContentSource="Content"/>
            </ScrollViewer>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Trigger.EnterActions >
                    <BeginStoryboard HandoffBehavior="Compose">
                        <Storyboard AutoReverse="False" Name="ExpanderOpen">
                            <DoubleAnimation Storyboard.TargetName="ExpanderContentScrollView"
                                            Storyboard.TargetProperty="Tag"
                                            From="0.0"
                                            To="1.0"
                                            Duration="0:0:0.4"/>

                            <DoubleAnimation Storyboard.TargetName="ExpanderContentScrollView"
											Storyboard.TargetProperty="(UIElement.Opacity)"
                                            From="0.0"
											To="1.0" 
                                            Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard AutoReverse="False"  Name="ExpanderClose">
                            <DoubleAnimation Storyboard.TargetName="ExpanderContentScrollView"
                                            Storyboard.TargetProperty="Tag"
                                            From="1.0"
                                            To="0.0"
                                            Duration="0:0:0.4"/>
                            <DoubleAnimation Storyboard.TargetName="ExpanderContentScrollView"
											Storyboard.TargetProperty="(UIElement.Opacity)"
                                            From="1.0"
											To="0.0" Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>