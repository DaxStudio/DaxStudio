<controls:ZoomableUserControl x:Class="DaxStudio.UI.Views.CustomTraceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
             xmlns:conv="clr-namespace:DaxStudio.UI.Converters"
             xmlns:controls="clr-namespace:DaxStudio.UI.Controls"
             xmlns:behaviours="clr-namespace:DaxStudio.UI.Behaviours"
             xmlns:filter="clr-namespace:DaxStudio.Controls.DataGridFilter;assembly=DaxStudio.Controls.DataGridFilter"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
             xmlns:markupExtensions="clr-namespace:DaxStudio.UI.MarkupExtensions"
             xmlns:local="clr-namespace:DaxStudio.Common.Enums;assembly=DaxStudio.Common"
             xmlns:res="clr-namespace:DaxStudio.UI.Resources" 
             xmlns:queryTrace="clr-namespace:DaxStudio.QueryTrace;assembly=DaxStudio.QueryTrace"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="800"
             >
    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <res:DesignTimeResourceDictionary DesignTimeSource="pack://application:,,,/Fluent;component/Themes/Generic.xaml"/>
                <res:DesignTimeResourceDictionary DesignTimeSource="pack://application:,,,/DaxStudio.UI;component/Theme/Light.DaxStudio.Theme.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/DaxStudioResources.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/BusyPanel.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/DaxStudio.Spinner.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/TraceWatcherStyles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/DataGrid.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <conv:StringWhitespaceRemovalConverter x:Key="StringWhitespaceRemovalConverter"></conv:StringWhitespaceRemovalConverter>
            <conv:BoolToHiddenConverter x:Key="BoolToVisibilityConverter" />
            <conv:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
            <conv:BoolToCollapsedConverter x:Key="BoolToCollapsedConverter"/>
            <conv:BoolToNotCollapsedConverter x:Key="BoolToNotCollapsedConverter"/>

            <Style x:Key="AlignRight" TargetType="{x:Type TextBlock}" >
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="4"/>
            </Style>

            <Style x:Key="LongText" TargetType="{x:Type TextBlock}" >
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="4"/>
            </Style>


            <Style TargetType="{x:Type ToolTip}">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock TextWrapping="Wrap" TextTrimming="CharacterEllipsis" MaxWidth="450" MaxHeight="200" Text="{Binding}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate x:Key="ObjectTextCell">
                <!--<ScrollViewer VerticalScrollBarVisibility="Auto" Margin="0" MaxHeight="70">-->
                <Border Margin="0" Padding="0" 
                                  cal:Message.Attach="[Event MouseDoubleClick] = [Action TextDoubleClick($datacontext)]">
                    <TextBlock x:Name="Query"
                            Text="{Binding Path=Text,Mode=OneWay,Converter={StaticResource StringWhitespaceRemovalConverter}}"  
                            VerticalAlignment="Top" 
                            HorizontalAlignment="Left"   
                            TextTrimming="CharacterEllipsis"
                            ToolTip="{Binding Text}">
                    </TextBlock>

                </Border>
                <!--</ScrollViewer>-->
            </DataTemplate>
            
            <DataTemplate x:Key="QueryTextCell">
                <!--<ScrollViewer VerticalScrollBarVisibility="Auto" Margin="0" MaxHeight="70">-->
                <Border Margin="0" Padding="0" 
                                  cal:Message.Attach="[Event MouseDoubleClick] = [Action TextDoubleClick($datacontext)]">
                    <TextBlock x:Name="Query"
                            Text="{Binding Path=Text,Mode=OneWay,Converter={StaticResource StringWhitespaceRemovalConverter}}"  
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"   
                            TextTrimming="CharacterEllipsis"
                            ToolTip="{Binding Text}">
                    </TextBlock>

                </Border>
                <!--</ScrollViewer>-->
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Width="Auto">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- command bar -->
        <controls:ClipBorder                 
                Background="{DynamicResource Theme.Brush.MenuBar.Back}"
                Margin="0 0 0 8">
            <DockPanel LastChildFill="False">
                <ToggleButton DockPanel.Dock="Left" Style="{StaticResource TraceToggleButton}" IsChecked="{Binding IsRecording}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource record_toolbarDrawingImage}"
                               Margin="0 0 4 0"/>
                        <TextBlock>Record</TextBlock>
                    </StackPanel>
                </ToggleButton>
                <ToggleButton DockPanel.Dock="Left" Style="{StaticResource TraceToggleButton}" IsChecked="{Binding IsPaused}" IsEnabled="{Binding CanPause}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource pause_toolbarDrawingImage}"
                               Margin="0 0 4 0"/>
                        <TextBlock>Pause</TextBlock>
                    </StackPanel>
                </ToggleButton>

                <ToggleButton DockPanel.Dock="Left" Style="{StaticResource TraceToggleButton}" IsChecked="{Binding IsStopped}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource cancelDrawingImage}" Width="16"
                               Margin="0 0 4 0"/>
                        <TextBlock>Stop</TextBlock>
                    </StackPanel>
                </ToggleButton>
                <Button DockPanel.Dock="Left" Style="{StaticResource TraceButton}"
                        cal:Message.Attach="[Event Click] = [Action ClearAll]">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource clear_toolbarDrawingImage}"
                               Margin="0 0 4 0"/>
                        <TextBlock>Clear</TextBlock>
                    </StackPanel>
                </Button>
                <Button DockPanel.Dock="Left" Style="{StaticResource TraceButton}"
                        cal:Message.Attach="[Event Click] = [Action CopyAll]">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource copy_toolbarDrawingImage}"
                               Margin="0 0 4 0"/>
                        <TextBlock>Copy</TextBlock>
                    </StackPanel>
                </Button>
                <Button DockPanel.Dock="Left" Style="{StaticResource TraceButton}"
                        cal:Message.Attach="[Event Click] = [Action Export]">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource save_toolbarDrawingImage}"
                               Margin="0 0 4 0"/>
                        <TextBlock>Export</TextBlock>
                    </StackPanel>
                </Button>


                <!--<Rectangle DockPanel.Dock="Right"/>-->



                <!--<ToggleButton DockPanel.Dock="Right" Style="{StaticResource TraceToggleButton}" IsChecked="{Binding ShowFilters}"
                              ToolTip="Show Filter Controls">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource right_layout_toolbarDrawingImage}"
                               Margin="0 0 4 0"/>
                        <TextBlock>Filters</TextBlock>
                    </StackPanel>
                </ToggleButton>-->
            </DockPanel>
        </controls:ClipBorder>

        <TextBlock Name="TraceStatusText" 
                   Grid.Row="1"
                   Visibility="{Binding TraceStatusText, Converter={StaticResource StringToVisibilityConverter}}" 
                   Background="{DynamicResource WarningBarBackgroundBrush}" 
                   Foreground="{StaticResource MutedTextBrush}" Padding="5,1,0,1"/>

        <!-- ColumnHeaderStyle="{StaticResource {ComponentResourceKey 
		            TypeInTargetAssembly={x:Type filter:DataGridHeaderFilterControl}, 
		            ResourceId=DataGridHeaderFilterControlStyle}}" -->
        <controls:ClipBorder Grid.Row="2" CornerRadius="8" Margin="0,0,0,8">
            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Center" >
                <Label HorizontalContentAlignment="Center"
                       VerticalContentAlignment="Center"
                       Content="&lt; Writing Events to File &gt;"
                       Visibility="{Binding IsGridOutput, Converter={StaticResource BoolToNotCollapsedConverter}}"/>
                <!-- -->
                    
                <controls:DataGridNoContextMenu x:Name="TraceEvents" 
                                                Style="{StaticResource DsDataGridStyle}"
                    ColumnHeaderStyle="{StaticResource DsDataGridColumnHeaderStyle}"
                    Visibility="{Binding IsGridOutput, Converter={StaticResource BoolToVisibilityConverter}}"                    
                    filter:DataGridExtensions.UseBackgroundWorkerForFiltering="True"
                    filter:DataGridExtensions.IsClearButtonVisible="False"
                    filter:DataGridExtensions.IsFilterVisible="{Binding ShowFilters}"
                    Background="{DynamicResource Theme.Brush.Content.Back}"
                    AlternatingRowBackground="{DynamicResource Theme.Brush.Table.Alternate}"
                    Foreground="{DynamicResource Theme.Brush.Default.Fore}"
                    VirtualizingPanel.IsVirtualizing="True"
                    SelectedItem="{Binding SelectedQuery}" 
                    cal:Message.Attach="[Event MouseDoubleClick] = [Action TextDoubleClick()]"
                    HorizontalAlignment="Stretch" 
                    AutoGenerateColumns="False"
                    behaviours:GridViewColumnResize.Enabled="True" 
                    VerticalAlignment="Stretch" 
                    Width="Auto"
                    SelectionMode="Extended"
                    SelectionUnit="Cell"
                    HeadersVisibility="Column"
                    ClipboardCopyMode="ExcludeHeader"
                    ScrollViewer.CanContentScroll="True"
                    FrozenColumnCount="0"
                    IsReadOnly="True"
                    CanUserAddRows="False"
                    CanUserDeleteRows="False"
                                                
                    GridLinesVisibility="None" 
                    BorderThickness="1,0,0,0" BorderBrush="{x:Null}"
                    >

            <!--<DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>
                <Style x:Key="AlignRight" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DefaultDataGridCellStyle}" >
                    <Setter Property="HorizontalAlignment" Value="Right" />
                    
                </Style>
            </DataGrid.Resources>

            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell" BasedOn="{StaticResource DefaultDataGridCellStyle}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="5,0,5,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Padding="{TemplateBinding Padding}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}" 
                                        SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.CellStyle>
                    
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DefaultDataGridRowStyle}">
                    <EventSetter Event="Control.RequestBringIntoView" Handler="DataGrid_RequestBringIntoView"  />
                </Style>
            </DataGrid.RowStyle>-->
            <DataGrid.Columns>

                <DataGridTextColumn 
                    Header="StartTime" 
                    IsReadOnly="True" 
                    MinWidth="70" 
                    Binding="{Binding StartTime, StringFormat='hh:mm:ss'}"  
                    filter:DataGridColumnExtensions.DoNotGenerateFilterControl="True" />

                <DataGridComboBoxColumn Header="Class" MinWidth="60" 
                                        filter:DataGridColumnExtensions.CustomBindingPath="EventClass"
                                        ItemsSource="{Binding Source={markupExtensions:EnumBindingSource {x:Type local:DaxStudioTraceEventClass}}}"
                                        SelectedItemBinding="{Binding EventClass}"
                />
                <DataGridComboBoxColumn Header="Subclass" Width="80" 
                                        filter:DataGridColumnExtensions.CustomBindingPath="EventSubClass"
                                        ItemsSource="{Binding Source={markupExtensions:EnumBindingSource {x:Type queryTrace:DaxStudioTraceEventSubclass}}}"
                                        SelectedItemBinding="{Binding EventSubClass}"
                />

                <!--<DataGridTextColumn Header="Progress" IsReadOnly="True" Width="80" 
                                    Binding="{Binding ProgressTotal}" />-->

                <DataGridTextColumn Header="Duration" IsReadOnly="True" MinWidth="70" 
                                    Binding="{Binding Duration, StringFormat='#,0'}" 
                                    TextBlock.TextAlignment="Right"
                                    ElementStyle="{StaticResource AlignRight}"
                />

                <DataGridTextColumn Header="CPU"
                                    IsReadOnly="True"
                                    Width="60"
                                    Binding="{Binding CpuDuration, StringFormat='#,0'}"
                                    TextBlock.TextAlignment="Right"
                                    />

                <DataGridTextColumn Header="Object"
                                    IsReadOnly="True"
                                    Width="60"
                                    ElementStyle="{StaticResource LongText}"
                                    Binding="{Binding ObjectPath}"
                />
                <DataGridTemplateColumn Header="Text" Width="*" CellTemplate="{StaticResource QueryTextCell}" 
                                            filter:DataGridColumnExtensions.CustomBindingPath="Text"
                                            filter:DataGridColumnExtensions.IsContainsTextSearch="True"
                                            ClipboardContentBinding="{Binding Text}"
                                            />

            </DataGrid.Columns>
        </controls:DataGridNoContextMenu>
            
         </Grid>   
        </controls:ClipBorder>
        <controls:ClipBorder CornerRadius="8" Grid.Row="3">
        <StackPanel Orientation="Horizontal" Grid.Row="3" >
            <Label Margin="8">Events:</Label>
            <TextBlock Margin="8" x:Name="EventCount" MinWidth="50" Foreground="{DynamicResource Theme.Brush.Default.Fore}" Text="{Binding EventCount, StringFormat={}{0:N0}}"/>
            <Label Margin="8">File:</Label>
            <TextBlock x:Name="OutputFile" Foreground="{DynamicResource Theme.Brush.Default.Fore}" Margin="8"/>
        </StackPanel>
        </controls:ClipBorder>
        
        <FrameworkElement x:Name="bindingProxy" Visibility="Collapsed"/>
        
        <!-- Busy overlay -->
        <!--<Border 
                Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}" 
                Grid.RowSpan="4" 
            Grid.ColumnSpan="5"
            Style="{StaticResource BusyPanel}" d:IsHidden="True">

            <Grid>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    
                        <ProgressBar
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource MaterialDesignCircularProgressBar}" 
                                    
                                    Height="60"
                                    Width="60" />

                    
                    
                        <TextBlock x:Name="BusyMessage"/>
                    
                </StackPanel>
            </Grid>
        </Border>-->
    </Grid>
</controls:ZoomableUserControl>
