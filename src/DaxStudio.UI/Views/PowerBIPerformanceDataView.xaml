<controls:ZoomableUserControl x:Class="DaxStudio.UI.Views.PowerBIPerformanceDataView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
             xmlns:conv="clr-namespace:DaxStudio.UI.Converters"
             xmlns:controls="clr-namespace:DaxStudio.UI.Controls"
             xmlns:behaviours="clr-namespace:DaxStudio.UI.Behaviours"
             xmlns:extenders="clr-namespace:DaxStudio.UI.AttachedProperties"    
             xmlns:filter="clr-namespace:DaxStudio.Controls.DataGridFilter;assembly=DaxStudio.Controls.DataGridFilter"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:custom="clr-namespace:DaxStudio.UI.Controls"
             xmlns:vm="clr-namespace:DaxStudio.UI.ViewModels"
       xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="800"
             >
    <UserControl.Resources>
        
        
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/IconResourceDictionary.xaml" />
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/DaxStudioResources.xaml" />
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/BusyPanel.xaml" />
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/LabelSpinnerStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <conv:StringWhitespaceRemovalConverter x:Key="StringWhitespaceRemovalConverter"></conv:StringWhitespaceRemovalConverter>
            <conv:BoolToHiddenConverter x:Key="BoolToVisibilityConverter" />
            <conv:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />

            <col:ArrayList x:Key="QueryTypes">
                <x:Static Member="sys:String.Empty" />
                <sys:String>DAX</sys:String>
                <sys:String>DMX</sys:String>
                <sys:String>MDX</sys:String>
                <sys:String>SQL</sys:String>
            </col:ArrayList>

            <Style TargetType="{x:Type ToolTip}">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock TextWrapping="Wrap" TextTrimming="CharacterEllipsis" MaxWidth="450" MaxHeight="200" Text="{Binding}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            
            <DataTemplate x:Key="QueryTextCell">
                <!--<ScrollViewer VerticalScrollBarVisibility="Auto" Margin="0" MaxHeight="70">-->
                    <Border Margin="0" Padding="0" 
                                  cal:Message.Attach="[Event MouseDoubleClick] = [Action QueryDoubleClick($datacontext)]">
                        <TextBlock x:Name="QueryText"
                            Text="{Binding Path=QueryText, Mode=OneWay,Converter={StaticResource StringWhitespaceRemovalConverter}}"  
                            VerticalAlignment="Top" 
                            HorizontalAlignment="Left"   
                            TextTrimming="CharacterEllipsis"
                            ToolTip="{Binding QueryText}">
                        </TextBlock>

                    </Border>
                <!--</ScrollViewer>-->
            </DataTemplate>

            <Style x:Key="ImageCell"  TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                <Setter Property="Padding" Value="2,0,2,0"/>
            </Style>

            <Style TargetType="{x:Type controls:DataGridCustomCopy}" BasedOn="{StaticResource DefaultDataGridStyle}"/>

        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid >
        

        
        <!--<controls:DataGridNoContextMenu x:Name="PerformanceData"-->

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

<!-- Toolbar -->
            <controls:ClipBorder
                CornerRadius="4"
                BorderThickness="1"
                Margin="0 0 0 12"
                Background="{DynamicResource Theme.Brush.Content.Back}"
                BorderBrush="{DynamicResource Theme.Brush.Control.Border}">
                <Grid>
                    <Button x:Name="Export" >Export</Button>
                    <ToggleButton x:Name="ShowFilters" HorizontalAlignment="Right">Filter</ToggleButton>
                </Grid>
            </controls:ClipBorder>

            <controls:ClipBorder
                CornerRadius="4"
                BorderThickness="1"
                Grid.Row="1"
                Background="{DynamicResource Theme.Brush.Content.Back}"
                BorderBrush="{DynamicResource Theme.Brush.Control.Border}">
                <controls:DataGridCustomCopy x:Name="PerformanceData" 
                    
                    filter:DataGridExtensions.UseBackgroundWorkerForFiltering="True"
                    filter:DataGridExtensions.IsClearButtonVisible="True"
                    filter:DataGridExtensions.IsFilterVisible="{Binding ShowFilters}"
                                             
                    ColumnHeaderStyle="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type filter:DataGridHeaderFilterControl}, 
		            ResourceId=DataGridHeaderFilterControlStyle}}"
                    AlternationCount="2"
                    AlternatingRowBackground="{DynamicResource Theme.Brush.Table.Alternate}"
                    Background="{DynamicResource Theme.Brush.Content.Back}"
                    SelectedItem="{Binding SelectedPerfData}" 
                    cal:Message.Attach="[Event MouseDoubleClick] = [Action QueryDoubleClick()]"
                    HorizontalAlignment="Stretch" 
                    AutoGenerateColumns="False"
                    behaviours:GridViewColumnResize.Enabled="True" 
                    VerticalAlignment="Stretch" 
                    Width="Auto"
                    SelectionMode="Extended"
                    SelectionUnit="FullRow"
                    HeadersVisibility="Column"
                    ClipboardCopyMode="IncludeHeader"
                    ScrollViewer.CanContentScroll="True"
                    VerticalScrollBarVisibility="Auto"
                    FrozenColumnCount="1"
                    GridLinesVisibility="Horizontal" 
                    BorderThickness="1,0,0,0" BorderBrush="{x:Null}"
                    CanUserAddRows="False"
                    CanUserDeleteRows="False"
                    IsReadOnly="True"
                    >

            <DataGrid.Resources>

                        <Style TargetType="DataGrid" BasedOn="{StaticResource DefaultDataGridStyle}">
                            <Setter Property="Background" Value="{DynamicResource Theme.Brush.Content.Back}"/>
                        </Style>
                
                <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                                        <controls:ClipBorder
                                            CornerRadius="4"
                                            Background="{DynamicResource Theme.Brush.MenuBar.Back}"
                                            BorderThickness="1"
                                            BorderBrush="{DynamicResource Theme.Brush.Control.Border}"
                                            >
                                            <Grid>
                                                <DataGridColumnHeader x:Name="PART_FillerColumnHeader" IsHitTestVisible="False"/>
                                                <ItemsPresenter />
                                            </Grid>
                                        </controls:ClipBorder>
                                    </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DefaultDataGridColumnHeaderStyle}">
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="MinHeight" Value="20"/>
                </Style>
                <Style x:Key="AlignRight" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Setter Property="HorizontalAlignment" Value="Right" />
                </Style>
            </DataGrid.Resources>

            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="Copy" >
                        <MenuItem.Icon>
                            <Image Source="{DynamicResource copyDrawingImage}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
            
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="5,0,5,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Padding="{TemplateBinding Padding}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}" 
                                        SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DefaultDataGridRowStyle}">
                    <EventSetter Event="Control.RequestBringIntoView" Handler="DataGrid_RequestBringIntoView"  />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <!--<DataGridTextColumn Header="StartTime" IsReadOnly="True" Width="65" Binding="{Binding StartTime, StringFormat='hh:mm:ss'}"  />-->
                <DataGridTextColumn 
                    Header="#" 
                    IsReadOnly="True" 
                    Width="28" 
                    Binding="{Binding Sequence}"
                    filter:DataGridColumnExtensions.DoNotGenerateFilterControl="True" 
                    />
                
                <DataGridTextColumn 
                    Header="Visual" 
                    IsReadOnly="True" 
                    Width="75" 
                    Binding="{Binding VisualName}"
                    filter:DataGridColumnExtensions.IsContainsTextSearch="True"
                    />
                
                <DataGridTextColumn 
                    Header="QueryStart" 
                    IsReadOnly="True" 
                    Width="70" 
                    Binding="{Binding QueryStartTime, StringFormat='hh:mm:ss'}"  
                    filter:DataGridColumnExtensions.DoNotGenerateFilterControl="True"
                    filter:DataGridColumnExtensions.CustomBindingPath="QueryStartTime"/>
                <DataGridTextColumn 
                    Header="QueryEnd" 
                    IsReadOnly="True" 
                    Width="70" 
                    Binding="{Binding QueryEndTime, StringFormat='hh:mm:ss'}"  
                    filter:DataGridColumnExtensions.DoNotGenerateFilterControl="True"
                    filter:DataGridColumnExtensions.CustomBindingPath="QueryEndTime"/>
                <!--<DataGridTextColumn Header="Type" IsReadOnly="True" Width="40" 
                                        Binding="{Binding QueryType}" />-->

                <!--<DataGridComboBoxColumn Header="Type" Width="40" 
                                        filter:DataGridColumnExtensions.CustomBindingPath="QueryType"
                                        ItemsSource="{StaticResource QueryTypes}"
                                        SelectedItemBinding="{Binding QueryType}">
                </DataGridComboBoxColumn>-->
                <DataGridTextColumn Header="Rows" Width="40" 
                                    IsReadOnly="True"
                                    Binding="{Binding RowCount, StringFormat='#,0'}"
                                    ElementStyle="{StaticResource AlignRight}"
                                    filter:DataGridColumnExtensions.CustomBindingPath="RowCount"/>

                <DataGridTextColumn Header="Query Ms" IsReadOnly="True" Width="68" 
                                    Binding="{Binding QueryDuration, StringFormat='#,0'}" 
                                    ElementStyle="{StaticResource AlignRight}"
                                    filter:DataGridColumnExtensions.CustomBindingPath="QueryDuration"
                                    />
                <DataGridTextColumn Header="Render Ms" IsReadOnly="True" Width="68" 
                                    Binding="{Binding RenderDuration, StringFormat='#,0'}" 
                                    ElementStyle="{StaticResource AlignRight}"
                                    filter:DataGridColumnExtensions.CustomBindingPath="RenderDuration"
                                    />
                <DataGridTextColumn Header="Total Ms" IsReadOnly="True" Width="60" 
                                    Binding="{Binding TotalDuration, StringFormat='#,0'}" 
                                    ElementStyle="{StaticResource AlignRight}"
                                    filter:DataGridColumnExtensions.CustomBindingPath="TotalDuration"
                                    />

                <DataGridTemplateColumn Header="Query" Width="*" CellTemplate="{StaticResource QueryTextCell}" 
                                        filter:DataGridColumnExtensions.CustomBindingPath="QueryText"
                                        filter:DataGridColumnExtensions.IsContainsTextSearch="True"
                                        ClipboardContentBinding="{Binding QueryTextQuoted}"
                                        />

            </DataGrid.Columns>
        </controls:DataGridCustomCopy>
            </controls:ClipBorder>
        </Grid>
        
        <FrameworkElement x:Name="bindingProxy" Visibility="Collapsed"/>
        <!-- Busy overlay -->
        <Border 
                Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}" 
                Grid.RowSpan="3" 
            Grid.ColumnSpan="5"
            Style="{StaticResource BusyPanel}" d:IsHidden="True">

            <Grid>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Label Style="{StaticResource LabelSpinnerStyle}" Height="30" VerticalContentAlignment="Center"  FontSize="18" FontWeight="Bold" Foreground="#D0000000" Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock x:Name="BusyMessage"/>
                    </Label>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</controls:ZoomableUserControl>
