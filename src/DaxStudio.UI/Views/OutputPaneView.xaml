<controls:ZoomableUserControl  x:Class="DaxStudio.UI.Views.OutputPaneView"
             xmlns:controls="clr-namespace:DaxStudio.UI.Controls"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:conv="clr-namespace:DaxStudio.UI.Converters"
             xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:ctrl="clr-namespace:DaxStudio.UI.Controls"
             xmlns:behaviours="clr-namespace:DaxStudio.UI.Behaviours"
             xmlns:extenders="clr-namespace:DaxStudio.UI.AttachedProperties"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ap="clr-namespace:DaxStudio.UI.AttachedProperties"
                               
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="300">
    <UserControl.Resources>
        <conv:DateTimeToHhmmssConverter x:Key="DateTimeToHHHMMSS"></conv:DateTimeToHhmmssConverter>
        <conv:ResourceLookupConverter x:Key="Icons">
            <ResourceDictionary>
                <BitmapImage x:Key="Information" UriSource="pack://application:,,,/DaxStudio.UI;component/images/icon-info.png  "/>
                <BitmapImage x:Key="Warning" UriSource="pack://application:,,,/DaxStudio.UI;component/images/icon-warning.png" />
                <BitmapImage x:Key="Error"       UriSource="pack://application:,,,/DaxStudio.UI;component/images/icon-cancel.png" />
            </ResourceDictionary>
        </conv:ResourceLookupConverter>

        <conv:ResourceLookupConverter x:Key="IconNames">
            <ResourceDictionary>
                <sys:String x:Key="Information">infoDrawingImage</sys:String>
                <sys:String x:Key="Warning">alertDrawingImage</sys:String>
                <sys:String x:Key="Error">failDrawingImage</sys:String>
                <sys:String x:Key="Success">successDrawingImage</sys:String>
            </ResourceDictionary>
        </conv:ResourceLookupConverter>
        
        <conv:ResourceLookupConverter x:Key="OutputColor">
            <ResourceDictionary>
                <!--<SolidColorBrush x:Key="Information"  Color="Cyan"></SolidColorBrush>-->
                <sys:String x:Key="Information">Theme.Brush.Default.Fore</sys:String>
                <sys:String x:Key="Warning">Theme.Brush.Log.Warning</sys:String>
                <sys:String x:Key="Error">Theme.Brush.Log.Error</sys:String>
                <sys:String x:Key="Success">Theme.Brush.Log.Success</sys:String>
            </ResourceDictionary>
        </conv:ResourceLookupConverter>

        <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
            <Setter Property="Background" Value="{DynamicResource Theme.Brush.MenuBar.Back}"/>
            <Setter Property="Foreground" Value="{DynamicResource Theme.Brush.Default.Fore}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Theme.Brush.Control.Border}"/>
            <!--<Setter Property="CornerRadius" Value="4"/>-->
            <!--<Setter Property="FontWeight" Value="Bold"/>-->
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="8 0"/>
        </Style>

        <!-- BasedOn="{StaticResource {x:Type ListViewItem}}" 
        BasedOn="{StaticResource DefaultGridViewItemStyle}"
        -->
        <Style x:Key="alternatingRows" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Static GridView.GridViewItemContainerStyleKey}}">
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                    <Setter Property="Background" Value="{DynamicResource Theme.Brush.Table.Alternate}" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    
        <ctrl:ClipBorder 
            x:Name="outerBorder"
            BorderBrush="{DynamicResource Theme.Brush.Control.Border}" 
            Background="{DynamicResource Theme.Brush.Content.Back}"
                BorderThickness="1"
                ClipToBounds="True"
                CornerRadius="4">
        
        <Grid >
            <!--<Grid.OpacityMask>
                <VisualBrush Visual="{Binding ElementName=outerBorder}" />
            </Grid.OpacityMask>-->
            <ListView x:Name="Messages" 
                HorizontalAlignment="Stretch"  
                      AlternationCount="2"
                behaviours:GridViewColumnResize.Enabled="True"
                extenders:ListViewExtenders.AutoScrollToEnd="True"
                      ItemContainerStyle="{StaticResource alternatingRows}"
                Focusable="False" >
            <ListView.View>
                <GridView>
                    <!-- Icon -->
                    <GridViewColumn Header="" Width="Auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                    <Image Width="18" Height="18" ap:ImageBindingHelper.SourceResourceKey="{Binding Path=MessageType, Converter={StaticResource IconNames}}"  />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <!-- Time -->
                    <GridViewColumn Header="Start"
                                    Width="62"
                                    >
                            
                            <GridViewColumn.HeaderContainerStyle>
                                <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </Style>
                            </GridViewColumn.HeaderContainerStyle>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock  ap:BrushBindingHelper.ForegroundResourceKey="{Binding MessageType, Converter={StaticResource OutputColor}}" Text="{Binding Start, Converter={StaticResource DateTimeToHHHMMSS}}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        
                    </GridViewColumn>
                    
                    <GridViewColumn Width="Auto">
                        <GridViewColumn.Header>
                            <StackPanel Orientation="Horizontal" ToolTip="Client Duration - includes network transfer and rendering time">
                                <TextBlock Text="Duration" Padding="6 0 0 0" FontWeight="Bold" />
                                <TextBlock Text=" i" FontFamily="WebDings" FontSize="11" RenderTransformOrigin="0.5,0.5">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform Y="3"/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </StackPanel>
                        </GridViewColumn.Header>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Right">
                                    <TextBlock  HorizontalAlignment="Right" 
                                            ap:BrushBindingHelper.ForegroundResourceKey="{Binding MessageType, Converter={StaticResource OutputColor}}"
                                            Text="{Binding DurationString}" ToolTip="{Binding DurationTooltip}"/>
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    <GridViewColumn 
                                    behaviours:GridViewColumnResize.Width="*1">
                            <GridViewColumn.Header>
                                <TextBlock Text="Message" Padding="8 0" FontWeight="Bold"/>
                            </GridViewColumn.Header>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate x:Name="Text">
                                <Label 
                                    cal:Message.Attach="[Event MouseDoubleClick] = [Action MessageDoubleClick($dataContext)]"
                                    Background="Transparent"
                                    VerticalAlignment="Top"
                                    Margin="5,0,2,2"
                                    Padding="0">
                                    <TextBlock TextWrapping="Wrap" 
                                               ap:BrushBindingHelper.ForegroundResourceKey="{Binding MessageType, Converter={StaticResource OutputColor}}"
                                               HorizontalAlignment="Stretch" 
                                               TextTrimming="None" 
                                               Text="{Binding Text}"/>
                                </Label>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                   
                </GridView>
            </ListView.View>

            <i:Interaction.Behaviors>
                <behaviours:ListViewClipboardBehaviour />
            </i:Interaction.Behaviors>
        </ListView>
        </Grid>

    </ctrl:ClipBorder>
    
</controls:ZoomableUserControl>
