<controls:ZoomableUserControl x:Class="DaxStudio.UI.Views.AllServerQueriesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
             xmlns:conv="clr-namespace:DaxStudio.UI.Converters"
             xmlns:controls="clr-namespace:DaxStudio.UI.Controls"
             xmlns:behaviours="clr-namespace:DaxStudio.UI.Behaviours"
             xmlns:filter="clr-namespace:DaxStudio.Controls.DataGridFilter;assembly=DaxStudio.Controls.DataGridFilter"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             xmlns:ap="clr-namespace:DaxStudio.UI.AttachedProperties"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="800"
             >
    <UserControl.Resources>
        
        
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/DaxStudioResources.xaml" />
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/BusyPanel.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/DaxStudio.Spinner.xaml"/>
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/TraceWatcherStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <conv:StringWhitespaceRemovalConverter x:Key="StringWhitespaceRemovalConverter"></conv:StringWhitespaceRemovalConverter>
            <conv:BoolToHiddenConverter x:Key="BoolToVisibilityConverter" />
            <conv:BoolToNotCollapsedConverter x:Key="BoolToNotCollapsedConverter"/>
            <conv:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
            <conv:LongToFormattedMsConverter x:Key="LongToFormattedMsConverter"/>
            
            <col:ArrayList x:Key="QueryTypes">
                <x:Static Member="sys:String.Empty" />
                <sys:String>DAX</sys:String>
                <sys:String>DMX</sys:String>
                <sys:String>MDX</sys:String>
                <sys:String>SQL</sys:String>
                <sys:String>ERR</sys:String>
                <sys:String>Xmla</sys:String>
            </col:ArrayList>

            <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource {x:Type ToolTip}}">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock TextWrapping="Wrap" TextTrimming="CharacterEllipsis" MaxWidth="450" MaxHeight="200" Text="{Binding}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="AggregateRewriteTooltipStyle" TargetType="{x:Type ToolTip}" BasedOn="{StaticResource {x:Type ToolTip}}">
                <Setter Property="OverridesDefaultStyle" Value="false"/>
                <Setter Property="Background" Value="{DynamicResource Theme.Brush.Tooltip.Back}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Theme.Brush.Tooltip.Border}"/>
                <Setter Property="HasDropShadow" Value="True"/>
                <Setter Property="DataContext" Value="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    Padding="5"
                                    >
                                <Border.Effect>
                                    <DropShadowEffect/>
                                </Border.Effect>
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Text="Aggregation Rewrite: "
                                           Foreground="{DynamicResource Theme.Brush.Default.Fore}"/>
                                <TextBlock Text="Aggregation Hits: "  Grid.Row="1"
                                           Foreground="{DynamicResource Theme.Brush.Default.Fore}"/>
                                <TextBlock Text="Aggregation Misses: " Grid.Row="2"
                                           Foreground="{DynamicResource Theme.Brush.Default.Fore}"/>
                                <TextBlock Text="{Binding AggregationStatus}" Grid.Column="1"
                                           Foreground="{DynamicResource Theme.Brush.Default.Fore}"/>
                                <TextBlock Text="{Binding AggregationMatchCount}" Grid.Column="1" Grid.Row="1"
                                           Foreground="{DynamicResource Theme.Brush.Default.Fore}"/>
                                <TextBlock Text="{Binding AggregationMissCount}" Grid.Column="1" Grid.Row="2"
                                           Foreground="{DynamicResource Theme.Brush.Default.Fore}"/>
                            </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ToolTip x:Key="AggregateRewriteTooltip" Style="{StaticResource AggregateRewriteTooltipStyle}"/>
            
            <Style x:Key="QueryTypeStyle" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding QueryType}" Value="ERR">
                        <Setter Property="Foreground" Value="OrangeRed"/>
                    </DataTrigger>
                </Style.Triggers>
                
            </Style>
            
            <Style x:Key="QueryTextStyle" TargetType="{x:Type DataGridCell}">
                <Setter Property="Margin" Value="5,2"/>
            </Style>

            <DataTemplate x:Key="QueryTextCell">
                <!--<ScrollViewer VerticalScrollBarVisibility="Auto" Margin="0" MaxHeight="70">-->
                    <Border Margin="0" Padding="0" 
                                  cal:Message.Attach="[Event MouseDoubleClick] = [Action QueryDoubleClick($datacontext)]">
                        <TextBlock x:Name="Query"
                            Text="{Binding Path=Query,Mode=OneWay,Converter={StaticResource StringWhitespaceRemovalConverter}}"  
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"   
                            TextTrimming="CharacterEllipsis"
                            ToolTip="{Binding Query}">
                        </TextBlock>

                    </Border>
                <!--</ScrollViewer>-->
            </DataTemplate>
            <!-- BasedOn="{StaticResource {x:Type DataGridCell}}" -->
            <Style x:Key="ImageCell"  TargetType="DataGridCell">
                <Setter Property="Padding" Value="2,0,2,0"/>
            </Style>

            <Style TargetType="{x:Type controls:DataGridCustomCopy}" BasedOn="{StaticResource DefaultDataGridStyle}"/>

            <Style x:Key="RightHeader" TargetType="DataGridColumnHeader" BasedOn="{StaticResource {ComponentResourceKey 
		                                TypeInTargetAssembly={x:Type filter:DataGridHeaderFilterControl}, 
		                                ResourceId=DataGridHeaderFilterControlStyle}}">
                <Setter Property="HorizontalContentAlignment" Value="Right"/>
            </Style>
            
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid Width="Auto">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- command bar -->
        <controls:ClipBorder                 
                Background="{DynamicResource Theme.Brush.MenuBar.Back}"
                Margin="0 0 0 8">
            <DockPanel LastChildFill="False">
                <ToggleButton DockPanel.Dock="Left" Style="{StaticResource TraceToggleButton}" IsChecked="{Binding IsRecording}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource record_toolbarDrawingImage}"
                               Margin="0 0 4 0"/>
                        <TextBlock>Record</TextBlock>
                    </StackPanel>
                </ToggleButton>
                <ToggleButton DockPanel.Dock="Left" Style="{StaticResource TraceToggleButton}" IsChecked="{Binding IsPaused}" IsEnabled="{Binding CanPause}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource pause_toolbarDrawingImage}"
                               Margin="0 0 4 0"/>
                        <TextBlock>Pause</TextBlock>
                    </StackPanel>
                </ToggleButton>

                <ToggleButton DockPanel.Dock="Left" Style="{StaticResource TraceToggleButton}" IsChecked="{Binding IsStopped}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource cancelDrawingImage}" Width="16"
                               Margin="0 0 4 0"/>
                        <TextBlock>Stop</TextBlock>
                    </StackPanel>
                </ToggleButton>
                <Button DockPanel.Dock="Left" Style="{StaticResource TraceButton}"
                        cal:Message.Attach="[Event Click] = [Action ClearAll]">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource clear_toolbarDrawingImage}"
                               Margin="0 0 4 0"/>
                        <TextBlock>Clear</TextBlock>
                    </StackPanel>
                </Button>
                <Button DockPanel.Dock="Left" Style="{StaticResource TraceButton}"
                        cal:Message.Attach="[Event Click] = [Action CopyAll]">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource copy_toolbarDrawingImage}"
                               Margin="0 0 4 0"/>
                        <TextBlock>Copy</TextBlock>
                    </StackPanel>
                </Button>
                <Button DockPanel.Dock="Left" Style="{StaticResource TraceButton}"
                        cal:Message.Attach="[Event Click] = [Action Export]">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource save_toolbarDrawingImage}"
                               Margin="0 0 4 0"/>
                        <TextBlock>Export</TextBlock>
                    </StackPanel>
                </Button>

                <Button DockPanel.Dock="Left" Style="{StaticResource TraceButton}"
                        cal:Message.Attach="[Event Click] = [Action ShowTraceDiagnostics]">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource aboutDrawingImage}"
                               Width="16" Height="16"
                               Margin="0 0 4 0"/>
                        <TextBlock>Info</TextBlock>
                    </StackPanel>
                </Button>
                <!--<Rectangle DockPanel.Dock="Right"/>-->
                <Button DockPanel.Dock="Left" Style="{StaticResource TraceButton}" x:Name="CaptureDiagnostics">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource toolbar_capture_diagnosticsDrawingImage}" 
                                    Margin="4 0 4 0"/>
                        <TextBlock>Capture Diagnostics</TextBlock>
                    </StackPanel>
                </Button>


                <ToggleButton DockPanel.Dock="Right" Style="{StaticResource TraceToggleButton}" IsChecked="{Binding ShowFilters}"
                              ToolTip="Show Filter Controls">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource filter_toolbarDrawingImage}"
                               Margin="0 0 4 0"/>
                        <TextBlock>Filters</TextBlock>
                    </StackPanel>
                </ToggleButton>
            </DockPanel>
        </controls:ClipBorder>


        <TextBlock Name="TraceStatusText" 
                   Grid.Row="1"
                   Visibility="{Binding TraceStatusText, Converter={StaticResource StringToVisibilityConverter}}" 
                   Background="{DynamicResource WarningBarBackgroundBrush}" 
                   Foreground="{StaticResource MutedTextBrush}" Padding="5,1,0,1"/>
        <!--                     -->
        <controls:ClipBorder Grid.Row="2">
        <!--<controls:DataGridNoContextMenu x:Name="QueryEvents" -->
            <controls:DataGridCustomCopy x:Name="QueryEvents" 
                    Foreground="{DynamicResource Theme.Brush.Default.Fore}"
                                        
                    filter:DataGridExtensions.UseBackgroundWorkerForFiltering="True"
                    filter:DataGridExtensions.IsClearButtonVisible="False"
                    filter:DataGridExtensions.IsFilterVisible="{Binding ShowFilters}" 
                    ColumnHeaderStyle="{StaticResource {ComponentResourceKey 
		                               TypeInTargetAssembly={x:Type filter:DataGridHeaderFilterControl}, 
		                               ResourceId=DataGridHeaderFilterControlStyle}}"
                    VirtualizingPanel.IsVirtualizing="True"
                    SelectedItem="{Binding SelectedQuery}" 
                    cal:Message.Attach="[Event MouseDoubleClick] = [Action QueryDoubleClick()]"
                    HorizontalAlignment="Stretch" 
                    Background="{DynamicResource Theme.Brush.Content.Back}"  
                    RowBackground="{DynamicResource Theme.Brush.Content.Back}"
                    AlternationCount="2"
                    AlternatingRowBackground="{DynamicResource Theme.Brush.Table.Alternate}"
                    AutoGenerateColumns="False"
                    behaviours:GridViewColumnResize.Enabled="True" 
                    VerticalAlignment="Stretch" 
                    CanUserAddRows="False"
                    Width="Auto"
                    SelectionMode="Extended"
                    SelectionUnit="FullRow"
                    HeadersVisibility="Column"
                    ClipboardCopyMode="ExcludeHeader"
                    ScrollViewer.CanContentScroll="True"
                    FrozenColumnCount="1"
                    GridLinesVisibility="None" 
                    BorderThickness="1,0,0,0" 
                    BorderBrush="{x:Null}"
                    IsReadOnly="True"
                    Padding="2"                        
                    >
                

                <DataGrid.Resources>

                    <Style TargetType="DataGrid" BasedOn="{StaticResource DefaultDataGridStyle}">
                        <Setter Property="Background" Value="{DynamicResource Theme.Brush.Content.Back}"/>
                    </Style>

                    <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                                    <controls:ClipBorder
                                            CornerRadius="4"
                                            Background="{DynamicResource Theme.Brush.MenuBar.Back}"
                                            BorderThickness="1"
                                            BorderBrush="{DynamicResource Theme.Brush.Control.Border}"
                                            >
                                        <Grid>
                                            <DataGridColumnHeader x:Name="PART_FilterColumnHeader" IsHitTestVisible="False"/>
                                            <ItemsPresenter />
                                        </Grid>
                                    </controls:ClipBorder>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DefaultDataGridColumnHeaderStyle}">
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="MinHeight" Value="20"/>
                        <Setter Property="TextBlock.Foreground" Value="Red"/>
                    </Style>

                    <Style x:Key="AlignRight" TargetType="{x:Type TextBlock}">
                        <Setter Property="HorizontalAlignment" Value="Right" />
                        <Setter Property="Margin" Value="5,2"/>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource QueryTypeStyle}">
                        <EventSetter Event="Control.RequestBringIntoView" Handler="DataGrid_RequestBringIntoView"  />
                    </Style>
                </DataGrid.RowStyle>
                
                <DataGrid.Columns>
                
                    <DataGridTemplateColumn CellStyle="{StaticResource ImageCell}" Width="15"
                                        filter:DataGridColumnExtensions.DoNotGenerateFilterControl="True">

                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Image ap:ImageBindingHelper.SourceResourceKey="{Binding AggregationStatusImage}" Width="10" />
                                    <Rectangle Fill="Transparent" >
                                        <Rectangle.ToolTip>
                                            <ToolTip 
                                                DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                                                Style="{StaticResource AggregateRewriteTooltipStyle}"/>
                                        </Rectangle.ToolTip>
                                    </Rectangle>

                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn 
                    Header="StartTime" 
                    
                    IsReadOnly="True" 
                    Width="75" 
                    Binding="{Binding StartTime, StringFormat='hh:mm:ss'}"  
                    filter:DataGridColumnExtensions.DoNotGenerateFilterControl="True" />

                    <!--<DataGridTextColumn Header="Type" IsReadOnly="True" Width="40" 
                                        Binding="{Binding QueryType}" />-->

                    <DataGridComboBoxColumn Header="Type" Width="50" 
                                        filter:DataGridColumnExtensions.CustomBindingPath="QueryType"
                                        ItemsSource="{StaticResource QueryTypes}"
                                        SelectedItemBinding="{Binding QueryType}"
                                        />


                    <DataGridTextColumn  Width="90" 
                                    Header="Duration"
                                    HeaderStyle="{StaticResource RightHeader}"
                                    IsReadOnly="True"
                                    Binding="{Binding Duration, StringFormat='#,0ms'}"                                    
                                    filter:DataGridColumnExtensions.CustomBindingPath="Duration">
                        <!--<DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" >
                                <Setter Property="TextBlock.HorizontalAlignment" Value="Right"/>
                                <Setter Property="HorizontalAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>-->
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="User" IsReadOnly="True" Width="85" MinWidth="70"
                                        filter:DataGridColumnExtensions.CustomBindingPath="Username"
                                        filter:DataGridColumnExtensions.IsContainsTextSearch="True">
                    <!--filter:DataGridColumnExtensions.BindingPath="Username">-->
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border Margin="0" Padding="0" 
                                cal:Message.Attach="[Event MouseDoubleClick] = [Action QueryDoubleClick($datacontext)]">
                                <TextBlock x:Name="Username"   
                                        Text="{Binding Path=Username,Mode=OneWay}"  
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"   
                                        TextTrimming="CharacterEllipsis"
                                           Margin="5,2"
                                        ToolTip="{Binding Username}">
                                </TextBlock>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Database" IsReadOnly="True" Width="90" MinWidth="70"
                                        filter:DataGridColumnExtensions.CustomBindingPath="DatabaseName"
                                        filter:DataGridColumnExtensions.IsContainsTextSearch="True">
                    <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="0" MaxHeight="70">
                            <Border Margin="0" Padding="0" 
                                cal:Message.Attach="[Event MouseDoubleClick] = [Action QueryDoubleClick($datacontext)]">
                                    <TextBlock x:Name="Query"
                        Text="{Binding Path=DatabaseName,Mode=OneWay}"  
                        VerticalAlignment="Center" 
                        HorizontalAlignment="Left"   
                        TextTrimming="CharacterEllipsis"
                                               Margin="5,2"
                        ToolTip="{Binding DatabaseName}">
                                    </TextBlock>
                                </Border>
                        </ScrollViewer>
                    </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Query" Width="*" CellTemplate="{StaticResource QueryTextCell}" 
                                            filter:DataGridColumnExtensions.CustomBindingPath="Query"
                                            filter:DataGridColumnExtensions.IsContainsTextSearch="True"
                                            CellStyle="{StaticResource QueryTextStyle}"
                                            />

                <!--<DataGridTextColumn Header="Query" behaviours:GridViewColumnResize.Width="Auto"
                                    IsReadOnly="True" Binding="{Binding Query, Converter={StaticResource QuerySingleLine}}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HighlightQuery}" Value="True">
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
-->
            </DataGrid.Columns>
        </controls:DataGridCustomCopy>
        </controls:ClipBorder>
        
        <FrameworkElement x:Name="bindingProxy" Visibility="Collapsed"/>
        <!-- Busy overlay -->
        <Border 
                Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}" 
                Grid.RowSpan="3" 
            Grid.ColumnSpan="5"
            Style="{StaticResource BusyPanel}" d:IsHidden="True">

            <Grid>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <ProgressBar 
                                x:Name="spinner"
                                Style="{StaticResource MaterialDesignCircularProgressBar}" 
                                Grid.Column="0"
                                Width="24"
                                Height="24"
                                Margin="0 0 10 0"
                                Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    <Label x:Name="BusyMessage" Style="{StaticResource SpinnerLabel}"/>
                    
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</controls:ZoomableUserControl>
