<ctrl:ZoomableUserControl x:Class="DaxStudio.UI.Views.MetadataPaneView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:conv="clr-namespace:DaxStudio.UI.Converters"
             xmlns:beh="clr-namespace:DaxStudio.UI.Behaviours"
             xmlns:trig="clr-namespace:DaxStudio.UI.Triggers"
             xmlns:model="clr-namespace:DaxStudio.UI.Model"
             xmlns:ctrl="clr-namespace:DaxStudio.UI.Controls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ap="clr-namespace:DaxStudio.UI.AttachedProperties"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" >
    <ctrl:ZoomableUserControl.Resources>

        <ResourceDictionary>
            <SolidColorBrush x:Key="DataTypeBrush" Color="DimGray" />
            <SolidColorBrush x:Key="RedBrush" Color="Red" />

            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <conv:BoolToNotVisibleConverter x:Key="BoolToNotVisibleConverter"/>
            <conv:BoolToCollapsedConverter x:Key="BoolToCollapsedConverter"/>
            <conv:BoolToThicknessConverter x:Key="PaddingConverter"/>
            <conv:OffsetConverter x:Key="OffsetConverter" />
            <conv:DataBindingDebugConverter x:Key="DebugConverter" />
            <conv:MultiplyWithMinConverter x:Key="multiplyWithMinConverter"/>
            <conv:StringFormatConverter x:Key="StringFormatConverter"/>
            <conv:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
            
            <BitmapImage x:Key="Clear"    UriSource="pack://application:,,,/DaxStudio.UI;component/Images/Metadata/clear.png" />
            <BitmapImage x:Key="Search"    UriSource="pack://application:,,,/DaxStudio.UI;component/Images/FindReplace/Search.png" />
            <BitmapImage x:Key="SearchActive"    UriSource="pack://application:,,,/DaxStudio.UI;component/Images/FindReplace/SearchActive.png" />
            <BitmapImage x:Key="ModelIcon" UriSource="pack://application:,,,/DaxStudio.UI;component/images/Metadata/icon-model@16px.png" />

            <Style x:Key="DatabaseComboStyle" TargetType="ComboBox">
                <Setter Property="ToolTipService.ShowDuration" Value="60000"/>
            </Style>
            
            <Style x:Key="ToolTipLabel" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{StaticResource DataTypeBrush}" />
                <Setter Property="Margin" Value="0,0,5,0" />
            </Style>

            <Style x:Key="SampleDataListItem" TargetType="{x:Type TextBlock}">
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding DataContext.DataTypeName,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeViewItem }}" Value="String">
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Button}" x:Key="ImageButtonStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <ContentPresenter/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ToolTip}">
                <Setter Property="Foreground" Value="#FF575757" />
                <Setter Property="Background" Value="#FFFFFFFF" />
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="{Binding DataContext.Scale,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ctrl:ZoomableUserControl}}}" 
                                        ScaleY="{Binding DataContext.Scale,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ctrl:ZoomableUserControl}}}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="5,1,6,2" />
                <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolTip}" xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
                            <themes:SystemDropShadowChrome Name="Shdw" themes:SystemDropShadowChrome.Color="Transparent" themes:SystemDropShadowChrome.CornerRadius="0" SnapsToDevicePixels="True">
                                <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                    <!--<Border.RenderTransform>
                                        <ScaleTransform ScaleX="{Binding Scale}" ScaleY="{Binding Scale}"/>
                                    </Border.RenderTransform>-->
                                    <ContentPresenter TextOptions.TextFormattingMode="Display" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </themes:SystemDropShadowChrome>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="True">
                                    <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                                    <Setter TargetName="Shdw" Property="themes:SystemDropShadowChrome.Color" Value="#71000000" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <ElasticEase x:Key="easeInEase" EasingMode="EaseOut" Oscillations="2" Springiness="7"/>
            <SineEase x:Key="easeOutEase" EasingMode="EaseIn"/>
            <!-- To="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}} , Path=ActualWidth,Converter={StaticResource OffsetConverter}, ConverterParameter='5' }"  -->
            <Storyboard x:Key="SearchIn">
                <DoubleAnimation Storyboard.TargetProperty="(Border.Tag)" 
                                 Storyboard.TargetName="srchBox" 
                                 EasingFunction="{StaticResource ResourceKey=easeInEase}"
                                 To="1"
                                 Duration="0:0:1.0"/>

                <DoubleAnimation Storyboard.TargetProperty="(Border.Height)" Storyboard.TargetName="srchBox" EasingFunction="{StaticResource ResourceKey=easeInEase}" To="28" Duration="0:0:1.0"/>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Tables">
                    <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="0,32,0,0"/>
                </ThicknessAnimationUsingKeyFrames>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="SearchIcon">
                    <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="2,2,2,2"/>
                </ThicknessAnimationUsingKeyFrames>
                <DoubleAnimation Storyboard.TargetName="CurrentCriteria"
								Storyboard.TargetProperty="(UIElement.Opacity)"
								To="1" Duration="0:0:0.2" />
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchSpacer" Storyboard.TargetProperty="Visibility" BeginTime="0:0:0.15" Duration="0">
                    <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
                </ObjectAnimationUsingKeyFrames>

            </Storyboard>

            <Storyboard x:Key="SearchOut">
                <DoubleAnimation Storyboard.TargetProperty="(Border.Tag)" Storyboard.TargetName="srchBox" EasingFunction="{StaticResource ResourceKey=easeOutEase}" To="0" Duration="0:0:0.2"/>
                <DoubleAnimation Storyboard.TargetProperty="(Border.Height)" Storyboard.TargetName="srchBox" EasingFunction="{StaticResource ResourceKey=easeOutEase}" To="16" Duration="0:0:0.2"/>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Tables">
                    <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="0,2,0,0"/>
                </ThicknessAnimationUsingKeyFrames>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="SearchIcon">
                    <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="0,0,0,0"/>
                </ThicknessAnimationUsingKeyFrames>
                <DoubleAnimation Storyboard.TargetName="CurrentCriteria"
												Storyboard.TargetProperty="(UIElement.Opacity)"
												To="0" Duration="0:0:0.2" />
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchSpacer" Storyboard.TargetProperty="Visibility" BeginTime="0:0:0.2" Duration="0">
                    <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>

            <Style x:Key="searchBox" TargetType="{x:Type Border}">
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="16"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Margin" Value="2 2 0 2"/>
                <Setter Property="Padding" Value="0 2 0 2"/>
            </Style>


            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/SearchBox.xaml"/>-->
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/MetaDataPaneViewStyle.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/IconResourceDictionary.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/LabelSpinnerStyle.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/BusyPanel.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/MetadataIcons.xaml" />
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>

    </ctrl:ZoomableUserControl.Resources>

    <Grid Margin="2 2 2 0" >

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <Border Background="Cornsilk" Visibility="{Binding ShowMetadataRefreshPrompt, Converter={StaticResource BoolToCollapsedConverter}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Updated Metadata" Margin="5"/>
                <Button Grid.Column="1" Margin="2" x:Name="RefreshMetadata">
                    <StackPanel Orientation="Horizontal">
                    <fa:FontAwesome Icon="Refresh" VerticalAlignment="Center" Margin="2" Foreground="Green"/>
                    <TextBlock>Refresh</TextBlock>
                    </StackPanel>
                </Button>

                <Button Grid.Column="2" Style="{StaticResource ImageButtonStyle}" Margin="2"
                        cal:Message.Attach="[Event Click] = [Action DismissRefreshMetadataPrompt()]">
                <fa:ImageAwesome Icon="Close" Width="10" Margin="2" VerticalAlignment="Center" 
                                ToolTip="Dismiss Update"
                                />
                </Button>
            </Grid>
            
            
        </Border>
        <!-- database Dropdown MinWidth="160"  -->
        <ComboBox Grid.Row="1" x:Name="Database" 
            SelectedItem="{Binding SelectedDatabase, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            ItemsSource="{Binding DatabasesView, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"   
            
            Template="{DynamicResource MetroComboBoxControlTemplate}"
            IsEditable="False"
            IsSynchronizedWithCurrentItem="True" 
            IsEnabled="{Binding CanSelectDatabase}" 
            Margin="0,0,0,2" 
            Style="{StaticResource DatabaseComboStyle}"      >
            <ComboBox.ToolTip>
                <Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
                            <Image Source="{StaticResource DatabaseIcon}" Width="16" Height="16"></Image>
                            <TextBlock Text="{Binding Path=SelectedDatabaseObject.Name, Mode=OneWay}" Margin="4,0" FontWeight="Bold" ></TextBlock>
                        </StackPanel>
                        <TextBlock Text="(Right-Click to copy Database Name/ID)" Grid.Row="1" Grid.ColumnSpan="2" FontStyle="Italic"/>
                        <TextBlock Text="Compatibility: " Grid.Row="2"/>
                        <TextBlock Text="{Binding SelectedDatabaseObject.CompatibilityLevel, Mode=OneWay}" Grid.Row="2" Grid.Column="1"  FontWeight="SemiBold"/>
                        <TextBlock Text="Culture: " Grid.Row="3"/>
                        <TextBlock Text="{Binding SelectedDatabaseObject.Culture, Mode=OneWay}" FontWeight="SemiBold" Grid.Column="1" Grid.Row="3"/>
                        <TextBlock Text="Last Updated: " Grid.Row="4"/>
                        <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="1">
                            <TextBlock Text="{Binding SelectedDatabaseLastUpdateLocalTime, Mode=OneWay, StringFormat='g'}" />
                            
                            <TextBlock Text="{Binding SelectedDatabaseLastUpdateLocalTime, Mode=OneWay, StringFormat=' (K)'}"  />
                        </StackPanel>
                        <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding SelectedDatabaseDurationSinceUpdate, Mode=OneWay}" FontStyle="Italic"/>
                        <TextBlock Text="Is Admin: " Grid.Row="6"/>
                        <TextBlock Text="{Binding SelectedDatabaseObject.IsAdmin, Mode=OneWay}" Grid.Row="6" Grid.Column="1"/>
                        <TextBlock Text="Roles: " Grid.Row="7"/>
                        <TextBlock Text="{Binding SelectedDatabaseObject.Roles, Mode=OneWay}" Grid.Row="7" Grid.Column="1"/>
                    </Grid>
                </Grid>
            </ComboBox.ToolTip>
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource DatabaseIcon}" Width="16" Height="16"></Image>
                        <TextBlock Text="{Binding Path=Caption}" Margin="4,0" ></TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <ComboBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Copy Database Name"  cal:Message.Attach="[Event Click] = [Action CopyDatabaseName()]">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource CopyIcon}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Copy Database Id"  cal:Message.Attach="[Event Click] = [Action CopyDatabaseId()]">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource CopyIcon}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </ComboBox.ContextMenu>
        </ComboBox>
        <!-- SelectedValuePath="Name" -->
        <!-- Model Dropdown -->
        <ComboBox Grid.Row="2" 
                  IsEditable="False"
                  IsEnabled="{Binding CanSelectModel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemsSource="{Binding ModelList, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                  SelectedItem="{Binding SelectedModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"      
                  IsSynchronizedWithCurrentItem="True" 
                  Template="{DynamicResource MetroComboBoxControlTemplate}"
                  >
            <!-- Style="{DynamicResource MetroComboBox}" -->
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource ModelIcon}" Margin="2,1,5,1"/>
                        <TextBlock Text="{Binding Caption}"></TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <ComboBox.Resources>
                <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="0.4" Stretch="None" AlignmentX="Left">
                    <VisualBrush.Visual>
                        <TextBlock FontStyle="Italic" Text="Type or select from list"/>
                    </VisualBrush.Visual>
                </VisualBrush>
            </ComboBox.Resources>
            <ComboBox.Style>
                <Style TargetType="ComboBox">
                    <Style.Triggers>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
            <ComboBox.ToolTip>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
                        <Image Source="{StaticResource ModelIcon}" Width="16" Height="16"></Image>
                        <TextBlock Text="{Binding Path=SelectedModel.Name, Mode=OneWay}" Margin="4,0" FontWeight="Bold" ></TextBlock>
                    </StackPanel>

                    <TextBlock Text="Tables: " Grid.Row="1"/>
                    <TextBlock Text="{Binding SelectedModel.Tables.Count, Mode=OneWay}" Grid.Row="1" Grid.Column="1"  FontWeight="SemiBold"/>

                </Grid>
            </ComboBox.ToolTip>
        </ComboBox>
        
        <ContentControl Grid.Row="3">
            <Control.Template>
                <ControlTemplate>
                    <Grid >
                        <!-- Tables -->
                        <!--  cal:Message.Attach="[Event MouseDoubleClick] = [Action MouseDoubleClick($this.SelectedItem, $eventArgs)]"
                        dd:DragDrop.DragHandler="{Binding }"  
                        -->
                        <ctrl:TreeViewEx x:Name="Tables" Height="Auto"  ItemsSource="{Binding Tables}"
                                        Style="{StaticResource ResourceKey=MetadataPaneViewStyle}"
                                        FocusManager.IsFocusScope="True"
                                        dd:DragDrop.IsDragSource="True"
                                        dd:DragDrop.IsDropTarget="False" 
                                        dd:DragDrop.DragHandler="{Binding}"
                                        dd:DragDrop.UseDefaultDragAdorner="True"
                                        cal:Message.Attach="[Event PreviewMouseDoubleClick] = [Action MouseDoubleClick($this.SelectedItem, $eventArgs)]; [Event KeyUp] = [Action MetadataKeyUp($this.SelectedItem, $eventArgs)]"
                                        VirtualizingPanel.IsVirtualizing="True"
                                        VirtualizingPanel.VirtualizationMode="Recycling"
                                        Margin="0,2,0,-2">

                            <i:Interaction.Behaviors>
                                <beh:TreeViewClipboardBehavior />
                                <beh:TreeViewMultipleSelectionBehaviour SelectedItems="{Binding SelectedItems}" />
                            </i:Interaction.Behaviors>

                            <!--<ctrl:TreeViewEx.ItemContainerStyle>
                                <Style TargetType="TreeViewItem">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                </Style>
                            </ctrl:TreeViewEx.ItemContainerStyle>-->
                            <ctrl:TreeViewEx.Resources>
                                <HierarchicalDataTemplate DataType="{x:Type model:TreeViewTable}" ItemsSource="{Binding Children}">
                                    <!-- Table Template -->
                                    <StackPanel Orientation="Horizontal" Tag="{Binding DataContext, ElementName=Tables}">
                                        <Grid>
                                            <Image Source="{Binding MetadataImage,Converter={StaticResource MetadataIcons}}" Margin="2,1,5,1"/>
                                            <fa:ImageAwesome Icon="ClockOutline" Width="10" Margin="7,12,0,0" Foreground="Blue" Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter},Path=IsDateTable}"/>
                                        </Grid>
                                        <TextBlock  Text="{Binding Caption}"
                                                    cal:Message.Attach="[Event ToolTipOpening] = [Action TableTooltipOpening($dataContext)]"
                                                    > <TextBlock Foreground="BlueViolet" />
                                                    <TextBlock.ToolTip>
                                                        <StackPanel Orientation="Vertical" MaxWidth="450">
                                                            <StackPanel Orientation="Horizontal">
                                                                <Image Source="{Binding MetadataImage,Converter={StaticResource MetadataIcons}}" Margin="2,1,5,1"/>
                                                                <TextBlock Text="{Binding Caption}"></TextBlock>
                                                            </StackPanel>
                                                            <TextBlock Text="{Binding DaxName}" FontStyle="Italic" />
                                                            <TextBlock Text="{Binding Description}"  Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter},Path=ShowDescription}"/>
                                                            <StackPanel Orientation="Horizontal">
                                                                <fa:ImageAwesome Icon="ClockOutline" Width="14" Margin="0,2,3,0" Foreground="Blue" Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter},Path=IsDateTable}"/>
                                                                <TextBlock Text="Marked As Date Table" FontStyle="Italic" Foreground="{StaticResource DataTypeBrush}" Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter},Path=IsDateTable}"/>
                                                                </StackPanel>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition />
                                                                    <ColumnDefinition />
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition />
                                                                    <RowDefinition />
                                                                </Grid.RowDefinitions>
                                                                <TextBlock Style="{StaticResource ToolTipLabel}">Columns:</TextBlock>
                                                                <TextBlock Grid.Row="0"
                                                                           Grid.Column="1" 
                                                                           Text="{Binding Path=ColumnCount, StringFormat={}{0:N0}, Mode=OneWay}"/>
                                                                <TextBlock Grid.Column="0"
                                                                           Grid.Row="1" 
                                                                           Style="{StaticResource ToolTipLabel}"
                                                                           Visibility="{Binding ShowRowCount, Converter={StaticResource BoolToCollapsedConverter} }"
                                                                           >Rows:</TextBlock>
                                                                <TextBlock Grid.Column="1" 
                                                                           Grid.Row="1" 
                                                                           Text="{Binding Path=RowCount, StringFormat={}{0:N0}, Mode=OneWay}" 
                                                                           Visibility="{Binding ShowRowCount, Converter={StaticResource BoolToCollapsedConverter} }"/>
                                                            </Grid>
                                                        </StackPanel>
                                                    </TextBlock.ToolTip>    
                                                </TextBlock>
                                        <StackPanel.ContextMenu>
                                            <ContextMenu 
                                                Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter}, Path=IsTable }"
                                                cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                                <MenuItem Header="Define Filter Dump Measure"
                                                    cal:Message.Attach="[Event Click] = [Action DefineFilterDumpMeasureOneTable($dataContext)]">
                                                </MenuItem>
                                                <MenuItem Header="Define Filter Dump Measure (All tables)"
                                                    cal:Message.Attach="[Event Click] = [Action DefineFilterDumpMeasureAllTables($dataContext)]">
                                                </MenuItem>
                                                <MenuItem Header="Define All Measures"
                                                        cal:Message.Attach="[Event Click] = [Action DefineAllMeasuresOneTable($dataContext)]">
                                                </MenuItem>
                                                <MenuItem Header="Define All Measures (All tables)"
                                                    cal:Message.Attach="[Event Click] = [Action DefineAllMeasuresAllTables($dataContext)]">
                                                </MenuItem>
                                                <MenuItem Header="Show Objects That Reference Table"
                                                        cal:Message.Attach="[Event Click] = [Action ShowObjectsThatReferenceTable($dataContext)]">
                                                </MenuItem>
                                                <Separator/>
                                                <MenuItem Header="{Binding Path=MetadataPane.ShowHiddenObjectsLabel}"
                                                          cal:Message.Attach="[Event Click] = [Action ToggleHiddenObjects()]" />
                                                
                                            </ContextMenu>
                                        </StackPanel.ContextMenu>
                                    </StackPanel>
                                </HierarchicalDataTemplate>

                                <!-- Column Template -->
                                <HierarchicalDataTemplate DataType="{x:Type model:TreeViewColumn}" ItemsSource="{Binding Children}">
                                    <StackPanel Orientation="Horizontal" Tag="{Binding DataContext, ElementName=Tables}">
                                        <Grid>
                                            <Image Source="{Binding MetadataImage,Converter={StaticResource MetadataIcons}}" Margin="2,1,5,1" />
                                            <!--<fa:ImageAwesome Icon="Key" Width="10" Margin="3,6,0,0" Foreground="Blue" Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter},Path=IsKey}"/>-->
                                        </Grid>
                                        <TextBlock x:Name="Caption" 
                                                   Text="{Binding Caption}" 
                                                   cal:Message.Attach="[Event ToolTipOpening] = [Action ColumnTooltipOpening($dataContext)]"
                                                   >
                                            <TextBlock.ToolTip>
                                                <ToolTip Background="{DynamicResource BaseBrush}">
                                                <Grid>
                                                    <StackPanel Orientation="Vertical" Margin="5">
                                                        <StackPanel Orientation="Horizontal" >
                                                            <Image Source="{Binding MetadataImage,Converter={StaticResource MetadataIcons}}" Margin="2,1,5,1"/>
                                                            <TextBlock FontWeight="Bold" Text="{Binding Caption}"/>
                                                                <StackPanel Orientation="Horizontal" Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter},Path=ShowDataType}">
                                                                    <TextBlock Foreground="{StaticResource DataTypeBrush}" Text=" ["/>
                                                                    <TextBlock Foreground="{StaticResource DataTypeBrush}" Text="{Binding DataTypeName}"/>
                                                                    <TextBlock Foreground="{StaticResource DataTypeBrush}" Text="]"/>
                                                                </StackPanel>
                                                            </StackPanel>
                                                            <TextBlock Text="{Binding DaxName}" Visibility="{Binding Converter={StaticResource StringToVisibilityConverter},Path=DaxName}"/>
                                                            <TextBlock FontStyle="Italic" Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter}, Path=ShowDescription}" Text="{Binding Description}"></TextBlock>

                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                                <RowDefinition/>
                                                                <RowDefinition/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <TextBlock Style="{StaticResource ToolTipLabel}"
                                                                       Visibility="{Binding ShowFormatString, Converter={StaticResource BoolToVisibilityConverter}}"> Format:</TextBlock>
                                                            <TextBlock Style="{StaticResource ToolTipLabel}" Grid.Row="1"
                                                                       Visibility="{Binding ShowDistinctValues, Converter={StaticResource BoolToVisibilityConverter}}">Distinct Values:</TextBlock>
                                                            <TextBlock Style="{StaticResource ToolTipLabel}" Grid.Row="2"
                                                                       Visibility="{Binding ShowMinMax, Converter={StaticResource BoolToVisibilityConverter}}">Min:</TextBlock>
                                                            <TextBlock Style="{StaticResource ToolTipLabel}" Grid.Row="3"
                                                                       Visibility="{Binding ShowMinMax, Converter={StaticResource BoolToVisibilityConverter}}">Max:</TextBlock>

                                                            <TextBlock Grid.Column="1" Text="{Binding FormatString}"
                                                                       Visibility="{Binding ShowFormatString, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                                            <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding Path=DistinctValues, StringFormat={}{0:N0}}"
                                                                       Visibility="{Binding ShowDistinctValues, Converter={StaticResource BoolToVisibilityConverter}}"></TextBlock>
                                                            <TextBlock Grid.Column="1" Grid.Row="2" 
                                                                       Visibility="{Binding ShowMinMax, Converter={StaticResource BoolToVisibilityConverter}}">
                                                                <TextBlock.Text>
                                                                    <MultiBinding Converter="{StaticResource StringFormatConverter}">
                                                                        <Binding Path="MinValue" />
                                                                        <Binding Path="FormatString" />
                                                                        <Binding Path="DataTypeName" />
                                                                    </MultiBinding>
                                                                </TextBlock.Text>
                                                            </TextBlock>
                                                            <TextBlock Grid.Column="1" Grid.Row="3"
                                                                       Visibility="{Binding ShowMinMax, Converter={StaticResource BoolToVisibilityConverter}}">
                                                                <TextBlock.Text>
                                                                    <MultiBinding Converter="{StaticResource StringFormatConverter}">
                                                                        <Binding Path="MaxValue" />
                                                                        <Binding Path="FormatString" />
                                                                        <Binding Path="DataTypeName" />
                                                                    </MultiBinding>
                                                                </TextBlock.Text>
                                                            </TextBlock>
                                                        </Grid>

                                                        <TextBlock Foreground="{StaticResource DataTypeBrush}"
                                                              Visibility="{Binding ShowSampleData, Converter={StaticResource BoolToVisibilityConverter}}">Sample Data</TextBlock>
                                                        <Line Stroke="Black" HorizontalAlignment="Stretch"
                                                              X2="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"
                                                              StrokeDashArray="2 2" StrokeThickness="1" Margin="5"
                                                              Visibility="{Binding ShowSampleData, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                                        <Grid Visibility="{Binding ShowSampleData, Converter={StaticResource BoolToVisibilityConverter}}">
                                                        <ItemsControl ItemsSource="{Binding SampleData}" 
                                                              HorizontalAlignment="Left"
                                                              Visibility="{Binding UpdatingSampleData, Converter={StaticResource BoolToNotVisibleConverter}}">
                                                            <ItemsControl.ItemTemplate>
                                                                <DataTemplate>
                                                                        <TextBlock Style="{StaticResource SampleDataListItem}" Text="{Binding Path=. }" />
                                                                </DataTemplate>
                                                            </ItemsControl.ItemTemplate>
                                                        </ItemsControl>
                                                        <TextBlock Visibility="{Binding UpdatingSampleData, Converter={StaticResource BoolToVisibilityConverter}}"
                                                                   Text="Updating Sample Data..."/>
                                                        </Grid>
                                                    </StackPanel>
                                                </Grid>
                                                </ToolTip>
                                            </TextBlock.ToolTip>                                
                                            </TextBlock>

                                        <StackPanel.ContextMenu>
                                            <ContextMenu 
                                                cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                                                Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter}, Path=IsColumnOrMeasure}">
                                                <MenuItem Header="Define Measure"
                                                        cal:Message.Attach="[Event Click] = [Action DefineMeasure($dataContext)]"
                                                    Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter}, Path=IsMeasure}">
                                                </MenuItem>
                                                <MenuItem Header="Define Dependent Measures"
                                                        cal:Message.Attach="[Event Click] = [Action DefineDependentMeasures($dataContext)]"
                                                          Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter}, Path=IsMeasure}">
                                                </MenuItem>
                                                <MenuItem Header="Define and Expand Measure"
                                                        cal:Message.Attach="[Event Click] = [Action DefineExpandMeasure($dataContext)]"
                                                          Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter}, Path=IsMeasure}">
                                                </MenuItem>
                                                <MenuItem Header="Show Objects That Reference Measure"
                                                        cal:Message.Attach="[Event Click] = [Action ShowObjectsThatReferenceColumnOrMeasure($dataContext)]"
                                                          Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter}, Path=IsMeasure}">
                                                </MenuItem>
                                                <MenuItem Header="Show Objects That Reference Column"
                                                        cal:Message.Attach="[Event Click] = [Action ShowObjectsThatReferenceColumnOrMeasure($dataContext)]"
                                                          Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter}, Path=IsColumn}">
                                                </MenuItem>
                                            </ContextMenu>
                                        </StackPanel.ContextMenu>

                                        
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </ctrl:TreeViewEx.Resources>
                        </ctrl:TreeViewEx>

                        <!-- Search Box -->
                        <StackPanel Orientation="Horizontal"  HorizontalAlignment="Right">
                            <Border Style="{StaticResource searchBox}" 
                                    x:Name="srchBox"
                                    ClipToBounds="True"
                                    ap:MouseObserver.Observe="True"
                                    ap:MouseObserver.ObservedMouseOver="{Binding IsMouseOverSearch, Mode=OneWayToSource}"
                                    ap:KeyboardFocusWithinObserver.Observe="True"
                                    ap:KeyboardFocusWithinObserver.ObservedKeyboardFocusWithin="{Binding IsKeyboardFocusWithinSearch, Mode=OneWayToSource}">
                                <Border.Tag>
                                    <sys:Double>0.0</sys:Double>
                                </Border.Tag>

                                <Border.Width>
                                    <MultiBinding Converter="{StaticResource multiplyWithMinConverter}" ConverterParameter="16">
                                        <Binding Path="ActualWidth" ElementName="Tables"/>
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Border.Width>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Image x:Name="SearchIcon" Grid.Column="0">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding HasCriteria}" Value="false">
                                                        <Setter Property="Source" Value="{StaticResource Search}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding HasCriteria}" Value="true">
                                                        <Setter Property="Source" Value="{StaticResource SearchActive}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                        <Image.ContextMenu>
                                            <!-- Header="{Binding Path=MetadataPane.PinSearchOpenLabel}" -->
                                            <ContextMenu>
                                                <MenuItem Header="Pin/UnPin Search" 
                                                          cal:Message.Attach="[Event Click] = [Action TogglePinSearchOpen()]" />
                                            </ContextMenu>
                                        </Image.ContextMenu>
                                    </Image>
                                    <TextBox Grid.Column="1"
                                                    x:Name="CurrentCriteria"
                                                    Text="{Binding Path=CurrentCriteria, UpdateSourceTrigger=PropertyChanged, Delay=300}"
                                                    Opacity="0"
                                                    Padding="2 2 24 0"
                                                    >
                                        <i:Interaction.Triggers>
                                            <trig:InputBindingTrigger>
                                                <trig:InputBindingTrigger.InputBinding>
                                                    <KeyBinding Key="Escape"/>
                                                </trig:InputBindingTrigger.InputBinding>
                                                <cal:ActionMessage MethodName="ClearCriteria"/>
                                            </trig:InputBindingTrigger>
                                            <trig:InputBindingTrigger>
                                                <trig:InputBindingTrigger.InputBinding>
                                                    <KeyBinding Key="Down"/>
                                                </trig:InputBindingTrigger.InputBinding>
                                                <cal:ActionMessage MethodName="SetFocusToMetadata"/>
                                            </trig:InputBindingTrigger>
                                        </i:Interaction.Triggers>

                                    </TextBox>
                                    <Button Margin="5" Grid.Column="1" HorizontalAlignment="Right"
                                                Visibility="{Binding Path=HasCriteria, Converter={StaticResource BoolToVisibilityConverter}}"
                                                BorderThickness="0"
                                                Background="Transparent">
                                        <Image Source="{StaticResource Clear}" />
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <cal:ActionMessage MethodName="ClearCriteria" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                </Grid>
                            </Border>

                            <Border x:Name="SearchSpacer" 
                                            BorderThickness="0" 
                                            Height="1" 
                                            IsHitTestVisible="False"
                                            Background="Transparent"
                                            Width="{Binding ElementName=Tables, Path=ScrollBarWidth}">
                            </Border>
                        </StackPanel>

                        <!-- Busy overlay -->
                        <Border Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}" 
                            Style="{StaticResource BusyPanel}">
                            <Grid>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Label Style="{StaticResource LabelSpinnerStyle}" Height="30" VerticalContentAlignment="Center"  FontSize="18" FontWeight="Bold" Foreground="#D0000000" Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <TextBlock x:Name="BusyMessage"/>
                                    </Label>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ExpandSearch}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SearchIn}" />
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SearchOut}" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Control.Template>
        </ContentControl>
    </Grid>

</ctrl:ZoomableUserControl>
