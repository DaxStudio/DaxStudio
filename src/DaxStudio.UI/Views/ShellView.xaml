<fluent:RibbonWindow x:Class="DaxStudio.UI.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:fluent="clr-namespace:Fluent;assembly=Fluent"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:local="clr-namespace:DaxStudio.UI.Utils" 
        xmlns:conv="clr-namespace:DaxStudio.UI.Converters"
        xmlns:triggers="clr-namespace:DaxStudio.UI.Triggers"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"   
        xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=AvalonDock"
        mc:Ignorable="d" 
        d:DesignWidth="466" 
   
        Icon="pack://application:,,,/DaxStudio.UI;component/images/DaxStudio.ico"    
        ResizeMode="CanResizeWithGrip"
        BorderBrush="{DynamicResource DaxStudioBrush}"
        MinHeight="460"
        MinWidth="460"                    
        Height="720"
        Width="1120"

        Top="5">
<!--    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="{x:Static SystemParameters.CaptionHeight}"
                      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                      CornerRadius="8"
                      
                      UseAeroCaptionButtons="False">
        </WindowChrome>

    </WindowChrome.WindowChrome>-->
    <fluent:RibbonWindow.Resources>
        
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!-- Mahapps Metro resources -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />-->
                
                <ResourceDictionary x:Name="Icons" Source="pack://application:,,,/DaxStudio.UI;Component/Resources/IconResourceDictionary.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/DaxStudioResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <SolidColorBrush x:Key="GrayBrush5" Color="#FFf5f5f5" />
            <!--<SolidColorBrush x:Key="BusyBrush" Color="#30000000" />-->
            <SolidColorBrush x:Key="BusyBrush" Color="#00000000" />

            

            <!--<DataTemplate x:Key="DragAdorner">
            <Border Background="Silver"
                    BorderBrush="Gray"
                    BorderThickness="1"
                    CornerRadius="2"
                    Margin="1">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/icon.png"
                           Width="16"
                           Margin="0,0,2,0"
                           VerticalAlignment="Center" />
                    <TextBlock Text="{Binding}"
                               Margin="0,0,2,0"
                               VerticalAlignment="Center" />
                </StackPanel>
            </Border>
        </DataTemplate>-->

            <Style x:Key="BlurEffect" TargetType="Grid">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsOverlayVisible}" Value="True">
                        <Setter Property="BitmapEffect">
                            <Setter.Value>
                                <BlurBitmapEffect Radius="5"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="BitmapEffect">
                            <Setter.Value>

                                <BlurBitmapEffect Radius="5"/>

                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>    
        
    </fluent:RibbonWindow.Resources>
    <fluent:RibbonWindow.WindowCommands>
        <fluent:WindowCommands>
            <fluent:Button Size="Small"
                           Background="Goldenrod"
                           Visibility="{Binding IsUpdateAvailable, Converter={StaticResource BoolToVisibilityConverter}}"
                           cal:Message.Attach="[Event Click] = [Action UpdateFlagClick]">
                <fluent:Button.Icon>
                <fa:FontAwesome Icon="Flag" Margin="0 0"></fa:FontAwesome>
                </fluent:Button.Icon>
                <fluent:Button.ToolTip>
    <fluent:ScreenTip Title="Update Available" Text="{Binding UpdateMessage}"></fluent:ScreenTip>
</fluent:Button.ToolTip>
            </fluent:Button>
        </fluent:WindowCommands>
    </fluent:RibbonWindow.WindowCommands>
    <Grid>
        <Grid x:Name="LayoutRoot"
              Margin="0,0,0,-2" >
              <!--="{StaticResource BlurEffect}"-->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <ContentControl x:Name="Ribbon"
                        Grid.Row="0"/>
        <ContentControl x:Name="Tabs"      
                        Grid.Row="1"/>
        <ContentControl x:Name="StatusBar" 
                        Grid.Row="2"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"/>
<!--
            <Grid.BitmapEffect>
                <BlurBitmapEffect Radius="10"/>
            </Grid.BitmapEffect>
    -->        

        </Grid>
        <!-- Background="{StaticResource BusyBrush}" -->
        <Border HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch" 
                Grid.RowSpan="3"
                Visibility="{Binding Path=IsOverlayVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                 Opacity="0.7"
                >
            <!--
        <Border.BitmapEffect>
            <BlurBitmapEffect Radius="5"/>
        </Border.BitmapEffect>
        <Border.Background>
            <VisualBrush  Visual="{Binding ElementName=LayoutRoot}" Stretch="None" />
        </Border.Background>
       -->
    </Border>
    </Grid>
    <!-- TODO - show pulsing taskbar window while query is running -->
    <!--
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo Description="DAX Studio" 
                      ProgressState="Indeterminate"/>
    </Window.TaskbarItemInfo>
    -->
</fluent:RibbonWindow>