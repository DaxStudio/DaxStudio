<custom:ZoomableUserControl x:Class="DaxStudio.UI.Views.ServerTimesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:conv="clr-namespace:DaxStudio.UI.Converters"
             xmlns:behaviours="clr-namespace:DaxStudio.UI.Behaviours"
             xmlns:extenders="clr-namespace:DaxStudio.UI.AttachedProperties"    
             xmlns:vm="clr-namespace:DaxStudio.UI.ViewModels"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:custom="clr-namespace:DaxStudio.UI.Controls"
             xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
             xmlns:cm="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="800"
             BorderBrush="DimGray" BorderThickness="1"
             cal:View.ApplyConventions="False">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/IconResourceDictionary.xaml" />
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/DaxStudioResources.xaml" />
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/BusyPanel.xaml" />
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/LabelSpinnerStyle.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/ExpanderTemplates.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <conv:EventClassSubclassConverter x:Key="EventClassSubclass"></conv:EventClassSubclassConverter>
            <conv:QuerySingleLineConverter x:Key="QuerySingleLine"></conv:QuerySingleLineConverter>
            <conv:QueryMultiLineConverter x:Key="QueryMultiLine"></conv:QueryMultiLineConverter>
            <conv:XmSqlToDocumentConverter x:Key="XmSqlToDocument"></conv:XmSqlToDocumentConverter>
            <conv:MatchingResultColourConverter x:Key="MatchingResultColourConverter"></conv:MatchingResultColourConverter>
            <conv:MultiplyConverter x:Key="MultiConverter"></conv:MultiplyConverter>
            <conv:BoolToHiddenConverter x:Key="BoolToVisibilityConverter" />
            <conv:BoolToNotCollapsedConverter x:Key="BoolToNotCollapsedConverter" />
            <conv:BoolToCollapsedConverter x:Key="BoolToCollapsedConverter" />
            <conv:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
            <sys:Double x:Key="BarWidth">100.0</sys:Double>

            

            <!-- Data Templates -->
        
            <DataTemplate  DataType="{x:Type vm:TraceStorageEngineEvent}">
                 <custom:BindableRichTextBox Padding="5,5,5,5"
                 MinWidth="200"
                 MinHeight="100"
                 IsReadOnly="True"
                 BorderThickness="0"
                 DataContext="{Binding}"
                 Document="{Binding  Path=QueryRichText, Converter={StaticResource XmSqlToDocument}, Mode=OneWay}" >
                    
                        <custom:BindableRichTextBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="Copy">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource CopyIcon}"/>
                                </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Command="SelectAll"></MenuItem>
                            </ContextMenu>
                        </custom:BindableRichTextBox.ContextMenu>
                    </custom:BindableRichTextBox>
            </DataTemplate>
            
            <DataTemplate  DataType="{x:Type vm:RewriteTraceEngineEvent}">
                <StackPanel Margin="5">
                    <TextBlock Margin="0 0 0 5" FontWeight="DemiBold" Padding="3" Background="#ffececec">Aggregate Rewrite Attempt</TextBlock>
                
                    <TextBlock FontWeight="Medium"  Margin="0 0 5 0">Match Result: </TextBlock>
                    <StackPanel Orientation="Horizontal" Margin="20 0 0 5 " >
                        <TextBlock Margin="0 -1 3 0" 
                                   FontFamily="Wingdings" 
                                   FontSize="14pt" 
                                   Foreground="Green"
                                   Visibility="{Binding MatchFound, Converter={StaticResource BoolToCollapsedConverter}}">ü</TextBlock>
                        <TextBlock Margin="0 -1 3 0" 
                                   FontFamily="Wingdings" 
                                   FontSize="14pt" 
                                   Visibility="{Binding MatchFound, Converter={StaticResource BoolToNotCollapsedConverter}}"
                                   Foreground="Red">û</TextBlock>
                        <TextBlock  x:Name="MatchingResult" Text="{Binding MatchingResult}" Foreground="{Binding MatchingResult, Converter={StaticResource MatchingResultColourConverter}}"></TextBlock>
                    </StackPanel>
                    <TextBlock FontWeight="Medium">Original Table:</TextBlock>
                    <TextBlock Margin="20 0 0 5 " x:Name="Table" Text="{Binding Table}"></TextBlock>
                    <TextBlock FontWeight="Medium">Mapped To:</TextBlock>
                    <TextBlock Margin="20 0 0 5 " x:Name="Mapping" Text="{Binding Mapping}"></TextBlock>

                    <Expander x:Name="myExpander" Header="Details"
					    ExpandDirection="Down" IsExpanded="False" 
					    Margin="0,5,0,0" >
                        <!-- TODO The template below causes a fatal app crash when the DataTemplate is changed after the expander has been expanded 
                                  This appears to be some issue with the DoubleAnimation of the Tag in the storyboard  
                        -->
                        <!-- Template="{StaticResource RevealExpanderTemp}" -->
                        <Expander.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock FontWeight="SemiBold" Margin="0,10,0,10" FontSize="13"><Run Text="Details"/></TextBlock>
                            </DataTemplate>
                        </Expander.HeaderTemplate>
                        <TextBlock Text="{Binding TextData}" />
                    </Expander>
                </StackPanel>
            </DataTemplate>

        </ResourceDictionary>
        
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="130"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="2*" MinWidth="400"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="{Binding TextColumnWidth}" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <TextBlock x:Name="TraceStatusText"
                   Grid.ColumnSpan="5"
                   Text="{Binding TraceStatusText}"
                   Visibility="{Binding TraceStatusText, Converter={StaticResource StringToVisibilityConverter}}" 
                   Background="{DynamicResource WarningBarBackgroundBrush}" 
                   Foreground="{StaticResource MutedTextBrush}" Padding="5,1,0,1"/>

        <ScrollViewer Background="White" VerticalScrollBarVisibility="Auto" Grid.Column="0" Grid.Row="1"  Grid.RowSpan="3">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
 
                </Grid.RowDefinitions>
                <Grid Background="White" Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
      
                    </Grid.ColumnDefinitions>
                    <Grid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Copy (with Header)" cal:Message.Attach="[Event Click] = [Action CopyResults()]"></MenuItem>
                            <MenuItem Header="Copy (data only)" cal:Message.Attach="[Event Click] = [Action CopyResultsData()]"></MenuItem>
                        </ContextMenu>
                    </Grid.ContextMenu>
                    <!-- Total Duration -->
                    <TextBlock Text="Total" Grid.Row="0" Grid.Column="0" Padding="0,4,0,0" HorizontalAlignment="Center" FontWeight="Bold" ToolTip="{Binding TotalTooltip}"/>
                    <TextBlock Grid.Row="1" Grid.Column="0" Padding="0" HorizontalAlignment="Center"
                       Text="{Binding TotalDuration, StringFormat='#,0 ms'}" 
                       ToolTip="{Binding TotalTooltip}"/>

                    <!-- SE CPU Duration -->
                    <TextBlock Text="SE CPU" Grid.Row="0" Grid.Column="1" Padding="0,4,0,0" HorizontalAlignment="Center" FontWeight="Bold"  ToolTip="{Binding SECpuTooltip}"/>
                    <TextBlock Grid.Row="1" Grid.Column="1" Padding="0" HorizontalAlignment="Center"
                       Text="{Binding StorageEngineCpu, StringFormat='#,0 ms'}"
                       ToolTip="{Binding SECpuTooltip}"/>
                    <TextBlock Grid.Row="2" Grid.Column="1" Padding="0,0,0,5" HorizontalAlignment="Center"
                   Text="{Binding StorageEngineCpuFactor, StringFormat='x0.0'}"   FontSize="10" Foreground="#3571AD" />
                    
                    <!-- FE Controls -->
                    <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Center" ToolTip="{Binding FETooltip}">
                        <Rectangle Width="10" Height="10" Fill="{StaticResource FEBrush}" Margin="0,4,5,0"/>
                        <TextBlock Text="FE" Padding="0,4,0,0" HorizontalAlignment="Center" FontWeight="Bold"/>
                    </StackPanel>
                    <TextBlock Grid.Row="4" Grid.Column="0" Padding="0" HorizontalAlignment="Center"
                       Text="{Binding FormulaEngineDuration, StringFormat='#,0 ms'}"
                       ToolTip="{Binding FETooltip}" />
                    
                    <TextBlock Grid.Row="5" Grid.Column="0" Padding="0,0,0,5" HorizontalAlignment="Center"
                   Text="{Binding FormulaEngineDurationPercentage, StringFormat='0.0%'}"   FontSize="10" Foreground="#3571AD" />
                    
                    <!-- SE Controls -->
                    <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Center" ToolTip="{Binding SETooltip}">
                        <Rectangle Width="10" Height="10" Fill="{StaticResource DaxStudioBrush}" Margin="0,4,5,0"/>
                        <TextBlock Text="SE" Padding="0,4,0,0" HorizontalAlignment="Center" FontWeight="Bold"/>
                    </StackPanel>
                    <TextBlock Grid.Row="4" Grid.Column="1" Padding="0" HorizontalAlignment="Center"
                       Text="{Binding StorageEngineDuration, StringFormat='#,0 ms'}"
                       ToolTip="{Binding SETooltip}" />
                    <TextBlock Grid.Row="5" Grid.Column="1" Padding="0,0,0,5" HorizontalAlignment="Center"
                   Text="{Binding StorageEngineDurationPercentage, StringFormat='0.0%'}"  FontSize="10" Foreground="#3571AD"/>
                    
                    <!-- Horizontal Bar FE vs SE -->
                    <StackPanel Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
                        <Rectangle Height="5" HorizontalAlignment="Left" Margin="0,2,0,5" Fill="{StaticResource FEBrush}">
                            <Rectangle.Width>
                                <MultiBinding Converter="{StaticResource MultiConverter}">
                                    <Binding Path="FormulaEngineDurationPercentage"/>
                                    <Binding Source="{StaticResource BarWidth}" />
                                </MultiBinding>
                            </Rectangle.Width>
                        </Rectangle>    
                        <Rectangle Height="5" HorizontalAlignment="Right" Margin="0,2,0,5" Fill="{StaticResource DaxStudioBrush}">
                            <Rectangle.Width>
                                <MultiBinding Converter="{StaticResource MultiConverter}">
                                    <Binding Path="StorageEngineDurationPercentage"/>
                                    <Binding Source="{StaticResource BarWidth}" />
                                </MultiBinding>
                            </Rectangle.Width>
                        </Rectangle>
                    </StackPanel>
                    
                    <!-- SE Queries -->
                    <TextBlock Text="SE Queries" Grid.Row="7" Grid.Column="0" Padding="0,4,0,0" HorizontalAlignment="Center" FontWeight="Bold" ToolTip="{Binding SEQueriesTooltip}" />
                    <TextBlock Grid.Row="8" Grid.Column="0" Padding="0" HorizontalAlignment="Center"
                       Text="{Binding StorageEngineQueryCount, StringFormat='#,0'}"
                       ToolTip="{Binding SEQueriesTooltip}" />
                    
                    <!-- SE Cache -->
                    <TextBlock Text="SE Cache" Grid.Row="7" Grid.Column="1" Padding="0,4,0,0" HorizontalAlignment="Center" FontWeight="Bold" ToolTip="{Binding SECacheTooltip}"/>
                    <TextBlock Grid.Row="8" Grid.Column="1" Padding="0" HorizontalAlignment="Center"
                       Text="{Binding VertipaqCacheMatches, StringFormat='#,0'}"
                       ToolTip="{Binding SECacheTooltip}" />
                    <TextBlock Grid.Row="9" Grid.Column="1" Padding="0,0,0,5" HorizontalAlignment="Center" 
                   Text="{Binding VertipaqCacheMatchesPercentage, StringFormat='0.0%'}"  FontSize="10" Foreground="#3571AD"/>
<!--
                    <TextBlock Text="Total CPU" Grid.Row="10" Grid.Column="1" Padding="0,4,0,0" HorizontalAlignment="Center" FontWeight="Bold" Foreground="gray"/>
                    <TextBlock Grid.Row="11" Grid.Column="1" Padding="0,0,0,5" HorizontalAlignment="Center" Foreground="Gray"
                       Text="{Binding TotalCpuDuration, StringFormat='#,0 ms'}"  />
-->
                </Grid>
                
                
            </Grid>
        </ScrollViewer>
        <GridSplitter Width="5" Grid.Column="1" 
                      Grid.RowSpan="3"
                      ResizeDirection="Columns" 
                      Grid.Row="1"
                      Height="Auto" 
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Stretch" 
                    Margin="0"/>
        <DataGrid Name="ListEvents" Grid.Column="2" SelectedItem="{Binding SelectedEvent}" HorizontalAlignment="Stretch" AutoGenerateColumns="False"
                  Grid.Row="1"
                  behaviours:GridViewColumnResize.Enabled="True" VerticalAlignment="Stretch" Background="White" Width="Auto"
                  ItemsSource="{Binding StorageEngineEvents}" 
                  SelectionMode="Extended"
                  SelectionUnit="FullRow"
                  HeadersVisibility="Column"
                  ClipboardCopyMode="IncludeHeader"
                  ScrollViewer.CanContentScroll="True"
                  FrozenColumnCount="1"
                  GridLinesVisibility="None" BorderThickness="1,0,0,0" BorderBrush="{x:Null}" >
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <ContextMenu.ItemsSource>
                        <CompositeCollection>
                            <MenuItem Command="Copy" >
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource CopyIcon}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Command="SelectAll"></MenuItem>
                            <Separator />
                            <MenuItem Header="Scan" IsCheckable="True" IsChecked="{Binding ServerTimingDetails.ShowScan}" />
                            <MenuItem Header="Cache" IsCheckable="True" IsChecked="{Binding ServerTimingDetails.ShowCache}" />
                            <MenuItem Header="Internal" IsCheckable="True" IsChecked="{Binding ServerTimingDetails.ShowInternal}" />
                        </CompositeCollection>
                    </ContextMenu.ItemsSource>
                </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>
                <Style x:Key="AlignRight" TargetType="{x:Type TextBlock}">
                    <Setter Property="HorizontalAlignment" Value="Right" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="FontWeight"
                  Value="SemiBold" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="5,0,5,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Padding="{TemplateBinding Padding}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}" 
                                        SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <EventSetter Event="Control.RequestBringIntoView" Handler="DataGrid_RequestBringIntoView"  />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Line" Width="35" IsReadOnly="True" Binding="{Binding RowNumber, StringFormat='#,#;;'}" ElementStyle="{StaticResource AlignRight}" />
                <DataGridTextColumn Header="Subclass" Width="60" IsReadOnly="True" Binding="{Binding ClassSubclass, Converter={StaticResource EventClassSubclass}}" />
                <DataGridTextColumn Header="Duration" IsReadOnly="True" Width="60" Binding="{Binding Duration, StringFormat='#,0'}" ElementStyle="{StaticResource AlignRight}" />
                <DataGridTextColumn Header="CPU" IsReadOnly="True" Width="60" Binding="{Binding CpuTime, StringFormat='#,0'}" ElementStyle="{StaticResource AlignRight}" />
                <DataGridTextColumn Header="Rows" IsReadOnly="True" Width="60" Binding="{Binding EstimatedRows, StringFormat='#,0'}" ElementStyle="{StaticResource AlignRight}" />
                <DataGridTextColumn Header="KB" IsReadOnly="True" Width="50" Binding="{Binding EstimatedKBytes, StringFormat='#,0'}" ElementStyle="{StaticResource AlignRight}" />
                <DataGridTextColumn Header="Query" behaviours:GridViewColumnResize.Width="Auto"
                                    IsReadOnly="True" Binding="{Binding Query, Converter={StaticResource QuerySingleLine}}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HighlightQuery}" Value="True">
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

            </DataGrid.Columns>
            <DataGrid.Style>

                <Style>
                    <!--<Setter Property="Grid.RowSpan" Value="{Binding Parent.TextGridRowSpan}" />-->
                    <Setter Property="Grid.RowSpan" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.TextGridRowSpan}" />
                </Style>
                
            </DataGrid.Style>
        </DataGrid>
        <GridSplitter Height="5" Grid.Row="2" Grid.Column="2" ResizeDirection="Rows" HorizontalAlignment="Stretch" 
                      Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter}, Path=ServerTimingDetails.LayoutBottom}" />
        <GridSplitter Width="5" Grid.Column="3" 
                      Grid.RowSpan="3"
                      ResizeDirection="Columns" 
                      Grid.Row="1"
                      Height="Auto" 
                      HorizontalAlignment="Stretch" 
                      VerticalAlignment="Stretch" 
                      Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter}, Path=ServerTimingDetails.LayoutRight}"
                      Margin="0"/>
        <ScrollViewer >
            <ContentControl Content="{Binding ElementName=ListEvents, Path=SelectedItem}" >
            </ContentControl>
                <!-- Query Event Template -->
                
                
            
            <ScrollViewer.Style>
                <Style>
                    <Setter Property="Grid.Row" Value="{Binding TextGridRow}" />
                    <Setter Property="Grid.RowSpan" Value="{Binding TextGridRowSpan}" />
                    <Setter Property="Grid.Column" Value="{Binding TextGridColumn}" />
                </Style>
            </ScrollViewer.Style>
        </ScrollViewer>
        
        <!-- Busy overlay -->
        <Border 
                Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}" 
                Grid.RowSpan="4" 
            Grid.ColumnSpan="5"
            Style="{StaticResource BusyPanel}" d:IsHidden="True">
                
            <Grid>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Label Style="{StaticResource LabelSpinnerStyle}" Height="30" VerticalContentAlignment="Center"  FontSize="18" FontWeight="Bold" Foreground="#D0000000" Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock x:Name="BusyMessage"/>
                    </Label>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</custom:ZoomableUserControl>
