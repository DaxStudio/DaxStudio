<ctrl:DaxStudioDialog
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:conv="clr-namespace:DaxStudio.UI.Converters"
        xmlns:beh="clr-namespace:DaxStudio.UI.Behaviours"
        xmlns:vw="clr-namespace:DaxStudio.UI.Views"
        xmlns:ap="clr-namespace:DaxStudio.UI.AttachedProperties"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:DaxStudio.UI.Resources"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:ctrl="clr-namespace:DaxStudio.UI.Controls"
        xmlns:attachedProperties="clr-namespace:DaxStudio.UI.AttachedProperties"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        x:Class="DaxStudio.UI.Views.ConnectionDialogView"
        Caption="Connect"
        Icon="{DynamicResource connectDrawingImage}"
        Padding="10 24 10 200"
        DataContext="{Binding}" 
        Loaded="UserControl_Loaded" 
        Width="800">
    <!--         Style="{StaticResource DaxStudioDialogStyle}" -->
    <ctrl:DaxStudioDialog.Resources>
        <ResourceDictionary>

            <!-- Converters -->
            <conv:BoolToNotCollapsedConverter x:Key="BoolToNotCollapsedConverter"/>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <conv:WorkbookNameConverter x:Key="WorkbookNameConverter" />
            <conv:BoolToNotHiddenConverter x:Key="BoolToNotHiddenConverter" />

            <conv:ResourceLookupConverter x:Key="IconNames">
                <ResourceDictionary>
                    <sys:String x:Key="PowerBI" >powerbi_smallDrawingImage</sys:String>
                    <sys:String x:Key="PowerBIReportServer">powerbi_smallDrawingImage</sys:String>
                    <sys:String x:Key="Devenv">visual_studioDrawingImage</sys:String>
                    <sys:String x:Key="Loading">powerbi_smallDrawingImage</sys:String>
                    <sys:String x:Key="None">alertDrawingImage</sys:String>
                </ResourceDictionary>
            </conv:ResourceLookupConverter>

            <Style TargetType="{x:Type TextBlock}" x:Key="disabledText" >
                <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />-->
                <Style.Triggers>

                    <!--<Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextColorKey}}" />
                    </Trigger>-->

                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="Transparent" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DeleteButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" Padding="2" >
                                <Image Source="{DynamicResource closeDrawingImage}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            

            <ResourceDictionary.MergedDictionaries>
                <local:DesignTimeResourceDictionary DesignTimeSource="pack://application:,,,/DaxStudio.UI;component/Theme/Light.DaxStudio.Theme.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/MetaDataPaneViewStyle.xaml"/>
                <!--<ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/DaxStudio.RadioButton.xaml"/>-->
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/DaxStudio.Button.xaml"/>
                <!--<ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/ExpanderTemplates.xaml"/>-->
                <!--<ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/DaxStudioDialog.xaml"/>-->
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/DaxStudio.Spinner.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ctrl:DaxStudioDialog.Resources>
    <!--<Border Padding="10,10,10,200" Margin="0,0,0,0"  >
        <Border Style="{StaticResource DaxStudioDialog}" >-->

    <Grid  Height="Auto"
                   >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>

        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <!-- MinHeight="131"-->
            <RowDefinition Height="Auto"/>

            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--<Grid.Effect>
                    <fluent:GrayscaleEffect/>
                </Grid.Effect>-->
        <!--<StackPanel Orientation="Horizontal" Margin="0 0 0 16">
                    <Image Source="{DynamicResource connectDrawingImage}"/>
                    <TextBlock Text="Connect" 
                           Style="{StaticResource DialogCaption}"/>
                </StackPanel>-->
        <!-- Radio Button Grid-->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>


            <!-- PBI / SSDT -->
            <RadioButton  HorizontalAlignment="Left" 
                                  Margin="5,0,5,0" x:Name="rdoPowerBI" 
                                  VerticalAlignment="Center" 
                                  IsChecked="{Binding PowerBIModeSelected, Mode=TwoWay}" 
                                  Grid.Column="0" 
                                  Grid.Row="0"
                                  GroupName="ConnectionType" 
                                  IsEnabled="{Binding PowerBIInstanceDetected}">
                <Label Margin="5 0">Power BI / SSDT Model</Label>
            </RadioButton>

            <ComboBox 
                              x:Name="cboPowerBI" 
                              VerticalAlignment="Center"  
                              IsEditable="False"  
                              Grid.Column="1"
                              Grid.Row="0"
                              HorizontalAlignment="Stretch"
                        
							  ItemsSource="{Binding PowerBIDesignerInstances}"
							  SelectedItem="{Binding SelectedPowerBIInstance}"
							  IsEnabled="{Binding IsChecked, ElementName=rdoPowerBI}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <ProgressBar x:Name="Loading" Visibility="Collapsed" 
                                                 Style="{StaticResource MaterialDesignCircularProgressBar}" 
                                                 IsIndeterminate="True"
                                                 Margin="0,0,5,0" Width="16" Height="16"/>
                            <!-- Source="{Binding Icon,Converter={StaticResource EmbeddedSsasIcons}}"  -->
                            <Image x:Name="pbiIcon" 
                                           ap:ImageBindingHelper.SourceResourceKey="{Binding Path=Icon, Converter={StaticResource IconNames}, Mode=OneTime}"
                                           Margin="0,0,5,0" 
                                           Width="16" 
                                           Height="16"/>
                            <TextBlock Text="{Binding Name, Mode=OneTime}" />
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Icon,Mode=OneTime}" Value="Loading">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="pbiIcon"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="Loading"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <!-- Server -->
            <RadioButton HorizontalAlignment="Left" 
                                 Margin="5,0,0,0" 
                                 x:Name="rdoTabularServer" 
                                 VerticalAlignment="Center" 
                                 IsChecked="{Binding ServerModeSelected, Mode=TwoWay}" 
                                 
                                 Grid.Column="0" 
                                 Grid.Row="1"
                                 GroupName="ConnectionType">
                <StackPanel Orientation="Horizontal" Margin="5 0" VerticalAlignment="Top">
                    <Label>Tabular Server</Label>
                    <Image Source="{DynamicResource warningDrawingImage}" Margin="5,2,0,0" Visibility="{Binding ShowConnectionWarning, Converter={StaticResource BoolToVisibilityConverter}}" ToolTip="{Binding ConnectionWarning}"/>

                </StackPanel>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <cal:Action.Target>
                            <cal:ActionMessage MethodName="ClearDatabases"/>
                        </cal:Action.Target>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="SelectionChanged">
                        <cal:Action.Target>
                            <cal:ActionMessage MethodName="ClearDatabases"/>
                        </cal:Action.Target>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </RadioButton>

            <ComboBox 
                              x:Name="cboServers" 
                              VerticalAlignment="Center"  
                              IsEditable="True"  
							  ItemsSource="{Binding RecentServers}"
                              HorizontalAlignment="Stretch"
                              Grid.Column="1"
                              Grid.Row="1"
							  Text="{Binding DataSource, UpdateSourceTrigger=PropertyChanged}" 
							  IsEnabled="{Binding IsChecked, ElementName=rdoTabularServer}" 
							  ap:InitialFocusExtentions.SelectAllAndFocus="{Binding SelectedServerSetFocus}" Grid.ColumnSpan="2"
                              ap:DataSourcePasteHandlerHelper.PasteHandler="{Binding DataSourcePasted}"
                              >

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <cal:Action.Target>
                            <cal:ActionMessage MethodName="ClearDatabases"/>
                        </cal:Action.Target>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="KeyUp">
                        <cal:Action.Target>
                            <cal:ActionMessage MethodName="ClearDatabases"/>
                        </cal:Action.Target>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ComboBox.Resources>
                    <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="0.4" Stretch="None" AlignmentX="Left">
                        <VisualBrush.Visual>
                            <TextBlock FontStyle="Italic" Text="Type or select from list"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </ComboBox.Resources>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                        
                            <TextBlock Text="{Binding .}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
                            <Button Content="X" Grid.Column="1" 
                                    Command="{Binding DataContext.DeleteServerCommand,RelativeSource={RelativeSource AncestorType=vw:ConnectionDialogView}}"
                                    CommandParameter="{Binding .}"
                                    Style="{StaticResource DeleteButtonStyle}"
                                    ToolTip="Delete this server from the list">
                                <!--<Button.Template>
                                    <ControlTemplate>
                                        <Border x:Name="imgBorder">
                                        <Image Source="{DynamicResource closeDrawingImage}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Button.Template>-->

                            </Button>
                        </Grid>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                
                <!--<ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Style.Triggers>
                                            <Trigger Property="Text" Value="{x:Null}">
                                                <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="">
                                                <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>-->
                <i:Interaction.Behaviors>
                    <beh:BindableFocusBehavior HasFocus="{Binding IsChecked, ElementName=rdoTabularServer}"/>
                </i:Interaction.Behaviors>
            </ComboBox>

            <!-- PowerPivot -->
            <RadioButton HorizontalAlignment="Left" 
                                 Margin="5,0,0,0" 
                                 
                                 x:Name="rdoPowerPivot" 
                                 VerticalAlignment="Top" IsChecked="{Binding PowerPivotModeSelected, Mode=TwoWay}" 
                                 Grid.Column="0" 
                                 Grid.Row="2"
                                 GroupName="ConnectionType"  IsEnabled="{Binding HasPowerPivotModel}">
                <Label Margin="5 0">Power Pivot Model</Label>
            </RadioButton>

            <TextBlock    Text="{Binding WorkbookName, Converter={StaticResource WorkbookNameConverter}}"  
                                  Margin="5,5,0,0"
                                  Padding="0" 
                                  x:Name="lblWorkBook" 
                                  VerticalAlignment="Top" 
                                  Grid.Column="1" 
                                  Grid.Row="2"
                                  Foreground="#3571AD"/>
            <StackPanel Orientation="Vertical"
                        Grid.Row="3"
                        Grid.ColumnSpan="2">
                <TextBlock Margin="40 0"
                               Foreground="{DynamicResource Theme.Brush.Muted.Fore}"
                               Visibility="{Binding HasPowerPivotModel, Converter={StaticResource BoolToNotHiddenConverter}}"
                               TextWrapping="Wrap">Launch DAX Studio from an Excel file containing a Power Pivot model to enable this option.</TextBlock>
                <!--<TextBlock Margin="40 0"
                           Visibility="{Binding HasPowerPivotModel , Converter={StaticResource BoolToNotCollapsedConverter}}"
                           Foreground="{DynamicResource Theme.Brush.Accent2}"
                               >Warning: Power Pivot model not detected</TextBlock>-->
            </StackPanel>
        </Grid>



        <!-- Template="{StaticResource RevealExpanderTemp}"-->
        <Expander x:Name="myExpander" Header="Advanced Options"
					      ExpandDirection="Down" 
                          IsExpanded="False"       
					      Grid.Row="2" 
                          Grid.Column="0"  Margin="10,24,0,8" >
            <!-- Template="{StaticResource RevealExpanderTemp}" -->
            <!--<Expander.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock FontWeight="SemiBold" Margin="0,10,0,10" FontSize="13"><Run Text="Advanced Options"/></TextBlock>
                        </DataTemplate>
                    </Expander.HeaderTemplate>-->
            <!--</GroupBox>-->
            <!--<GroupBox Header="Server Options" Margin="0,0,0,0" Name="grpOptions" >-->
            <Grid x:Name="AdvancedOptions"  Height="Auto" Margin="10,24,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="125"/>
                    <ColumnDefinition Width="*"/>

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Initial Catalog: " Height="28" HorizontalAlignment="Left"  x:Name="lblCatalogs" VerticalAlignment="Top"  Grid.Row="0" Grid.Column="0" IsEnabled="{Binding ServerModeSelected}"/>
                    <!--<Image Source="{DynamicResource refresh_toolbarDrawingImage}" Width="16" Height="16" Style="{StaticResource SpinningImage}" Grid.Column="1"
                               Margin="0 0 4 0"
                                >-->
                        <Image Source="{DynamicResource refresh_toolbarDrawingImage}" Width="16" Height="16" ap:ImageSpinner.Spin="True" Grid.Column="1"
                               Margin="0 0 4 0"
                               Visibility="{Binding IsLoadingDatabases, Converter={StaticResource BoolToVisibilityConverter}}" >
                            <!-- -->
                    </Image>

                </Grid>

                <!--SelectedItem="{Binding Path=InitialCatalog}"-->
                <ComboBox Height="23" Grid.Column="1" Grid.Row="0" x:Name="cboCatalogs" 
                            HorizontalAlignment="Stretch"
                            IsEditable="True"      
                            Text="{Binding InitialCatalog}"
                            Margin="0"
							ItemsSource="{Binding Path=Databases}"
                            IsEnabled="{Binding ServerModeSelected}"
                            cal:Message.Attach="[Event DropDownOpened]=[RefreshDatabases()]"
                          >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="DropDownOpened">
                            <cal:Action.TargetWithoutContext>
                                <cal:ActionMessage MethodName="RefreshDatabases"/>
                            </cal:Action.TargetWithoutContext>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>

                <Label Content="Direct Query Mode: " Height="27" Grid.Column="0" Grid.Row="1" 
							HorizontalAlignment="Left" x:Name="lblDirectQuery" VerticalAlignment="Top" Width="116"
                            IsEnabled="{Binding IsChecked, ElementName=rdoTabularServer}"/>
                <ComboBox Height="23" Grid.Column="1" Grid.Row="1" x:Name="cboDirectQuery" 
							VerticalAlignment="Top" 
                            HorizontalAlignment="Stretch"
							IsEnabled="{Binding IsChecked, ElementName=rdoTabularServer}"
							SelectedValue="{Binding DirectQueryMode}"
							ItemsSource="{Binding DirectQueryModeOptions}"
                            Margin="0"/>

                <Label Content="MDX Compatibility: " Height="27" HorizontalAlignment="Left"  x:Name="lblMdxCompat" VerticalAlignment="Top" Width="116" 
                               IsEnabled="{Binding IsChecked, ElementName=rdoTabularServer}"
                               Grid.Row="2" Grid.Column="0" />
                <ComboBox Height="23"  x:Name="cboMdxCompat" VerticalAlignment="Top" 
							IsEnabled="{Binding IsChecked, ElementName=rdoTabularServer}" 
							SelectedItem="{Binding MdxCompatibility}"
							Grid.Column="1" Grid.Row="2" 
							ItemsSource="{Binding MdxCompatibilityOptions}">
                </ComboBox>

                <Label Content="Effective User Name: " Height="28" HorizontalAlignment="Left"  x:Name="lblEffectiveUserName" VerticalAlignment="Top" Grid.Column="0" Grid.Row="3" />
                <TextBox Height="23"  
                                 x:Name="EffectiveUserName" 
                                 VerticalAlignment="Top" 
                                 IsEnabled="{Binding IsEffectiveUserNameEnabled}"  Grid.Column="1" 
                                 Grid.Row="3" 
                                 HorizontalAlignment="Stretch"
                                 Width="Auto"/>

                <Label Content="Roles: " Height="28" HorizontalAlignment="Left" x:Name="lblRoles" VerticalAlignment="Top" Grid.Row="4" Grid.Column="0" />
                <TextBox Height="23"  
                                 x:Name="Roles" 
                                 VerticalAlignment="Top" 
                                 HorizontalAlignment="Stretch"
                                 IsEnabled="{Binding IsRolesEnabled}" Grid.Row="4" 
                                 Grid.Column="1"  />

                <Label Content="Locale: " Height="28" HorizontalAlignment="Left"  x:Name="lblLocale" VerticalAlignment="Top"  Grid.Row="5" Grid.Column="0"/>
                <ComboBox Height="23" Grid.Column="1" Grid.Row="5" x:Name="cboLocales" 
							VerticalAlignment="Top" 
                            HorizontalAlignment="Stretch"
                            
							SelectedItem="{Binding Path=Locale}"
							ItemsSource="{Binding Path=LocaleOptions.Values, Mode=OneTime}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DisplayName,Mode=OneTime}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <Label Content="Additional Options: " Height="28" HorizontalAlignment="Left"  x:Name="lblAdditionalOptions" VerticalAlignment="Top"  Grid.Row="6" Grid.Column="0"/>
                <ScrollViewer Grid.Row="6" Grid.Column="1" Height="85" HorizontalAlignment="Stretch" >
                    <TextBox x:Name="AdditionalOptions" TextWrapping="Wrap" 
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                </ScrollViewer>
            </Grid>
        </Expander>

        <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Right" 
                            VerticalAlignment="Top"
                            Margin="0 16 0 0"
                            Grid.ColumnSpan="3" >

            <Button Content="Connect" 
                            HorizontalAlignment="Right" 
                            x:Name="Connect" 
                            IsEnabled="{Binding CanConnect}"  
                            Width="70" 
                            IsDefault="True"
                            Style="{DynamicResource AccentButtonStyle}"
                            VerticalAlignment="Bottom" 
                            
                            />
            <!-- 
                    BorderBrush="Gray"
                            BorderThickness="0 0 0 2"
                    mah:ControlsHelper.CornerRadius="5"
                    Style="{DynamicResource DaxStudioButtonStyle}"
                    -->
            <Button Content="Cancel"  
                            HorizontalAlignment="Right" 
                             
                            Margin="8 0 0 0"

                            x:Name="Cancel" 
                            VerticalAlignment="Bottom" 
                            Width="70" 
                            IsCancel="True"
                            />
        </StackPanel>
        <TextBlock Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right" Margin="0 8 0 2"><Hyperlink NavigateUri="https://daxstudio.org/docs/tutorials/getting-connected" attachedProperties:HyperlinkExtensions.IsExternal="true">Learn More</Hyperlink></TextBlock>


    </Grid>
    <!--</Border>
    </Border>-->
</ctrl:DaxStudioDialog>
