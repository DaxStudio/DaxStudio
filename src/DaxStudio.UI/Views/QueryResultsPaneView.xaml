<controls:ZoomableUserControl xmlns:Views="clr-namespace:DaxStudio.UI.Views"  x:Class="DaxStudio.UI.Views.QueryResultsPaneView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:ui="clr-namespace:DaxStudio.UI"
             xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
             xmlns:conv="clr-namespace:DaxStudio.UI.Converters"
             xmlns:custom="clr-namespace:DaxStudio.UI.AttachedProperties"
             xmlns:controls="clr-namespace:DaxStudio.UI.Controls"
             xmlns:sel="clr-namespace:DaxStudio.UI.TemplateSelectors"
             xmlns:ap="clr-namespace:DaxStudio.UI.AttachedProperties"
             xmlns:res="clr-namespace:DaxStudio.UI.Resources"
             xmlns:ctrl="clr-namespace:DaxStudio.UI.Controls"
             xmlns:filter="clr-namespace:DaxStudio.Controls.DataGridFilter;assembly=DaxStudio.Controls.DataGridFilter"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <res:DesignTimeResourceDictionary DesignTimeSource="pack://application:,,,/Fluent;component/Themes/Generic.xaml"/>
                <res:DesignTimeResourceDictionary DesignTimeSource="pack://application:,,,/DaxStudio.UI;component/Theme/Light.DaxStudio.Theme.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/BusyPanel.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/ScrollingVerticalTabs.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/DataGrid.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/DaxStudio.Spinner.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <conv:DynamicGridViewConverter x:Key="DynamicGridViewConverter" />
            <conv:DynamicDataGridConverter x:Key="DynamicDataGridConverter" />
            <conv:OutputTargetImageResourceConverter x:Key="OutputTargetImageResourceConverter"/>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <sel:ResultsGridCellTemplateSelector x:Key="ResultsGridCellTemplateSelector"/>
            <SolidColorBrush x:Key="SpinnerColorBrush" Color="White" />

            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource DefaultDataGridColumnHeaderStyle}">
                <Setter Property="Padding" Value="6 0"/>
                <Setter Property="MinHeight" Value="28"/>
                <Setter Property="Foreground" Value="{DynamicResource Theme.Brush.Table.Header.Fore}"/>
                <Setter Property="Background" Value="{DynamicResource Theme.Brush.Table.Header.Back}"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Style.Triggers>
                    <Trigger Property="SortDirection" Value="{x:Null}">
                        <Setter Property="Padding" Value="6 0" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="DataGridRowHeader" BasedOn="{StaticResource DefaultDataGridRowHeaderStyle}">
                <Setter Property="Foreground" Value="{DynamicResource Theme.Brush.Table.Header.Fore}"/>
                <Setter Property="Background" Value="{DynamicResource Theme.Brush.Table.Header.Back}"/>
                <Setter Property="MinWidth" Value="10"/>
            </Style>

            <Style TargetType="DataGridRow">
                <Style.Triggers>
                    <Trigger Property="AlternationIndex" Value="1">
                        <Setter Property="Background" Value="Green"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.Resources>
            <ctrl:BindingProxy x:Key="Proxy" Data="{Binding}" />
        </Grid.Resources>

        <!-- Results Grid -->
        <ctrl:ClipBorder Style="{StaticResource BusyBlur}">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter }, Path=ShowResultsTable}">
    
            <TabControl ItemsSource="{Binding Tables}" 
                        Template="{DynamicResource ScrollingVerticalTabsTemplate}" 
                        TabStripPlacement="Left" 
                        SelectedIndex="{Binding SelectedTableIndex}">
                <!-- Style to hide tabs if only one is present -->
                <TabControl.ItemContainerStyle>

                    <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                        <Setter Property="Background" Value="{DynamicResource Theme.Brush.Content.Back}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    
                                        <Border x:Name="border" 
                                            BorderBrush="Transparent"
                                            BorderThickness="3,0,0,0"
                                            Margin="0 0 8 0"
                                                Padding="2"
                                            CornerRadius="4"
                                            >
                                                

                                            <Grid Name="Panel" Background="Transparent">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter x:Name="ContentSite"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            ContentSource="Header"
                                            Margin="0,2,0,2"
                                            Grid.Column="0"/>
                                                <!--<TextBlock x:Name="ActiveIndicator" 
                                                           VerticalAlignment="Bottom" 
                                                           FontFamily="Wingdings 3" 
                                                           Text="}" Grid.Column="1" Margin="2"/>-->
                                            </Grid>
                                        </Border>
       
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Theme.Brush.Control.Selected}"/>
                                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Theme.Brush.Accent}"/>
                                            <Setter Property="Panel.ZIndex" Value="100"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="False">
                                            <!--<Setter TargetName="Panel" Property="Background" Value="{DynamicResource GradientInactiveCaptionBrush}" />-->
                                            <!--<Setter TargetName="ActiveIndicator" Property="Visibility" Value="Hidden"/>-->
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Panel" Property="Background" Value="DarkGray"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}" TargetName="border"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" TargetName="border"/>
                                        </MultiTrigger>
                                 
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>


                </TabControl.ItemContainerStyle>

                <!-- Tab Content (DataGrid) -->
                <TabControl.ContentTemplate>
                    <DataTemplate>
                       
                        <controls:ClipBorder 
                            BorderBrush="{DynamicResource Theme.Brush.Control.Border}"
                            BorderThickness="1"
                            CornerRadius="4"
                            >

                            <!-- ItemTemplateSelector="{StaticResource ResultsGridCellTemplateSelector}"     -->
                         <DataGrid
                            x:Name="DefaultView" 
                            AlternationCount="2"
                            AlternatingRowBackground="{DynamicResource Theme.Brush.Table.Alternate}"
                            ItemsSource="{Binding DefaultView}"
                            ClipboardCopyMode="IncludeHeader"
                            SelectionMode="Extended"       
                            SelectionUnit="Cell"
                            CanUserAddRows="False"
                            CanUserDeleteRows="False"
                            IsReadOnly="True"
                            Background="{DynamicResource Theme.Brush.Content.Back}"
                            AutoGenerateColumns="False"
                            FontFamily="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=DataContext.FontFamily}"
                            cal:Message.Attach="[Event CopyingRowClipboardContent] = [Action CopyingRowClipboardContent($this,$eventArgs)];[Event GotFocus] = [Action GridGotFocus];[Event LostFocus]=[Action GridLostFocus]"
                            custom:DataGridExtension.Columns="{Binding Converter={StaticResource DynamicDataGridConverter }, Path=DefaultView}"
                            cal:Action.TargetWithoutContext="{Binding Path=., RelativeSource={RelativeSource AncestorType=UserControl}}"
                            CanUserSortColumns="True"
                            RowHeaderWidth="10"
                            GridLinesVisibility="All" 
                            >
                                    <!--<i:Interaction.Triggers>
                                        <i:EventTrigger EventName="CopyingRowClipboardContent">
                                            <cal:Action.TargetWithoutContext>
                                                <cal:ActionMessage  MethodName="$dataContext.CopyingRowClipboardContent"/>
                                            </cal:Action.TargetWithoutContext>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>-->
                                    <!-- cal:Message.Attach="[Event MouseDoubleClick] = [Action ResizeGridColumns($source, $eventArgs)]
                                        , [Event CopyingRowClipboardContent] = [Action CopyingRowClipboardContent($source, $eventArgs)]"-->
                            <!--<DataGrid.Style>
                                <Style BasedOn="{StaticResource MahApps.Styles.DataGrid}" TargetType="{x:Type DataGrid}">
                                    <Setter Property="AlternatingRowBackground" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                                </Style>
                            </DataGrid.Style>-->
                            <!--<DataGrid.AlternatingRowBackground>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Offset="1" Color="#f2f2f2"/>
                                    <GradientStop Color="#f7f7f7"/>
                                </LinearGradientBrush>
                            </DataGrid.AlternatingRowBackground>
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="FontWeight" Value="SemiBold" />
                                </Style>
                            </DataGrid.ColumnHeaderStyle>-->
                            <DataGrid.ContextMenu>
                                <ContextMenu >
                                    <MenuItem Header="Copy" 
                                              InputGestureText="Ctrl+C"
                                              cal:Action.TargetWithoutContext="{Binding Source={StaticResource Proxy}, Path=Data}"
                                              cal:Message.Attach="CopyData($eventArgs)">
                                        <MenuItem.Icon>
                                            <Image Source="{DynamicResource copyDrawingImage}"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Copy with Headers" 
                                                InputGestureText="Ctrl+Shift+C"
                                                cal:Action.TargetWithoutContext="{Binding Source={StaticResource Proxy}, Path=Data}"
                                                cal:Message.Attach="CopyWithHeaders($eventArgs)">
                                                
                                    </MenuItem>
                                            <Separator/>
                                            <MenuItem Header="Clear Results"
                                                      cal:Action.TargetWithoutContext="{Binding Source={StaticResource Proxy}, Path=Data}"
                                                cal:Message.Attach="Clear()"/>
                                        </ContextMenu>
                            </DataGrid.ContextMenu>
                        </DataGrid>
                        </controls:ClipBorder>
                    </DataTemplate>
                </TabControl.ContentTemplate>
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding TableName}" FontWeight="DemiBold" Margin="12 0" Foreground="{DynamicResource Theme.Brush.Default.Fore}"/>
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </TabControl>

            

        </Grid>
        </ctrl:ClipBorder>

        <!-- Results Message -->
        <Grid HorizontalAlignment="Center" VerticalAlignment="Top" 
                  Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter }, Path=ShowResultsMessage}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Row="0" Margin="0,30,0,0">
                <Image VerticalAlignment="Center"
                       ap:ImageBindingHelper.SourceResourceKey="{Binding ResultsIcon, Converter={StaticResource OutputTargetImageResourceConverter}}"
                       Stretch="None"
                       Width="40"
                       Height="37"
                       Margin="0,0,10,0"
                       />
                <TextBlock x:Name="ResultsMessage" VerticalAlignment="Center" Foreground="{DynamicResource Theme.Brush.Default.Fore}"></TextBlock>
            </StackPanel>
            <Label x:Name="SelectedWorkbook" Grid.Row="1" Padding="0 5 0 5" />
            <StackPanel Orientation="Horizontal" Grid.Row="2"
                        Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter }, Path=ShowWorksheets}" 
                        >
                <TextBlock Text="Worksheet:" Padding="0,3,5,0"/>
                <ComboBox Name="cboOutputTo" 
                    Text="&lt;Output Sheet&gt;" 
                    MinWidth="120" MaxWidth="200" 
                    IsEditable="False" 
                    ItemsSource="{Binding Worksheets}" 
                    SelectedItem="{Binding SelectedWorksheet}"
                    
                    Template="{DynamicResource MetroComboBoxControlTemplate}" >
                </ComboBox>
            </StackPanel>
        </Grid>


        <!-- Busy overlay -->
        <Border 
            Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}" Style="{StaticResource BusyPanel}">
            <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <ProgressBar 
                                    x:Name="spinner"
                                    Style="{StaticResource MaterialDesignCircularProgressBar}" 
                                    Grid.Column="0"
                                    IsIndeterminate="True"
                                    Width="24"
                                    Height="24"
                                    Margin="0 0 10 0"
                                    Foreground="{DynamicResource Theme.Brush.Accent}"
                                    Background="Transparent"
                                    Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    <Label 
                           Height="30" VerticalContentAlignment="Center"  
                           FontSize="18" 
                           FontWeight="Bold" 
                           Foreground="{DynamicResource Theme.Brush.BusyPanel.Text}" 
                           Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}">Running Query...</Label>
                </StackPanel>
            </Grid>
        </Border>
       
    </Grid>
</controls:ZoomableUserControl>
