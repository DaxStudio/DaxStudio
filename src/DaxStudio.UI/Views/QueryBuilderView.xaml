<ctrl:ZoomableUserControl x:Class="DaxStudio.UI.Views.QueryBuilderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:primitives="http://schemas.modernwpf.com/2019"         
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:ctrl="clr-namespace:DaxStudio.UI.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
                          xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
                          xmlns:conv="clr-namespace:DaxStudio.UI.Converters"
                          xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
                          xmlns:ui="http://schemas.modernwpf.com/2019"
                          xmlns:res="clr-namespace:DaxStudio.UI.Resources"
                          xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:attachedProperties="clr-namespace:DaxStudio.UI.AttachedProperties" 
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="230" 
             IsEnabled="{Binding IsEnabled}"
             cal:Message.Attach="[Event GotFocus] = [Action GotFocus];[Event Click] = [Action GotFocus]">
    <ctrl:ZoomableUserControl.Resources>
        <ResourceDictionary>
            <conv:EnumDescriptionConverter x:Key="enumDescriptionConverter"/>
            <conv:MinWidthOrientationConverter x:Key="MinWidthOrientationConverter" />
            <conv:IsMeasureVisibilityConverter x:Key="IsMeasureToVisibilityConverter"/>
            <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
            <conv:BoolToNotVisibleConverter x:Key="BoolToNotVisibleConverter"/>
            <conv:FilterValueHeightConverter x:Key="FilterValueHeightConverter" />
            <conv:IsMultiLineFilterTypeConverter x:Key="IsMultiLineFilterTypeConverter"/>
            <conv:CanDuplicateMeasureConverter x:Key="CanDuplicateMeasureConverter"/>
            <conv:BoolToDoubleConverter x:Key="BoolToDoubleConverter"/>
            <conv:BoolToThicknessConverter x:Key="BoolToThicknessConverter"/>
            <conv:BoolToGridRowHeightConverter x:Key="BoolToGridRowHeightConverter"/>
            <conv:BoolToHiddenConverter x:Key="BoolToHiddenConverter"/>

            <Style TargetType="{x:Type ctrl:ClipBorder}">
                <Setter Property="CornerRadius" Value="4"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Theme.Brush.Control.Border}"/>
                <Setter Property="Background" Value="{DynamicResource Theme.Brush.Content.Back}"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>

            <Style x:Key="HotKey" TargetType="TextBlock">
                <Setter Property="Margin" Value="4"/>
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="{DynamicResource Theme.Brush.Accent}"/>
                
            </Style>

            <Style x:Key="HotKeyDesc" TargetType="TextBlock">
                <Setter Property="Margin" Value="4 4 0 0"/>
                <!--<Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="{DynamicResource Theme.Brush.Accent}"/>-->
            </Style>

            <Style x:Key="HotKeyBorder" TargetType="{x:Type ctrl:ClipBorder}">
                <Setter Property="Margin" Value="2" />
                <Setter Property="Background" Value="{DynamicResource Theme.Brush.MenuBar.Back}" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="{DynamicResource Theme.Brush.Control.Border}"/>
                <Setter Property="Padding" Value="2 0 2 0"/>
            </Style>
            
            
            <Style x:Key="EmptyColumnListStyle"
               TargetType="ListBox"
               BasedOn="{StaticResource {x:Type ListBox}}">
                <Style.Triggers>
                    <!-- Use ListBox.HasItems instead of Binding -->
                    <Trigger Property="HasItems" Value="False">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid >
                                        <Border Background="{DynamicResource Theme.Brush.Content.Back}">
                                            <Grid>
                                            <Image Source="{DynamicResource querybuilder_dragDrawingImage}" Margin="20" MaxWidth="140"/>
                                                <TextBlock Margin="-30 25 0 0" 
                                                           Foreground="{DynamicResource Theme.Brush.Muted.Fore}"
                                                           VerticalAlignment="Center" 
                                                           HorizontalAlignment="Center" FontSize="9">Drag or use <Hyperlink>Hotkeys</Hyperlink></TextBlock>
                                            </Grid>
                                            <Border.ToolTip>
                                                <ctrl:ClipBorder>
                                                    <Grid Margin="8">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <TextBlock Text="Keyboard Shortcuts" Grid.ColumnSpan="2" FontWeight="Bold"/>
                                                        <TextBlock 
                                                            Grid.ColumnSpan="2"
                                                            Grid.Row="1"
                                                            FontStyle="Italic"
                                                            TextWrapping="Wrap"
                                                            Margin="0 4"
                                                            Text="When an item is selected in the metadata pane you can use the following keys to add that item to the query builder" />
                                                        <ctrl:ClipBorder Grid.Row="2" Style="{StaticResource HotKeyBorder}" >
                                                            <TextBlock Text="C" 
                                                                   Style="{StaticResource HotKey}"
                                                                   />
                                                        </ctrl:ClipBorder>
                                                        <TextBlock 
                                                            Grid.Row="2"
                                                            Grid.Column="1"
                                                            Style="{StaticResource HotKeyDesc}"
                                                            Text="Add to Columns / Measures" />

                                                        <ctrl:ClipBorder Grid.Row="3" Style="{StaticResource HotKeyBorder}">
                                                            <TextBlock Text="F" 
                                                                   Style="{StaticResource HotKey}"
                                                                   />
                                                        </ctrl:ClipBorder>
                                                        <TextBlock 
                                                            Grid.Row="3"
                                                            Grid.Column="1"
                                                            Style="{StaticResource HotKeyDesc}"
                                                            Text="Add to Filters" />

                                                        <ctrl:ClipBorder Grid.Row="4" Style="{StaticResource HotKeyBorder}">
                                                            <TextBlock Text="B" 
                                                                   Style="{StaticResource HotKey}"/>
                                                        </ctrl:ClipBorder>
                                                        <TextBlock 
                                                            Grid.Row="4"
                                                            Grid.Column="1"
                                                            Style="{StaticResource HotKeyDesc}"
                                                            Text="Add to both Filters and Columns / Measures" />
                                                    </Grid>
                                                </ctrl:ClipBorder>
                                            </Border.ToolTip>
                                            <!--<StackPanel Orientation="Vertical">
                                            <TextBlock 
                                               TextWrapping="Wrap" 
                                               Padding="5 10 5 0"
                                               FontWeight ="Bold"
                                               FontSize="24"
                                               Margin="0"
                                               Foreground="LightGray"
                                               TextAlignment="Center">Drag output Columns / Measures Here</TextBlock>
                                                <TextBlock 
                                                    TextWrapping="Wrap"
                                                    Margin="5 0"
                                                    Foreground="LightGray" TextDecorations="Underline" TextAlignment="Center"><Hyperlink NavigateUri="https://daxstudio.org/documentation/features/query-builder/#keyboard-shortcuts" attachedProperties:HyperlinkExtensions.IsExternal="true">Click here for help on keyboard shortcuts</Hyperlink></TextBlock>
                                        </StackPanel>-->
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="EmptyFilterListStyle"
               TargetType="ListBox"
               BasedOn="{StaticResource {x:Type ListBox}}">
                <Style.Triggers>
                    <!-- Use ListBox.HasItems instead of Binding -->
                    <Trigger Property="HasItems" Value="False">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border  BorderThickness="0.5" >
                                        <!--Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>-->
                                        <StackPanel Orientation="Vertical" >
                                            <TextBlock  
                                               TextWrapping="Wrap" 
                                               Padding="5 10 5 0"
                                               FontWeight ="Bold"
                                               FontSize="24"
                                               Foreground="LightGray"
                                               TextAlignment="Center">Drag Filter Columns Here</TextBlock>
                                            <TextBlock Foreground="LightGray" 
                                                       TextDecorations="Underline" 
                                                       TextWrapping="Wrap"
                                                       Margin="5 0"
                                                       TextAlignment="Center"><Hyperlink NavigateUri="https://daxstudio.org/documentation/features/query-builder/#keyboard-shortcuts" attachedProperties:HyperlinkExtensions.IsExternal="true">Click here for help on keyboard shortcuts</Hyperlink>
                                            </TextBlock>
                                            
                                        </StackPanel>
                                            <!-- added this border so that the drop target works -->
                                            <!--<Border Grid.Row="1" Background="White" />-->
                                        <!--</Grid>-->
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DefaultListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="{DynamicResource Theme.Brush.Alternate.Back}" />
                <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
                <!--<Setter Property="Padding" Value="{StaticResource ListBoxItemPadding}" />-->
                <Setter Property="Padding" Value="2"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
                <Setter Property="primitives:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <ctrl:ClipBorder
                                CornerRadius="4"
                                Margin="4 2"
                                x:Name="LayoutRoot"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource Theme.Brush.Control.Border}"
                                SnapsToDevicePixels="True">
                                <Grid>
                                    <Rectangle
                                        x:Name="PressedBackground"
                                        Fill="Transparent"
                                        primitives:FocusVisualHelper.IsTemplateFocusTarget="True" />
                                    <ContentPresenter
                                        x:Name="ContentPresenter"
                                        TextElement.FontWeight="Normal"
                                        TextElement.FontSize="{DynamicResource ControlContentThemeFontSize}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ctrl:ClipBorder>
                            <!--<ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
                                    <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                                </Trigger>
                                --><!-- Selected --><!--
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="IsMouseOver" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListAccentMediumLowBrush}" />
                                    <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                                </MultiTrigger>
                                --><!-- SelectedUnfocused --><!--
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="IsMouseOver" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListAccentMediumLowBrush}" />
                                    <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                                </MultiTrigger>
                                --><!-- SelectedPointerOver --><!--
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListAccentLowBrush}" />
                                    <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ListBoxItem" BasedOn="{StaticResource DefaultListBoxItemStyle}" />

            <conv:ResourceLookupConverter x:Key="SortIcons">
                <ResourceDictionary>
                    <sys:String x:Key="ASC" >SortAmountAsc</sys:String>
                    <sys:String x:Key="DESC">SortAmountDesc</sys:String>
                    <sys:String x:Key="None">Ban</sys:String>
                </ResourceDictionary>
            </conv:ResourceLookupConverter>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/ToggleSwitchSmall.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/Styles/ModernWpf.Medium.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/DaxStudioResources.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/ExpanderTemplates.xaml" />
                <res:DesignTimeResourceDictionary DesignTimeSource="pack://application:,,,/DaxStudio.UI;Component/Theme/Light.DaxStudio.Colors.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/ModernWpf;component/DensityStyles/Compact.xaml" />
                <ui:IntellisenseResources/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ctrl:ZoomableUserControl.Resources>
    
    <ctrl:ClipBorder Background="{DynamicResource Theme.Brush.MenuBar.Back}">
    <Grid attachedProperties:GridSplitterController.Watch="{Binding ElementName=SortSplitter}"
          attachedProperties:GridSplitterController.HeightRatio="0.5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="3*" MinHeight="100"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="2*" MinHeight="100"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="1"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Columns / Measures" TextTrimming="CharacterEllipsis" Margin="8,8,4,0" Foreground="{DynamicResource Theme.Brush.Default.Fore}" />
            <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="0 4 8 0">

                <!-- ToolTip="Create a new measure for this query" -->
                <Button x:Name="AddNewMeasure" Grid.Column="1" MaxWidth="80"  Padding="4" Background="{DynamicResource Theme.Brush.MenuBar.Back}"
                    >
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource new_measure_smallDrawingImage}"/>
                        <TextBlock>New</TextBlock>
                    </StackPanel>
                    <Button.ToolTip>
                        <Fluent:ScreenTip Title="Add New Measure" 
                                          Text="Adds a custom measure to the Query Builder"
                                          DisableReason="You must be connected to a data model"></Fluent:ScreenTip>
                    </Button.ToolTip>
                </Button>
            </StackPanel>
        </Grid>
        <!--    
                    <ToggleButton x:Name="ShowColumns" 
                          Grid.Row="4" 
                          Grid.ColumnSpan="3" 
                          Margin="0 5 0 0" 
                          Padding="3"
                          Template="{StaticResource ExpanderButtonTemplate}"
                          Background="Transparent" 
                          BorderThickness="0"
                          ToolTip="Click to Expand/Collapse"
                          >Columns / Measures</ToggleButton>
        -->
            <ctrl:ClipBorder
                Grid.Row="1"
                 Grid.ColumnSpan="3"
                Margin="8 8 8 0"
                >
        <ListBox Name="Columns" ItemsSource="{Binding Columns.Items}" 
                 SelectedItem="{Binding SelectedColumn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 dd:DragDrop.IsDropTarget="True" 
                 dd:DragDrop.IsDragSource="True"
                 dd:DragDrop.UseDefaultDragAdorner="True"
                 dd:DragDrop.DropTargetAdornerBrush="Coral"
                 dd:DragDrop.ShowAlwaysDropTargetAdorner="True"
                 dd:DragDrop.DropHandler="{Binding Columns.DropHandler}"
                 HorizontalContentAlignment="Stretch"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 
                 Background="{DynamicResource Theme.Brush.Content.Back}"
                 Style="{StaticResource EmptyColumnListStyle}">
                    <!--<ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">

                        </Style>
                    </ListBox.ItemContainerStyle>-->
            <ListBox.ItemTemplate>
                <DataTemplate>
                            <ctrl:ClipBorder Background="{DynamicResource Theme.Brush.Alternate.Back}" Margin="1">
                    <Grid Tag="{Binding DataContext, ElementName=Columns}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.ContextMenu>
                            <!-- cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" -->
                            <ContextMenu Name="cm" >
                                <MenuItem Header="Duplicate Measure" cal:Message.Attach="DuplicateMeasure()" IsEnabled="{Binding Converter={StaticResource CanDuplicateMeasureConverter}}"></MenuItem>
                            </ContextMenu>
                        </Grid.ContextMenu>
                        
                        <Image  Margin="2,1,3,1" attachedProperties:ImageBindingHelper.SourceResourceKey="{Binding ImageResource}" Grid.Column="0"/>
                                        
                        
                        <TextBlock Text="{Binding Caption}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" ToolTip="{Binding DaxName}" Margin="5 1 1 1" Grid.Column="1"/>

                                    <StackPanel Orientation="Horizontal" Grid.Column="2">
                                        <Image Source="{DynamicResource sort_ascDrawingImage}" 
                                               Visibility="{Binding Converter={StaticResource BoolToVisibility},Path=IsSortBy}"
                                               ToolTip="This column was added as it is a SortBy for one of the other columns"/>
                                        <Image Source="{DynamicResource measure_accentDrawingImage}"
                                               Visibility="{Binding ObjectType, Converter={StaticResource IsMeasureToVisibilityConverter}}"/>
                                    </StackPanel>
                        <!-- Edit Controls -->
                        <StackPanel Orientation="Horizontal" Grid.Column="3">
                            
                                        <Button Padding="1" Background="{DynamicResource Theme.Brush.Alternate.Back}"
                                                Visibility="{Binding ObjectType, Converter={StaticResource IsMeasureToVisibilityConverter}}"
                                                ToolTip="Edit Measure Expression"
                                                cal:Action.TargetWithoutContext="{Binding Path=DataContext.Columns, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                cal:Message.Attach="[Event Click] = [Action EditMeasure($dataContext)]">
                                            <Image Source="{DynamicResource editDrawingImage}"/>
                                        </Button>

                                        <Button Padding="1" Background="{DynamicResource Theme.Brush.Alternate.Back}"
                                                ToolTip="Remove from query"
                                                cal:Action.TargetWithoutContext="{Binding Path=DataContext.Columns, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                cal:Message.Attach="[Event Click] = [Action Remove($dataContext)]">
                                            <Image Source="{DynamicResource closeDrawingImage}"/>
                                        </Button>
                                    </StackPanel>

                    </Grid>
                            </ctrl:ClipBorder>
                        </DataTemplate>
            </ListBox.ItemTemplate>

        </ListBox>
            </ctrl:ClipBorder>

            <GridSplitter Grid.Row="2" HorizontalAlignment="Stretch" ResizeDirection="Rows" VerticalAlignment="Top"
                          ShowsPreview="True" Grid.ColumnSpan="3"
                          Background="Transparent"
                          Height="4" ResizeBehavior="PreviousAndNext"/>
        <TextBlock Grid.Row="2" Text="Filters" Margin="8,8,8,8"  Grid.ColumnSpan="3" Foreground="{DynamicResource Theme.Brush.Default.Fore}"/>

        <ctrl:ClipBorder
                Grid.ColumnSpan="3"
                Grid.Row="3" 
                Margin="8 0 8 0"
                >
        <ListBox Name="Filters"
                 ItemsSource="{Binding Filters.Items}" 
                 dd:DragDrop.IsDropTarget="True" 
                 dd:DragDrop.IsDragSource="True"
                 dd:DragDrop.UseDefaultDragAdorner="True"
                 dd:DragDrop.DropTargetAdornerBrush="Coral"
                 dd:DragDrop.ShowAlwaysDropTargetAdorner="True"
                 dd:DragDrop.DropHandler="{Binding Filters.DropHandler}"
                 Background="{DynamicResource Theme.Brush.Content.Back}"
                 HorizontalContentAlignment="Stretch"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 Style="{StaticResource EmptyColumnListStyle}"
                 >
            <ListBox.ItemTemplate>
                <DataTemplate>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBlock 
                                       Text="{Binding Caption}"
                   
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="NoWrap"
                                       HorizontalAlignment="Left"
                                       Margin="4,0,5,0">
                            <TextBlock.ToolTip>
                                <TextBlock Text="{Binding TabularObject.DaxName}"/>
                            </TextBlock.ToolTip>
                            </TextBlock>
                                <Button Grid.Column="1" Padding="1" Background="{DynamicResource Theme.Brush.Alternate.Back}"
                                                ToolTip="Remove from query"
                                                cal:Action.TargetWithoutContext="{Binding Path=DataContext.Filters, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                cal:Message.Attach="[Event Click] = [Action Remove($dataContext)]">
                                    <Image Source="{DynamicResource closeDrawingImage}"/>
                                </Button>

                                <WrapPanel  Grid.ColumnSpan="2" Orientation="Horizontal" Grid.Row="1" >
                            <!-- The stack panel prevents the combobox from expanding vertically when using an IN filter -->
                            <StackPanel>
                                <ComboBox Grid.Row="2" 
                                      Grid.ColumnSpan="2" 
                                      x:Name="FilterType" ItemsSource="{Binding FilterTypes}" 
                                      SelectedItem="{Binding FilterType}"
                                      Margin="3">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource enumDescriptionConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                            <WrapPanel Orientation="Horizontal">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>

                                </Grid.ColumnDefinitions>

                                <TextBox 
                                     x:Name="FilterValue" 
                                     Text="{Binding FilterValue,UpdateSourceTrigger=PropertyChanged}" 
                                     Visibility="{Binding ShowFilterValue, Converter={StaticResource BoolToVisibility}}" 
                                     AcceptsReturn="{Binding FilterType, Converter={StaticResource IsMultiLineFilterTypeConverter}}"
                                     VerticalScrollBarVisibility="Auto"
                                     Height="{Binding FilterType, Converter={StaticResource FilterValueHeightConverter}, ConverterParameter='100,18'}"
                                    ui:ControlHelper.PlaceholderText="Value 1"
                                     MinWidth="120"
                                     Margin="3,3,3,3"
                                     >
                                    <TextBox.Style>
                                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding FilterValueIsParameter}" Value="true">
                                                    <Setter Property="TextBox.Padding" Value="16 2 0 0"></Setter>
                                                    <Setter Property="TextBox.Foreground" Value="HotPink"/>

                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <ToggleButton x:Name="FilterValueIsParameter" 
                                              Visibility="{Binding FilterValueIsParameter,Converter={StaticResource BoolToVisibility}}" 
                                              IsChecked="{Binding FilterValueIsParameter}" 
                                              Foreground="HotPink" Padding="0" Width="14"
                                              Margin="6 0 0 0"
                                              HorizontalAlignment="Left" Height="18"
                                              
                                              ToolTip="This value is a parameter, click here to turn it back to a normal text filter">
                                                <TextBlock>@</TextBlock>
                                </ToggleButton>
                                <Image Source="{DynamicResource failDrawingImage}"
                                                 Width="14"
                                                 Grid.Column="1"
                                                 Visibility="{Binding FilterValueIsValid, Converter={StaticResource BoolToNotVisibleConverter}}"
                                                 ToolTip="{Binding FilterValueValidationMessage}"/>
                            </Grid>
                            
                                <StackPanel Orientation="Horizontal">



                                </StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox 
                                        x:Name="FilterValue2"
                                        Text="{Binding FilterValue2, UpdateSourceTrigger=PropertyChanged}"
                                        Visibility="{Binding ShowFilterValue2, Converter={StaticResource BoolToVisibility}}"
                                        MinWidth="120"
                                        ui:ControlHelper.PlaceholderText="Value 2"
                                        Grid.Column="0"
                                        Margin="3">
                                        <TextBox.Style>
                                            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                                        <Setter Property="Background" Value="{DynamicResource Theme.Brush.Content.Back}"/>
                                                        <Style.Triggers>
                                                    <DataTrigger Binding="{Binding FilterValue2IsParameter}" Value="true">
                                                        <Setter Property="TextBox.Padding" Value="13 0 0 0"></Setter>
                                                        <Setter Property="TextBox.Foreground" Value="HotPink"/>

                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <ToggleButton x:Name="FilterValue2IsParameter" 
                                              Visibility="{Binding FilterValue2IsParameter,Converter={StaticResource BoolToVisibility}}" 
                                              IsChecked="{Binding FilterValue2IsParameter}" 
                                              Foreground="HotPink" Padding="0" Width="14"
                                              HorizontalAlignment="Left" Height="18"
                                              Margin="3,0"
                                              ToolTip="This value is a parameter, click here to turn it back to a normal text filter">@</ToggleButton>
                                    <Image Source="{DynamicResource failDrawingImage}"
                                                 Width="14"
                                                     Grid.Column="1"
                                                 Visibility="{Binding FilterValue2IsValid, Converter={StaticResource BoolToNotVisibleConverter}}"
                                                 ToolTip="{Binding FilterValue2ValidationMessage}"/>
                                </Grid>
                            </WrapPanel>
                        </WrapPanel>
                    </Grid>
                    <!--</Border>-->
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
            </ctrl:ClipBorder>

            <GridSplitter x:Name="SortSplitter" Grid.Row="4" HorizontalAlignment="Stretch" ResizeDirection="Rows" VerticalAlignment="Top"
                          Background="Transparent"
                      ShowsPreview="True" Grid.ColumnSpan="3"
                      Visibility="{Binding ElementName=SortOptions, Path=IsChecked, Converter={StaticResource BoolToHiddenConverter}}"
                      Height="5" ResizeBehavior="PreviousAndNext"/>

        <ToggleButton x:Name="SortOptions" 
                          Grid.Row="4" 
                          Grid.ColumnSpan="3" 
                          Margin="8 4 8 0" 
                          Padding="3"
                          Template="{StaticResource ExpanderButtonTemplate}"
                          Background="Transparent" 
                          BorderThickness="0"
                          ToolTip="Click to Expand/Collapse"
                          >Order By</ToggleButton>


        <!--<Expander Header="Sorting" Grid.Row="4" Grid.ColumnSpan="3" IsExpanded="False">-->
        <!-- SelectedItem="{Binding SelectedColumn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->
            <ctrl:ClipBorder
                     Grid.Row="5"
                     Grid.ColumnSpan="3"
                Margin="8 4 8 4"
                >
        <ListBox Name="OrderBy" ItemsSource="{Binding OrderBy}" 
                 Background="{DynamicResource Theme.Brush.Content.Back}"
                 Visibility="{Binding ElementName=SortOptions, Path=IsChecked,Converter={StaticResource BoolToVisibility}}"
                 dd:DragDrop.IsDropTarget="False" 
                 dd:DragDrop.IsDragSource="False"
                 dd:DragDrop.UseDefaultDragAdorner="True"
                 dd:DragDrop.DropTargetAdornerBrush="Coral"
                 dd:DragDrop.ShowAlwaysDropTargetAdorner="True"
                 HorizontalContentAlignment="Stretch"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 MinHeight="{Binding ElementName=SortOptions, Path=IsChecked, Converter={StaticResource BoolToDoubleConverter},ConverterParameter=50}"
                 >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Tag="{Binding DataContext, ElementName=Columns}" 
                              cal:Action.TargetWithoutContext="{Binding Path=DataContext.Columns, RelativeSource={RelativeSource AncestorType=UserControl}}"
                              cal:Message.Attach="[Event MouseLeftButtonUp] = [Action ChangeSortDirection($dataContext)]"
                              >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ui:ToggleSwitch x:Name="IsSortDirectionEnabled" IsOn="{Binding IsSortDirectionEnabled}" OnContent="" OffContent="" Width="40"  Margin="0" Padding="0" />
                        <TextBlock Text="{Binding Caption}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" ToolTip="{Binding SortDescription}" Grid.Column="1"/>
                        <Image Grid.Column="2" Margin="2,1,3,1" attachedProperties:ImageBindingHelper.SourceResourceKey="{Binding SortDirectionImageResource}" />
                              
                    </Grid>

                </DataTemplate>
            </ListBox.ItemTemplate>

        </ListBox>
            </ctrl:ClipBorder>
        
            <!--</Expander>-->


        <StackPanel Orientation="Horizontal" Grid.Row="6" Grid.ColumnSpan="3"
                    HorizontalAlignment="Right">
            
            <ui:ToggleSwitch x:Name="AutoGenerate" OnContent="Auto Update" OffContent="Auto Update" Width="120" />

            <Button x:Name="SendTextToEditor" Margin="8 8 0 8 " Padding="4" Style="{StaticResource AccentButtonStyle}" Foreground="{DynamicResource Theme.Brush.Content.Back}">
                <Button.ToolTip>
                    <Fluent:ScreenTip Title="Send Text to Editor"
                                      Text="Sends the text for the query to the editor window"
                                      DisableReason="You must be connected to a data model to use the Query Builder"/>
                </Button.ToolTip>
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Update"/>
                </StackPanel>

            </Button>
            
            <Button x:Name="Clear" Margin="8" Padding="4">Reset</Button>

        </StackPanel>
    </Grid>
        </ctrl:ClipBorder>
</ctrl:ZoomableUserControl>
