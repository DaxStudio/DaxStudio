<ctrl:ZoomableUserControl x:Class="DaxStudio.UI.Views.QueryBuilderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                          
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:ctrl="clr-namespace:DaxStudio.UI.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
             xmlns:conv="clr-namespace:DaxStudio.UI.Converters"
             xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
             xmlns:local="clr-namespace:DaxStudio.UI.Views"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:attachedProperties="clr-namespace:DaxStudio.UI.AttachedProperties" 
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" 
             IsEnabled="{Binding IsEnabled}">
    <ctrl:ZoomableUserControl.Resources>
        <ResourceDictionary>
            <conv:EnumDescriptionConverter x:Key="enumDescriptionConverter"/>
            <conv:MinWidthOrientationConverter x:Key="MinWidthOrientationConverter" />
            <conv:IsMeasureVisibilityConverter x:Key="IsMeasureToVisibilityConverter"/>
            <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
            <conv:BoolToNotVisibleConverter x:Key="BoolToNotVisibleConverter"/>
            <conv:FilterValueHeightConverter x:Key="FilterValueHeightConverter" />
            <conv:IsMultiLineFilterTypeConverter x:Key="IsMultiLineFilterTypeConverter"/>
            <conv:CanDuplicateMeasureConverter x:Key="CanDuplicateMeasureConverter"/>
            <conv:BoolToDoubleConverter x:Key="BoolToDoubleConverter"/>
            <conv:BoolToThicknessConverter x:Key="BoolToThicknessConverter"/>
            <conv:BoolToGridRowHeightConverter x:Key="BoolToGridRowHeightConverter"/>
            <conv:BoolToHiddenConverter x:Key="BoolToHiddenConverter"/>

            <!--<Style x:Key="showRow" TargetType="{x:Type RowDefinition}">
                <Style.Setters>
                    <Setter Property="Height" Value="*"/>
                </Style.Setters>
                <Style.Triggers>
                    <DataTrigger Binding="{ShowSortOptions}" Value="False">
                        <DataTrigger.Setters>
                            <Setter Property="Height" Value="0"/>
                            <Setter Property="MaxHeight" Value="0"/>
                        </DataTrigger.Setters>
                    </DataTrigger>
                </Style.Triggers>
            </Style>-->

            <Style x:Key="OrderByButton" TargetType="{x:Type fa:ImageAwesome}">
                <Setter Property="Width" Value="12"/>
                <Setter Property="Height" Value="12"/>
                <Setter Property="Foreground" Value="Gray"/>
                <Setter Property="Margin" Value="0,0,5,0"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="Blue"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="EditButton" TargetType="{x:Type fa:ImageAwesome}">
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="Foreground" Value="Gray"/>
                    <Setter Property="Margin" Value="0,0,5,0"/>
                    <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="Green"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="RemoveButton" TargetType="{x:Type fa:ImageAwesome}">
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="10"/>
                    <Setter Property="Foreground" Value="Gray"/>
                    <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="Red"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="EmptyColumnListStyle"
               TargetType="ListBox"
               BasedOn="{StaticResource {x:Type ListBox}}">
                <Style.Triggers>
                    <!-- Use ListBox.HasItems instead of Binding -->
                    <Trigger Property="HasItems" Value="False">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border BorderBrush="Gray" BorderThickness="0.5" Background="White">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock 
                                               TextWrapping="Wrap" 
                                               Padding="5 10 5 0"
                                               FontWeight ="Bold"
                                               FontSize="24"
                                               Margin="0"
                                               Foreground="LightGray"
                                               TextAlignment="Center">Drag output Columns / Measures Here</TextBlock>
                                                <TextBlock 
                                                    TextWrapping="Wrap"
                                                    Margin="5 0"
                                                    Foreground="LightGray" TextDecorations="Underline" TextAlignment="Center"><Hyperlink NavigateUri="https://daxstudio.org/documentation/features/query-builder/#keyboard-shortcuts" attachedProperties:HyperlinkExtensions.IsExternal="true">Click here for help on keyboard shortcuts</Hyperlink></TextBlock>
                                        </StackPanel>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="EmptyFilterListStyle"
               TargetType="ListBox"
               BasedOn="{StaticResource {x:Type ListBox}}">
                <Style.Triggers>
                    <!-- Use ListBox.HasItems instead of Binding -->
                    <Trigger Property="HasItems" Value="False">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border BorderBrush="Gray" BorderThickness="0.5" Background="White">
                                        <!--Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>-->
                                        <StackPanel Orientation="Vertical" >
                                            <TextBlock  
                                               TextWrapping="Wrap" 
                                               Padding="5 10 5 0"
                                               FontWeight ="Bold"
                                               FontSize="24"
                                               Foreground="LightGray"
                                               TextAlignment="Center">Drag Filter Columns Here</TextBlock>
                                            <TextBlock Foreground="LightGray" 
                                                       TextDecorations="Underline" 
                                                       TextWrapping="Wrap"
                                                       Margin="5 0"
                                                       TextAlignment="Center"><Hyperlink NavigateUri="https://daxstudio.org/documentation/features/query-builder/#keyboard-shortcuts" attachedProperties:HyperlinkExtensions.IsExternal="true">Click here for help on keyboard shortcuts</Hyperlink>
                                            </TextBlock>
                                            
                                        </StackPanel>
                                            <!-- added this border so that the drop target works -->
                                            <!--<Border Grid.Row="1" Background="White" />-->
                                        <!--</Grid>-->
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <!--<conv:ResourceLookupConverter x:Key="SortIcons">
                <ResourceDictionary>
                    <fa:ImageAwesome x:Key="ASC" Icon="SortAlphaAsc"/>
                    <fa:ImageAwesome x:Key="DESC" Icon="SortAlphaDesc"/>
                    <fa:ImageAwesome x:Key="None" Icon="MinusCircle"/>
                </ResourceDictionary>
            </conv:ResourceLookupConverter>-->
            <conv:ResourceLookupConverter x:Key="SortIcons">
                <ResourceDictionary>
                    <sys:String x:Key="ASC" >SortAmountAsc</sys:String>
                    <sys:String x:Key="DESC">SortAmountDesc</sys:String>
                    <sys:String x:Key="None">Ban</sys:String>
                </ResourceDictionary>
            </conv:ResourceLookupConverter>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/MetadataIcons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/DaxStudioResources.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/ExpanderTemplates.xaml" />
                <ResourceDictionary Source="pack://application:,,,/DaxStudio.UI;Component/Resources/IconResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ctrl:ZoomableUserControl.Resources>
    <Grid attachedProperties:GridSplitterController.Watch="{Binding ElementName=SortSplitter}"
          attachedProperties:GridSplitterController.HeightRatio="0.5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="3*" MinHeight="100"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="2*" MinHeight="100"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="1"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Columns/Measures" TextTrimming="CharacterEllipsis" Margin="5,0,0,0" FontSize="14"  />
            <StackPanel Orientation="Horizontal" Grid.Column="1">
            <Button x:Name="Clear" Margin="0,0,5,0" Padding="2">
                <fa:FontAwesome Icon="Eraser" ToolTip="Clear Query Builder" Foreground="OrangeRed"/>
            </Button>
                <!-- ToolTip="Create a new measure for this query" -->
            <Button x:Name="AddNewMeasure" Grid.Column="1" MaxWidth="80" Margin="0,0,5,0" Padding="3,0"
                    >
                <StackPanel Orientation="Horizontal">
                    <fa:FontAwesome Icon="PlusSquare" Margin="2" Foreground="Green"/>
                    <TextBlock>New</TextBlock>
                </StackPanel>
                    <Button.ToolTip>
                        <Fluent:ScreenTip Title="Add New Measure" 
                                          Text="Adds a custom measure to the Query Builder"
                                          DisableReason="You must be connected to a data model"></Fluent:ScreenTip>
                    </Button.ToolTip>
            </Button>
            </StackPanel>
        </Grid>
        <!--                    -->
        <ListBox Name="Columns" ItemsSource="{Binding Columns.Items}" 
                 SelectedItem="{Binding SelectedColumn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 dd:DragDrop.IsDropTarget="True" 
                 dd:DragDrop.IsDragSource="True"
                 dd:DragDrop.UseDefaultDragAdorner="True"
                 dd:DragDrop.DropTargetAdornerBrush="Coral"
                 dd:DragDrop.ShowAlwaysDropTargetAdorner="True"
                 dd:DragDrop.DropHandler="{Binding Columns.DropHandler}"
                 HorizontalContentAlignment="Stretch"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 Margin="5"
                 Grid.Row="1"
                 Grid.ColumnSpan="3"
                 Style="{StaticResource EmptyColumnListStyle}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Tag="{Binding DataContext, ElementName=Columns}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                   <Grid.ContextMenu>
                            <!-- cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" -->
                       <ContextMenu Name="cm" >
                                <MenuItem Header="Duplicate Measure" cal:Message.Attach="DuplicateMeasure()" IsEnabled="{Binding Converter={StaticResource CanDuplicateMeasureConverter}}"></MenuItem>
                       </ContextMenu>
                   </Grid.ContextMenu>
                        <Grid>
                            <Image Source="{Binding MetadataImage,Converter={StaticResource MetadataIcons}}" Margin="2,1,5,1" Grid.Column="0" />
                            <fa:ImageAwesome Icon="Star" Width="10" Margin="7,12,0,0" Foreground="Gold" Visibility="{Binding Converter={StaticResource BoolToNotVisibleConverter},Path=IsModelItem}"/>
                            <fa:ImageAwesome Icon="SortAlphaAsc" Width="10" Margin="7,12,0,0" Foreground="MediumOrchid" Visibility="{Binding Converter={StaticResource BoolToVisibility},Path=IsSortBy}"/>
                        </Grid>
                        <TextBlock Text="{Binding Caption}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" ToolTip="{Binding DaxName}" Grid.Column="1"/>
   
                        <!-- Edit Controls -->
                        <StackPanel Orientation="Horizontal" Grid.Column="2">
                            <fa:ImageAwesome Icon="Pencil" 
                                         Style="{StaticResource EditButton}"
                                         Visibility="{Binding ObjectType, Converter={StaticResource IsMeasureToVisibilityConverter}}"
                                         ToolTip="Edit Measure Expression"
                                         cal:Action.TargetWithoutContext="{Binding Path=DataContext.Columns, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                         cal:Message.Attach="[Event MouseLeftButtonUp] = [Action EditMeasure($dataContext)]"/>
                            <fa:ImageAwesome Icon="TimesCircle" 
                                         ToolTip="Remove from query"
                                         Style="{StaticResource RemoveButton}"  
                                         cal:Action.TargetWithoutContext="{Binding Path=DataContext.Columns, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                         cal:Message.Attach="[Event MouseLeftButtonUp] = [Action Remove($dataContext)]"/>
                        </StackPanel>
               
                    </Grid>

                </DataTemplate>
            </ListBox.ItemTemplate>
            
        </ListBox>
        <GridSplitter Grid.Row="2" HorizontalAlignment="Stretch" ResizeDirection="Rows" VerticalAlignment="Top"
                      ShowsPreview="True" Grid.ColumnSpan="3"
                      Height="5" ResizeBehavior="PreviousAndNext"/>
        <TextBlock Grid.Row="2" Text="Filters" Margin="5,5,0,0" FontSize="14" Grid.ColumnSpan="3"/>
        
        <ListView Name="Filters"
                  Grid.ColumnSpan="3"
                 ItemsSource="{Binding Filters.Items}" 
                 dd:DragDrop.IsDropTarget="True" 
                 dd:DragDrop.IsDragSource="True"
                 dd:DragDrop.UseDefaultDragAdorner="True"
                 dd:DragDrop.DropTargetAdornerBrush="Coral"
                 dd:DragDrop.ShowAlwaysDropTargetAdorner="True"
                 dd:DragDrop.DropHandler="{Binding Filters.DropHandler}"
                 Grid.Row="3" 
                 Margin="5"
                 HorizontalContentAlignment="Stretch"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 Style="{StaticResource EmptyFilterListStyle}"
                 >
            <ListView.ItemTemplate>
                <DataTemplate>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBlock FontWeight="SemiBold" 
                                       Text="{Binding Caption}"
                                       Foreground="Blue"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="NoWrap"
                                       HorizontalAlignment="Left"
                                       Margin="0,0,5,0">
                                <TextBlock.ToolTip>
                                    <TextBlock Text="{Binding TabularObject.DaxName}"/>
                                </TextBlock.ToolTip>
                            </TextBlock>
                        <fa:ImageAwesome  
                                         Grid.Column="1"
                                         x:Name="RemoveFilter" 
                                         ToolTip="Remove Filter"  
                                         HorizontalAlignment="Right"
                                         cal:Message.Attach="[Event MouseLeftButtonUp] = [Action Remove($dataContext)]"
                                         cal:Action.TargetWithoutContext="{Binding Path=DataContext.Filters, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                         Icon="TimesCircle"
                                         Style="{StaticResource RemoveButton}">
                        </fa:ImageAwesome>

                        <WrapPanel  Grid.ColumnSpan="2" Orientation="Horizontal" Grid.Row="1" >
                            <!-- The stack panel prevents the combobox from expanding vertically when using an IN filter -->
                            <StackPanel>
                            <ComboBox Grid.Row="2" 
                                      Grid.ColumnSpan="2" 
                                      x:Name="FilterType" ItemsSource="{Binding FilterTypes}" 
                                      SelectedItem="{Binding FilterType}"
                                      Margin="3">
                                <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource enumDescriptionConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>

                                </Grid.ColumnDefinitions>

                                <TextBox 
                                     x:Name="FilterValue" 
                                     Text="{Binding FilterValue,UpdateSourceTrigger=PropertyChanged}" 
                                     Visibility="{Binding ShowFilterValue, Converter={StaticResource BoolToVisibility}}" 
                                     AcceptsReturn="{Binding FilterType, Converter={StaticResource IsMultiLineFilterTypeConverter}}"
                                     VerticalScrollBarVisibility="Auto"
                                     Height="{Binding FilterType, Converter={StaticResource FilterValueHeightConverter}, ConverterParameter='100,18'}"
                                    
                                     MinWidth="120"
                                     Margin="3,3,3,3"
                                     >
                                    <TextBox.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding FilterValueIsParameter}" Value="true">
                                                    <Setter Property="TextBox.Padding" Value="13 0 0 0"></Setter>
                                                    <Setter Property="TextBox.Foreground" Value="HotPink"/>
                                    
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <ToggleButton x:Name="FilterValueIsParameter" 
                                              Visibility="{Binding FilterValueIsParameter,Converter={StaticResource BoolToVisibility}}" 
                                              IsChecked="{Binding FilterValueIsParameter}" 
                                              Foreground="HotPink" Padding="0" Width="14"
                                              HorizontalAlignment="Left" Height="18"
                                              Margin="3,0"
                                              ToolTip="This value is a parameter, click here to turn it back to a normal text filter">@</ToggleButton>
                                <fa:ImageAwesome Icon="ExclamationTriangle" 
                                                 Width="14"
                                                 Grid.Column="1"
                                                 Foreground="OrangeRed" 
                                                 Visibility="{Binding FilterValueIsValid, Converter={StaticResource BoolToNotVisibleConverter}}"
                                                 ToolTip="{Binding FilterValueValidationMessage}"/>
                            </Grid>
                            <WrapPanel Orientation="Horizontal">
                                <StackPanel Orientation="Horizontal">

                                 
                                
                                </StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox 
                                        x:Name="FilterValue2"
                                        Text="{Binding FilterValue2, UpdateSourceTrigger=PropertyChanged}"
                                        Visibility="{Binding ShowFilterValue2, Converter={StaticResource BoolToVisibility}}"
                                        MinWidth="120"
                                        Grid.Column="0"
                                        Margin="3">
                                        <TextBox.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding FilterValue2IsParameter}" Value="true">
                                                        <Setter Property="TextBox.Padding" Value="13 0 0 0"></Setter>
                                                        <Setter Property="TextBox.Foreground" Value="HotPink"/>

                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <ToggleButton x:Name="FilterValue2IsParameter" 
                                              Visibility="{Binding FilterValue2IsParameter,Converter={StaticResource BoolToVisibility}}" 
                                              IsChecked="{Binding FilterValue2IsParameter}" 
                                              Foreground="HotPink" Padding="0" Width="14"
                                              HorizontalAlignment="Left" Height="18"
                                              Margin="3,0"
                                              ToolTip="This value is a parameter, click here to turn it back to a normal text filter">@</ToggleButton>
                                    <fa:ImageAwesome Icon="ExclamationTriangle" 
                                                 Width="14"
                                                 Foreground="OrangeRed" 
                                                     Grid.Column="1"
                                                 Visibility="{Binding FilterValue2IsValid, Converter={StaticResource BoolToNotVisibleConverter}}"
                                                 ToolTip="{Binding FilterValue2ValidationMessage}"/>
                                </Grid>
                            </WrapPanel>
                        </WrapPanel>
                    </Grid>
                    <!--</Border>-->
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        
        <GridSplitter x:Name="SortSplitter" Grid.Row="4" HorizontalAlignment="Stretch" ResizeDirection="Rows" VerticalAlignment="Top"
                      ShowsPreview="True" Grid.ColumnSpan="3"
                      Visibility="{Binding ElementName=SortOptions, Path=IsChecked, Converter={StaticResource BoolToHiddenConverter}}"
                      Height="5" ResizeBehavior="PreviousAndNext"/>

            <ToggleButton x:Name="SortOptions" 
                          Grid.Row="4" 
                          Grid.ColumnSpan="3" 
                          Margin="0 5 0 0" 
                          Padding="3"
                          Template="{StaticResource ExpanderButtonTemplate}"
                          Background="Transparent" 
                          BorderThickness="0"
                          ToolTip="Click to Expand/Collapse"
                          >Order By</ToggleButton>


        <!--<Expander Header="Sorting" Grid.Row="4" Grid.ColumnSpan="3" IsExpanded="False">-->
            <!-- SelectedItem="{Binding SelectedColumn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->
            <ListBox Name="OrderBy" ItemsSource="{Binding OrderBy}" 
                     Grid.Row="5"
                     Grid.ColumnSpan="3"
                 Visibility="{Binding ElementName=SortOptions, Path=IsChecked,Converter={StaticResource BoolToVisibility}}"
                 dd:DragDrop.IsDropTarget="False" 
                 dd:DragDrop.IsDragSource="False"
                 dd:DragDrop.UseDefaultDragAdorner="True"
                 dd:DragDrop.DropTargetAdornerBrush="Coral"
                 dd:DragDrop.ShowAlwaysDropTargetAdorner="True"
                 HorizontalContentAlignment="Stretch"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    MinHeight="{Binding ElementName=SortOptions, Path=IsChecked, Converter={StaticResource BoolToDoubleConverter},ConverterParameter=50}"
                 Margin="10,5">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Tag="{Binding DataContext, ElementName=Columns}" 
                              cal:Action.TargetWithoutContext="{Binding Path=DataContext.Columns, RelativeSource={RelativeSource AncestorType=UserControl}}"
                              cal:Message.Attach="[Event MouseLeftButtonUp] = [Action ChangeSortDirection($dataContext)]"
                              >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Grid>
                                <Image Source="{Binding MetadataImage,Converter={StaticResource MetadataIcons}}" Margin="2,1,5,1" Grid.Column="0" />
                            </Grid>
                            <TextBlock Text="{Binding Caption}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" ToolTip="{Binding SortDescription}" Grid.Column="1"/>

                            <!-- Edit Controls -->
                            <StackPanel Orientation="Horizontal" Grid.Column="2">
                                <fa:ImageAwesome Icon="{Binding SortDirection, Converter={StaticResource SortIcons}}" Style="{StaticResource OrderByButton}"

                                         />
                            </StackPanel>

                        </Grid>

                    </DataTemplate>
                </ListBox.ItemTemplate>

            </ListBox>
        <!--</Expander>-->
      
        
        <StackPanel Orientation="Horizontal" Grid.Row="6" Grid.ColumnSpan="3"
                    HorizontalAlignment="Right">
            <ToggleButton x:Name="AutoGenerate" VerticalAlignment="Top" Margin="5" IsEnabled="{Binding CanAutoGenerate}" >
                <ToggleButton.ToolTip>
                    <Fluent:ScreenTip Title="Auto Generate Query"
                                      Text="Updates the generated query in the editor window in real time"
                                      DisableReason="You must be connected to a data model to use the Query Builder"/>
                </ToggleButton.ToolTip>
                <fa:ImageAwesome Icon="Refresh"  Width="20" Height="20" />
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center" 
                                        x:Name="border" Padding="5,5,5,5" CornerRadius="3,3,3,3" 
                                        Background="Transparent" 
                                        BorderBrush="#66000000" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
                                        <fa:ImageAwesome x:Name="RefreshIcon" Icon="Refresh"  Width="20" Height="20" Foreground="Black" RenderTransformOrigin="0.5,0.5">
                                            <fa:ImageAwesome.RenderTransform>
                                                <RotateTransform Angle="0"/>
                                            </fa:ImageAwesome.RenderTransform>
                                        </fa:ImageAwesome>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="fa:ImageAwesome.Foreground" TargetName="RefreshIcon" Value="Gray"/>
                                            <Setter Property="Background" TargetName="border" Value="WhiteSmoke"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter Property="fa:ImageAwesome.Foreground" TargetName="RefreshIcon" Value="Green"/>
                                            <Setter Property="Background" TargetName="border" Value="AliceBlue"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                                        </Trigger>
                                       
                                            <Trigger Property="IsChecked"
                                                    Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="RefreshIcon"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            To="180"
                                                            Duration="0:0:0.5">
                                                            <DoubleAnimation.EasingFunction>
                                                                <PowerEase />
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="RefreshIcon"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            To="0"
                                                            Duration="0:0:0.3">
                                                            
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>
 
            </ToggleButton>
            
            <Button x:Name="SendTextToEditor" Margin="5" Padding="5,3">
                <Button.ToolTip>
                    <Fluent:ScreenTip Title="Send Text to Editor"
                                      Text="Sends the text for the query to the editor window"
                                      DisableReason="You must be connected to a data model to use the Query Builder"/>
                </Button.ToolTip>
                <StackPanel Orientation="Vertical">
                    <fa:FontAwesome Icon="Edit" 
                                    FontSize="32"
                                    Foreground="{StaticResource DaxStudioBrush}"
                                    Margin="5,2,5,0" />
                    <TextBlock Text="Edit Query"/>
                </StackPanel>
                
            </Button>
            <Button x:Name="RunQuery" Margin="5"  Padding="5,3">
                <Button.ToolTip>
                    <Fluent:ScreenTip Title="Run Query"
                                      Text="Executes a query based on the current content of the Query Builder"
                                      DisableReason="You must be connected to a data model to use the Query Builder"/>
                </Button.ToolTip>
                <StackPanel Orientation="Vertical">
                    <Image Source="{Binding Path=RunStyle.Icon,Converter={StaticResource RunIconsLarger}}"/>
                    <!--<fa:FontAwesome Icon="Play" 
                                    FontSize="32" 
                                    Foreground="{StaticResource RunGreenBrush}"
                                    Margin="5,2,5,0" />-->
                    <TextBlock Text="Run Query"/>
                </StackPanel>
            </Button>

        </StackPanel>
    </Grid>
</ctrl:ZoomableUserControl>
