<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:ui="http://schemas.modernwpf.com/2019"
    xmlns:local="clr-namespace:DaxStudio.Controls.DataGridFilter"
    xmlns:support="clr-namespace:DaxStudio.Controls.DataGridFilter.Support"
    xmlns:reskeys="clr-namespace:DaxStudio.Controls.DataGridFilter.Themes"
    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">
    
    <ResourceDictionary.MergedDictionaries>
        <ui:XamlControlsResources/>
    </ResourceDictionary.MergedDictionaries>
    
    
    <Style TargetType="{x:Type local:DataGridColumnFilter}">

        <Style.Resources>
            <support:EnumDisplayer Type="{x:Type support:FilterOperator}" x:Key="filterOperators">
                <support:EnumDisplayEntry EnumValue="Undefined" DisplayString=""/>
                <support:EnumDisplayEntry EnumValue="LessThan" DisplayString="&lt;"/>
                <support:EnumDisplayEntry EnumValue="GreaterThan" DisplayString="&gt;"/>
                <support:EnumDisplayEntry EnumValue="Equals" DisplayString="="/>    
                <support:EnumDisplayEntry EnumValue="Like" DisplayString="" ExcludeFromDisplay="True"/>
                <support:EnumDisplayEntry EnumValue="Contains" DisplayString="" ExcludeFromDisplay="True"/>
                <support:EnumDisplayEntry EnumValue="Between" DisplayString="" ExcludeFromDisplay="True"/>
                <support:EnumDisplayEntry EnumValue="LessThanOrEqual" DisplayString="&lt;="/>
                <support:EnumDisplayEntry EnumValue="GreaterThanOrEqual" DisplayString="&gt;="/>
            </support:EnumDisplayer>
            
            <support:CheckBoxValueConverter x:Key="checkBoxValueConverter" />
            <support:ComboBoxToQueryStringConverter x:Key="comboBoxToQueryStringConverter" />
            <support:DatePickerToQueryStringConverter x:Key="datePickerToQueryStringConverter" />
            <support:BooleanToHeightConverter x:Key="booleanToHeightConverter" />
            <support:FontSizeToHeightConverter x:Key="fontSizeToHeightConverter" />
            <support:VisibilityToWidthConverter x:Key="visibilityToWidthConverter" />
            <support:MyBooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
            <support:MyOppositeBooleanToVisibilityConverter x:Key="oppositeBooleanToVisibilityConverter" />
            <support:ClearFilterButtonVisibilityConverter x:Key="clearFilterButtonVisibilityConverter" />

            <Style TargetType="{x:Type support:DelayTextBox}">
                <Setter Property="Background" Value="AliceBlue" />
            </Style>


            <!-- CompactCombo Start-->

            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="Green"/>
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="Blue"/>
   
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>

            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>

            <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>

            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>

            
            <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="ClickMode" Value="Press"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Visibility="Collapsed">
                                    <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"  
                                          Stroke="{TemplateBinding Foreground}"
                                          HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ComboBox}},Path=SelectedIndex}" Value="0" >
                                    <Setter Property="Visibility" Value="Visible" TargetName="splitBorder"/>
                                </DataTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}" >
                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" MinWidth="20"/>
                        <ColumnDefinition  Width="0"/>
                    </Grid.ColumnDefinitions>
                    <Popup x:Name="PART_Popup" AllowsTransparency="false" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                        <theme:SystemDropShadowChrome x:Name="shadow"  MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                            <Border x:Name="dropDownBorder" Background="{TemplateBinding Background}" 
                                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
                                    BorderThickness="1"
                                    CornerRadius="4">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </theme:SystemDropShadowChrome>
                    </Popup>
                    <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}"  Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" Padding="1"/>
                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                        <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                    </Trigger>
                    <Trigger Property="HasItems" Value="false">
                        <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                    </Trigger>
                    
                    <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                        <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                        <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                    </Trigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>
            
            <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
            
            <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="MinHeight" Value="0"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                    </Grid.ColumnDefinitions>
                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                        <theme:SystemDropShadowChrome x:Name="shadow"  MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                            <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </theme:SystemDropShadowChrome>
                    </Popup>
                    <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}"  Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                    <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                        <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="true">
                        <Setter Property="Foreground" Value="Black"/>
                    </Trigger>
                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                        <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                    </Trigger>
                    <Trigger Property="HasItems" Value="false">
                        <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                    </Trigger>

                    <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                        <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                        <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style TargetType="{x:Type ComboBox}" >
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Padding" Value="6,3,5,3"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
                <Style.Triggers>
                    <Trigger Property="IsEditable" Value="true">
                        <Setter Property="IsTabStop" Value="false"/>
                        <Setter Property="Padding" Value="2"/>
                        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <!-- CompactCombo End-->

            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DataGridHeaderBackground}}" />
            </Style>

            <Style TargetType="{x:Type DatePicker}">
                <Setter Property="Background"  Value="{DynamicResource {x:Static reskeys:ResourceKeys.DataGridHeaderBackground}}" />
            </Style>

        </Style.Resources>
        
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Self}, Path=IsControlInitialized, Converter={StaticResource booleanToHeightConverter}}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DataGridColumnFilter}">
                    
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid Name="PART_FilterContainer"
                              
                              Visibility="{Binding Path=AssignedDataGridColumn.DoNotGenerateFilterControl, 
                                                   RelativeSource={RelativeSource AncestorType={x:Type local:DataGridColumnFilter}}, 
                                                   Converter={StaticResource oppositeBooleanToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!-- Clear Filter Button -->
                            <Button 
                                Name="PART_ClearFilterButton"
                                VerticalAlignment="Top" 
                                Height="{Binding 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                        Converter={StaticResource fontSizeToHeightConverter},
                                        Path=FontSize}"
                                ToolTip="Clear filter" 
                                Content="x"
                                Command="{Binding Path=(local:DataGridExtensions.ClearFilterCommand), RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"                                
                                Grid.Column="0" 
                                >

                                <Button.Visibility>
                                    <MultiBinding Converter="{StaticResource clearFilterButtonVisibilityConverter}">
                                        <Binding Path="IsLastFilterControl" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(local:DataGridExtensions.IsClearButtonVisible)" RelativeSource="{RelativeSource AncestorType={x:Type DataGrid}}"/>
                                    </MultiBinding>
                                </Button.Visibility>
                                
                            </Button>
                            <!-- Clear Filter Button -->
                            
                            <!-- Numeric and Text-->
                            <ComboBox 
                                Name="PART_ComboBoxFilterOperator"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                Visibility="Collapsed"
                                VerticalAlignment="Top"
                                Height="{Binding 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                        Converter={StaticResource fontSizeToHeightConverter},
                                        Path=FontSize}"                                
                                Grid.Column="1" 
                                ItemsSource="{Binding Source={StaticResource filterOperators},Path=DisplayNames, Mode=OneTime}"
  
                                SelectedItem="{Binding 
                                        RelativeSource={RelativeSource AncestorType={x:Type local:DataGridColumnFilter}}, 
                                        Path=FilterCurrentData.Operator,
                                        Mode=TwoWay,
                                        Converter={StaticResource filterOperators}}">
                            </ComboBox>
            
                            
                            <support:DelayTextBox
                                    x:Name="PART_TextBoxFilter"
                                    Visibility="Collapsed"
                                    VerticalAlignment="Top"
                                    VerticalContentAlignment="Center"
                                    MinWidth="55"
                                
                                    Style="{StaticResource DefaultTextBoxStyle}"
                                    Height="{Binding 
                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                            Converter={StaticResource fontSizeToHeightConverter},
                                            Path=FontSize}"                                
                                     Text="{Binding 
                                        RelativeSource={RelativeSource AncestorType={x:Type local:DataGridColumnFilter}}, 
                                        Path=FilterCurrentData.QueryString,
                                        Mode=TwoWay,
                                        UpdateSourceTrigger=Explicit}"
                                        Grid.Column="2" >
                                
                            </support:DelayTextBox>

                            <!-- Numeric -->
                            
                            <!-- List -->
                            <ComboBox 
                                Name="PART_ComboBoxFilter"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                Visibility="Collapsed"
                                IsTextSearchEnabled="True"
    
                                IsEditable="{Binding Path=AssignedDataGridColumn.UserCanEnterText, 
                                        RelativeSource={RelativeSource AncestorType={x:Type local:DataGridColumnFilter}}, 
                                        FallbackValue=False}"  
                                
                                IsReadOnly="False"
                                
                                Height="{Binding 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                        Converter={StaticResource fontSizeToHeightConverter},
                                        Path=FontSize}"                                

                                SelectedValue="{Binding 
                                        RelativeSource={RelativeSource AncestorType={x:Type local:DataGridColumnFilter}}, 
                                        Path=FilterCurrentData.QueryString,
                                        Mode=TwoWay,
                                        Converter={StaticResource comboBoxToQueryStringConverter}}"
                                    
                                Grid.Column="2">
                            </ComboBox>
                            <!-- List -->
                            
                            <!-- Boolean -->
                            <CheckBox 
                                Visibility="Collapsed"
                                VerticalAlignment="Center"
                                Height="Auto"  
                                
                                IsChecked="{Binding 
                                      RelativeSource={RelativeSource AncestorType={x:Type local:DataGridColumnFilter}}, 
                                      Path=FilterCurrentData.QueryString,
                                      Mode=TwoWay,
                                      UpdateSourceTrigger=PropertyChanged,
                                      Converter={StaticResource checkBoxValueConverter}}"
                                      IsThreeState="True"
                                      Name="PART_CheckBoxFilter" 
                                      ClickMode="Press" HorizontalAlignment="Center" Grid.Column="2"></CheckBox>
                            <!-- Boolean -->
                            
                            <!-- DateTime -->
                            <DatePicker
                                Visibility="Collapsed"
                                VerticalAlignment="Top"
                                
                                Height="{Binding 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                        Converter={StaticResource fontSizeToHeightConverter},
                                        Path=FontSize}"                                

                                SelectedDate="{Binding 
                                        RelativeSource={RelativeSource AncestorType={x:Type local:DataGridColumnFilter}}, 
                                        Path=FilterCurrentData.QueryString,
                                        Mode=TwoWay,
                                        UpdateSourceTrigger=PropertyChanged,
                                        Converter={StaticResource datePickerToQueryStringConverter}}"
                                    
                                Name="PART_DatePickerFilter" Grid.Column="2" />
                            <!-- DateTime -->
                            
                            <!-- NumericBetween -->
                            <Grid Grid.Column="2" 
                                  Visibility="Collapsed"
                                  Name="PART_GridTextFilterBetween"
                                  Width="{Binding RelativeSource={RelativeSource Self}, 
                                                  Path=Visibility, 
                                                  FallbackValue=0,
                                                  Converter={StaticResource visibilityToWidthConverter}}">                                  
                                
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Margin="1" Grid.Column="0" VerticalAlignment="Center" Height="Auto" >From:</TextBlock>
                                
                                <support:DelayTextBox 
                                        Grid.Column="1" 
                                        VerticalAlignment="Top"
                                        VerticalContentAlignment="Center"
                               
                                        Height="{Binding 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                        Converter={StaticResource fontSizeToHeightConverter},
                                        Path=FontSize}" 
                                    
                                        Text="{Binding 
                                            RelativeSource={RelativeSource AncestorType={x:Type local:DataGridColumnFilter}}, 
                                            Path=FilterCurrentData.QueryString,
                                            Mode=TwoWay,
                                            UpdateSourceTrigger=Explicit}">
                                </support:DelayTextBox>
                                
                                <TextBlock Margin="1" Grid.Column="2" VerticalAlignment="Center" Height="Auto" >To:</TextBlock>
                                
                                <support:DelayTextBox 
                                        Grid.Column="3" 
                                        VerticalAlignment="Top"
                                        VerticalContentAlignment="Center"
                                    
                                        Height="{Binding 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                        Converter={StaticResource fontSizeToHeightConverter},
                                        Path=FontSize}" 
                                    
                                        Text="{Binding 
                                           RelativeSource={RelativeSource AncestorType={x:Type local:DataGridColumnFilter}}, 
                                           Path=FilterCurrentData.QueryStringTo,
                                           Mode=TwoWay,
                                           UpdateSourceTrigger=Explicit}">
                                </support:DelayTextBox>
                            </Grid>
                            <!-- NumericBetween -->
                            
                            <!-- DateTimeBetween -->
                            <Grid Grid.Column="2" 
                                  Name="PART_GridDatePickerFilterBetween"
                                  Visibility="Collapsed"
                                  Width="{Binding RelativeSource={RelativeSource Self}, 
                                                  Path=Visibility, 
                                                  FallbackValue=0,
                                                  Converter={StaticResource visibilityToWidthConverter}}">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" VerticalAlignment="Center" Height="Auto" >From:</TextBlock>

                                <DatePicker
                                        Grid.Column="1" 
                                        VerticalAlignment="Top"
                                        VerticalContentAlignment="Center"
                                
                                        Height="{Binding 
                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                                Converter={StaticResource fontSizeToHeightConverter},
                                                Path=FontSize}"                                

                                        SelectedDate="{Binding 
                                                RelativeSource={RelativeSource AncestorType={x:Type local:DataGridColumnFilter}}, 
                                                Path=FilterCurrentData.QueryString,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged,
                                                Converter={StaticResource datePickerToQueryStringConverter}}"/>

                                <TextBlock Grid.Column="2" VerticalAlignment="Center" Height="Auto" >To:</TextBlock>

                                <DatePicker
                                        Grid.Column="3" 
                                        VerticalAlignment="Top"
                                        VerticalContentAlignment="Center"
                                
                                        Height="{Binding 
                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                                Converter={StaticResource fontSizeToHeightConverter},
                                                Path=FontSize}"                                

                                        SelectedDate="{Binding 
                                                RelativeSource={RelativeSource AncestorType={x:Type local:DataGridColumnFilter}}, 
                                                Path=FilterCurrentData.QueryStringTo,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged,
                                                Converter={StaticResource datePickerToQueryStringConverter}}"/>

                            </Grid>
                            <!-- DateTimeBetween -->

                        </Grid>

                    </Border>
                    
                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsTextFilterControl" Value="true">
                            <Setter TargetName="PART_ComboBoxFilterOperator" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_ComboBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_CheckBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_DatePickerFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_GridTextFilterBetween" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_GridDatePickerFilterBetween" Property="Visibility" Value="Collapsed"/>
                            
                            <Setter TargetName="PART_TextBoxFilter" Property="Visibility" Value="Visible"/> 
                            
                        </Trigger>

                        <Trigger Property="IsNumericFilterControl" Value="true">
                            <Setter TargetName="PART_ComboBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_CheckBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_DatePickerFilter" Property="Visibility" Value="Collapsed"/>  
                            <Setter TargetName="PART_GridTextFilterBetween" Property="Visibility" Value="Collapsed"/> 
                            <Setter TargetName="PART_GridDatePickerFilterBetween" Property="Visibility" Value="Collapsed"/>

                            <Setter TargetName="PART_TextBoxFilter" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_ComboBoxFilterOperator" Property="Visibility" Value="Visible"/>
                        
                        </Trigger>

                        <Trigger Property="IsBooleanFilterControl" Value="true">
                            <Setter TargetName="PART_ComboBoxFilterOperator" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_ComboBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_TextBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_DatePickerFilter" Property="Visibility" Value="Collapsed"/>                            
                            <Setter TargetName="PART_GridTextFilterBetween" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_GridDatePickerFilterBetween" Property="Visibility" Value="Collapsed"/>
                            
                            <Setter TargetName="PART_CheckBoxFilter" Property="Visibility" Value="Visible"/>
                            
                        </Trigger>

                        <Trigger Property="IsListFilterControl" Value="true">
                            <Setter TargetName="PART_ComboBoxFilterOperator" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_CheckBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_TextBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_DatePickerFilter" Property="Visibility" Value="Collapsed"/>                            
                            <Setter TargetName="PART_GridTextFilterBetween" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_GridDatePickerFilterBetween" Property="Visibility" Value="Collapsed"/>
                            
                            <Setter TargetName="PART_ComboBoxFilter" Property="Visibility" Value="Visible"/>
                            
                        </Trigger>

                        <Trigger Property="IsDateTimeFilterControl" Value="true">
                            <Setter TargetName="PART_ComboBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_CheckBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_TextBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_GridTextFilterBetween" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_GridDatePickerFilterBetween" Property="Visibility" Value="Collapsed"/>

                            <Setter TargetName="PART_DatePickerFilter" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_ComboBoxFilterOperator" Property="Visibility" Value="Visible"/>
                        
                        </Trigger>

                        <Trigger Property="IsNumericBetweenFilterControl" Value="true">
                            <Setter TargetName="PART_ComboBoxFilterOperator" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_ComboBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_CheckBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_DatePickerFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_TextBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_GridDatePickerFilterBetween" Property="Visibility" Value="Collapsed"/>
                            
                            <Setter TargetName="PART_GridTextFilterBetween" Property="Visibility" Value="Visible"/>
                            
                        </Trigger>

                        <Trigger Property="IsDateTimeBetweenFilterControl" Value="true">
                            <Setter TargetName="PART_ComboBoxFilterOperator" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_ComboBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_CheckBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_DatePickerFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_TextBoxFilter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_GridTextFilterBetween" Property="Visibility" Value="Collapsed"/>
                            
                            <Setter TargetName="PART_GridDatePickerFilterBetween" Property="Visibility" Value="Visible"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
            
        </Setter>

    </Style>

    <Style TargetType="{x:Type local:DataGridComboBoxColumnWithBindingHack}">
        
    </Style>
    
    <!--            BasedOn="{StaticResource ResourceKey=MahApps.Styles.DataGridColumnHeader}" -->
    <Style x:Key="{ComponentResourceKey 
                   TypeInTargetAssembly={x:Type local:DataGridHeaderFilterControl}, 
                   ResourceId=DataGridHeaderFilterControlStyle}"
           TargetType="{x:Type DataGridColumnHeader}">
        
        <Style.Resources>
            <ResourceDictionary>
                <support:MyBooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
            </ResourceDictionary>
        </Style.Resources>

        <Setter Property="Padding" Value="6 4 0 4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <ControlTemplate.Resources>
                        <StreamGeometry x:Key="SortIconAscending">M 18.310547 10.126953 L 10.625 2.441406 L 10.625 20 L 9.375 20 L 9.375 2.441406 L 1.689453 10.126953 L 0.810547 9.248047 L 10 0.058594 L 19.189453 9.248047 Z</StreamGeometry>
                        <StreamGeometry x:Key="SortIconDescending">M 19.189453 10.751953 L 10 19.941406 L 0.810547 10.751953 L 1.689453 9.873047 L 9.375 17.558594 L 9.375 0 L 10.625 0 L 10.625 17.558594 L 18.310547 9.873047 Z</StreamGeometry>
                    </ControlTemplate.Resources>
                    <Grid x:Name="ColumnHeaderRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard options:Freeze="true">
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortStates">
                                <VisualState x:Name="Unsorted" />
                                <VisualState x:Name="SortAscending">
                                    <Storyboard options:Freeze="true">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortIconViewbox" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SortDescending">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortIconViewbox" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Data">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SortIconDescending}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <!--<Rectangle x:Name="Separator" Width="1" Fill="Black" HorizontalAlignment="Left"  Grid.Column="1" Grid.RowSpan="2" ></Rectangle>-->
                        <local:DataGridColumnFilter 
                            Margin="4 1 8 4" 
                            Grid.Column="0" 
                            Grid.ColumnSpan="2"
                            Grid.Row="1"
                            x:Name="dgColumnFilter"
                            Background="{DynamicResource {x:Static reskeys:ResourceKeys.DataGridHeaderBackground}}"
                            Foreground="{DynamicResource {x:Static reskeys:ResourceKeys.DataGridHeaderForeground}}"
                            FilterCurrentData ="{Binding 
                                RelativeSource={RelativeSource AncestorType={x:Type DataGridColumnHeader}}, 
                                Path=Tag,  
                                UpdateSourceTrigger=PropertyChanged,
                                Mode=TwoWay}"
                                          
                            AssignedDataGridColumnHeader ="{Binding 
                                    RelativeSource={RelativeSource AncestorType={x:Type DataGridColumnHeader}}, 
                                    Path=.}"
                                                
                            AssignedDataGridColumn ="{Binding 
                                    RelativeSource={RelativeSource AncestorType={x:Type DataGridColumnHeader}}, 
                                    Path=Column}"
                                                
                            DataGrid ="{Binding 
                                    RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                    Path=.}"   
                        
                            DataGridItemsSource ="{Binding 
                                    RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                    Path=ItemsSource}"
                        
                            Visibility ="{Binding Path=(local:DataGridExtensions.IsFilterVisible),
                                    RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                    Converter={StaticResource booleanToVisibilityConverter}}">

                        </local:DataGridColumnFilter>

                        <!-- Background="{TemplateBinding Background}" -->
                        <theme:DataGridHeaderBorder Grid.Column="0" 
                                                    Grid.Row="0" 
                                                    SortDirection="{TemplateBinding SortDirection}"
                                                    IsHovered="{TemplateBinding IsMouseOver}"
                                                    IsPressed="{TemplateBinding IsPressed}"
                                                    IsClickable="{TemplateBinding CanUserSort}"
                                                    Background="{DynamicResource {x:Static reskeys:ResourceKeys.DataGridHeaderBackground}}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    
                                                    SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                                    SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                    HorizontalAlignment="Stretch">

                            <Grid Margin="{TemplateBinding Padding}" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition x:Name="SortIconColumn" MinWidth="0" Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                
                                <TextBlock Grid.Column="0" 
                                           x:Name="PART_HeaderText"
                                       Grid.Row="1"
                                       Background="{TemplateBinding Background}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Text="{TemplateBinding  Content}" 
                                       FontWeight="DemiBold"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"                                        
                                       TextWrapping="Wrap"/>
                                <TextBlock Text="*" 
                                           Grid.Column="1"
                                       HorizontalAlignment="Right" 
                                       Background="{TemplateBinding Background}"
                                       Foreground="{TemplateBinding Foreground}"
                                       ToolTip="Filter Applied"
                                       Visibility="{Binding Path=IsFiltered, 
                                            ElementName=dgColumnFilter,
                                            Converter={StaticResource booleanToVisibilityConverter}}" 
                                       />
                                <Viewbox Grid.Column="2" Width="12" Margin="4,0,0,0" x:Name="SortIconViewbox" Visibility="Collapsed">
                                <Path
                                      Stroke="{DynamicResource DataGridColumnHeaderForegroundBrush}"
                                      Data="{StaticResource SortIconAscending}"

                                      x:Name="SortIcon"
                                      >
                                        <!--<Path.RenderTransform>
                                            <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                                        </Path.RenderTransform>-->
                                </Path>
                                </Viewbox>
                            </Grid>


                    
                        </theme:DataGridHeaderBorder>

                        <Thumb Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Visibility="Visible">
                            <Thumb.Style>
                                <Style TargetType="Thumb">
                                    <Style.Resources>
                                        <ResourceDictionary />
                                    </Style.Resources>
                                    <Setter Property="FrameworkElement.Width">
                                        <Setter.Value>
                                            <s:Double>8</s:Double>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Panel.Background">
                                        <Setter.Value>
                                            <SolidColorBrush>#00000000</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="FrameworkElement.Cursor">
                                        <Setter.Value>
                                            <Cursor>SizeWE</Cursor>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Thumb">
                                                <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Panel.Background}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>

                        <Rectangle x:Name="Separator" Fill="{Binding VerticalGridLinesBrush, RelativeSource={RelativeSource AncestorType=DataGrid}}" Width="1" HorizontalAlignment="Right" Margin="0 0 0 0" Grid.RowSpan="2" Grid.Column="1"/>
                        <Thumb Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Name="PART_RightHeaderGripper" HorizontalAlignment="Right">
                            <Thumb.Style>
                                <Style TargetType="Thumb">
                                    <Style.Resources>
                                        <ResourceDictionary />
                                    </Style.Resources>
                                    <Setter Property="FrameworkElement.Width">
                                        <Setter.Value>
                                            <s:Double>6</s:Double>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Panel.Background">
                                        <Setter.Value>
                                            <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="FrameworkElement.Cursor">
                                        <Setter.Value>
                                            <Cursor>SizeWE</Cursor>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Thumb">
                                                <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Panel.Background}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>

                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter TargetName="SortIconColumn" Property="MinWidth" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="SortDirection" Value="{x:Null}">
                <Setter Property="Padding" Value="12,0" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

</ResourceDictionary>
