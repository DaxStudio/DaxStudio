<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnDax.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACEAAAAhCAYAAABX5MJvAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxEAAAsRAX9kX5EAAAPpSURBVFhH1VdLT1NBFPYnsCYx0YURd5iY4BIXJC40QkiM
        0Q1hY8LCkKBr+AF2gRsfLGCnIbhRFkRqIEaJ+IAW5NHSFi2UtJQ+KPTSci8dzzf2XObeTgmQAPEkX+7M
        mZnzfXPOzDQ9J4Q4c2idpw2t8xi4QGgktPn9/oFyXzdPC62zChC4eWlp6UUgEBiKRqOhLFk+nzdnZmYy
        IyMjwuPxiEfP34kv4ZRJ82651leF1qkDSAcHByVRa2urRG1tbQUu3ekQ1575xFNvyIJgXSw37EbGMH30
        rWrr6+tViVVcvH5TigDu9U+V/IthPy1nHpTM5mTYjWi28JsX6+ALrcos6IhVnL9yVVy++0QCguZDy3mU
        zzCM3UQisaPLzqFFfAhmqopoamqSWaqrq3P40U+lUiWUEW2v17u7srLygPiQEUGiOsDtEHF7YF68mozb
        ADm3g0lDTE5OllQSBmxubk6KUf3Dw8NidHR0D+2GhgaRTqdz4KK5n7GhZDKZp36NQ8TDtyFq7tvHX6si
        k8mItGHJfjgSsVQSBu1Oe15CoZDFfnzLItpwo+BDhsiaHSI49W++hjEog/f19Yl4PC4SyQ3pU0kYExMT
        orOzs8I/PT1tqf729naBq8zCkA2yHoeI+68DIr61K/KGIcmDwaAg1bIN1eFwpOCuO8BX1+3v7++vWkKg
        nIlGhwguB9SDXDX46CCVdGmHAOzQ7YdglBPnwT2GeAUyCl15O1YTSZkuGAvZ3NyURCgPUuoOCB8Opk4g
        rSmpBxbkdGWLa2trixS6nrAvIpLaGYKQjez2em9vbxF13t7eFnS/aVhIAnqwirq0YyyXy8mzofpbWlrk
        RriPtXh5KZzj0bIbCmpM08xjQXd3t1wI9SCi022ijirRQRgbG5N15z4d8CLFr/hxc3QU1EcikSl6aLbw
        yqF2CwsLVldXl/D5fA6igxCLxexSoGSIqeHaF5E2zD9Fa29HgwK+BXPPIpQIovw9BCxHfyVtfFfJGXaD
        DuU4vxMniB6VnGE3aIItAldVBfsZeN7hx7uC/o2Xs/ZctOHDmDqnjMOLcNtW0RI9o1E72Hg4a/vRB/Fa
        DmdOyN8ZiMQY7PHwsr2OcHQRCMiEMOwKhKoxCXYNAzmvwZdjlnF0Edz/ubol+xDl+RSTbfyqwt7Pp+x5
        qmCIQUZ4rIzjiwA5jH/SYcgKp1w9B2yqOAXHE6HWu+/bPzFu4/PCGWNzHUrg6CIQlAVg1wM/ErINP7KC
        3cJQBi4T5nPmkDWOWcbRRbCBBLtiQXwY+ZDOxvN2afia8lyI47iEw4s4QfwfIuoJjScM7d/DCsdZQOs8
        bWidpwtx7i+Sn/TSw88LlQAAAABJRU5ErkJggg==
</value>
  </data>
</root>